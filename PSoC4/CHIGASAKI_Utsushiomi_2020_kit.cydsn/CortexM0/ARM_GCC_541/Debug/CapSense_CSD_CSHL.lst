ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_rawFilterData1,28,4
  20              		.global	CapSense_CSD_sensorBaseline
  21              		.bss
  22              		.align	2
  23              		.type	CapSense_CSD_sensorBaseline, %object
  24              		.size	CapSense_CSD_sensorBaseline, 28
  25              	CapSense_CSD_sensorBaseline:
  26 0000 00000000 		.space	28
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.global	CapSense_CSD_sensorBaselineLow
  28              		.align	2
  29              		.type	CapSense_CSD_sensorBaselineLow, %object
  30              		.size	CapSense_CSD_sensorBaselineLow, 14
  31              	CapSense_CSD_sensorBaselineLow:
  32 001c 00000000 		.space	14
  32      00000000 
  32      00000000 
  32      0000
  33              		.global	CapSense_CSD_sensorSignal
  34 002a 0000     		.align	2
  35              		.type	CapSense_CSD_sensorSignal, %object
  36              		.size	CapSense_CSD_sensorSignal, 14
  37              	CapSense_CSD_sensorSignal:
  38 002c 00000000 		.space	14
  38      00000000 
  38      00000000 
  38      0000
  39              		.global	CapSense_CSD_sensorOnMask
  40 003a 0000     		.align	2
  41              		.type	CapSense_CSD_sensorOnMask, %object
  42              		.size	CapSense_CSD_sensorOnMask, 2
  43              	CapSense_CSD_sensorOnMask:
  44 003c 0000     		.space	2
  45              		.comm	CapSense_CSD_lowBaselineResetCnt,14,4
  46              		.global	CapSense_CSD_lowBaselineReset
  47              		.data
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 2


  48              		.align	2
  49              		.type	CapSense_CSD_lowBaselineReset, %object
  50              		.size	CapSense_CSD_lowBaselineReset, 14
  51              	CapSense_CSD_lowBaselineReset:
  52 0000 1E       		.byte	30
  53 0001 1E       		.byte	30
  54 0002 1E       		.byte	30
  55 0003 1E       		.byte	30
  56 0004 1E       		.byte	30
  57 0005 1E       		.byte	30
  58 0006 1E       		.byte	30
  59 0007 1E       		.byte	30
  60 0008 1E       		.byte	30
  61 0009 1E       		.byte	30
  62 000a 1E       		.byte	30
  63 000b 1E       		.byte	30
  64 000c 1E       		.byte	30
  65 000d 1E       		.byte	30
  66              		.global	CapSense_CSD_enableRawFilters
  67              		.type	CapSense_CSD_enableRawFilters, %object
  68              		.size	CapSense_CSD_enableRawFilters, 1
  69              	CapSense_CSD_enableRawFilters:
  70 000e 01       		.byte	1
  71              		.comm	CapSense_CSD_fingerThreshold,14,4
  72              		.comm	CapSense_CSD_noiseThreshold,14,4
  73              		.comm	CapSense_CSD_negativeNoiseThreshold,14,4
  74              		.comm	CapSense_CSD_hysteresis,14,4
  75              		.global	CapSense_CSD_debounce
  76 000f 00       		.align	2
  77              		.type	CapSense_CSD_debounce, %object
  78              		.size	CapSense_CSD_debounce, 14
  79              	CapSense_CSD_debounce:
  80 0010 05       		.byte	5
  81 0011 05       		.byte	5
  82 0012 05       		.byte	5
  83 0013 05       		.byte	5
  84 0014 05       		.byte	5
  85 0015 05       		.byte	5
  86 0016 05       		.byte	5
  87 0017 05       		.byte	5
  88 0018 05       		.byte	5
  89 0019 05       		.byte	5
  90 001a 05       		.byte	5
  91 001b 05       		.byte	5
  92 001c 05       		.byte	5
  93 001d 05       		.byte	5
  94              		.bss
  95 003e 0000     		.align	2
  96              	CapSense_CSD_debounceCounter:
  97 0040 00000000 		.space	15
  97      00000000 
  97      00000000 
  97      000000
  98              		.global	CapSense_CSD_rawDataIndex
  99              		.section	.rodata
 100              		.align	2
 101              		.type	CapSense_CSD_rawDataIndex, %object
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 3


 102              		.size	CapSense_CSD_rawDataIndex, 14
 103              	CapSense_CSD_rawDataIndex:
 104 0000 00       		.byte	0
 105 0001 01       		.byte	1
 106 0002 02       		.byte	2
 107 0003 03       		.byte	3
 108 0004 04       		.byte	4
 109 0005 05       		.byte	5
 110 0006 06       		.byte	6
 111 0007 07       		.byte	7
 112 0008 08       		.byte	8
 113 0009 09       		.byte	9
 114 000a 0A       		.byte	10
 115 000b 0B       		.byte	11
 116 000c 0C       		.byte	12
 117 000d 0D       		.byte	13
 118              		.global	CapSense_CSD_numberOfSensors
 119 000e 0000     		.align	2
 120              		.type	CapSense_CSD_numberOfSensors, %object
 121              		.size	CapSense_CSD_numberOfSensors, 14
 122              	CapSense_CSD_numberOfSensors:
 123 0010 01       		.byte	1
 124 0011 01       		.byte	1
 125 0012 01       		.byte	1
 126 0013 01       		.byte	1
 127 0014 01       		.byte	1
 128 0015 01       		.byte	1
 129 0016 01       		.byte	1
 130 0017 01       		.byte	1
 131 0018 01       		.byte	1
 132 0019 01       		.byte	1
 133 001a 01       		.byte	1
 134 001b 01       		.byte	1
 135 001c 01       		.byte	1
 136 001d 01       		.byte	1
 137              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 138              		.align	2
 139              		.global	CapSense_CSD_BaseInit
 140              		.code	16
 141              		.thumb_func
 142              		.type	CapSense_CSD_BaseInit, %function
 143              	CapSense_CSD_BaseInit:
 144              	.LFB32:
 145              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 4


  14:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_60 CapSense_CSD_config;
  66:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 5


  71:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  92:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2u, /* Button2__BTN */
  93:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     3u, /* Button3__BTN */
  94:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     4u, /* Button4__BTN */
  95:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, /* Button5__BTN */
  96:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     6u, /* Button6__BTN */
  97:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     7u, /* Button7__BTN */
  98:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     8u, /* Button8__BTN */
  99:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     9u, /* Button9__BTN */
 100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, /* Button10__BTN */
 101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     11u, /* Button11__BTN */
 102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* Button12__BTN */
 103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     13u, /* GuardSensor__GRD */
 104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
 107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
 108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button2__BTN */
 110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button3__BTN */
 111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button4__BTN */
 112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button5__BTN */
 113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button6__BTN */
 114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button7__BTN */
 115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button8__BTN */
 116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button9__BTN */
 117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button10__BTN */
 118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button11__BTN */
 119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button12__BTN */
 120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* GuardSensor__GRD */
 121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 6


 128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 146              		.loc 1 161 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 16
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 84B0     		sub	sp, sp, #16
 155              		.cfi_def_cfa_offset 24
 156 0004 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 159              		.loc 1 164 0
 160 0008 0F23     		movs	r3, #15
 161 000a FB18     		adds	r3, r7, r3
 162 000c 1649     		ldr	r1, .L2
 163 000e 7A68     		ldr	r2, [r7, #4]
 164 0010 8A18     		adds	r2, r1, r2
 165 0012 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 7


 166 0014 1A70     		strb	r2, [r3]
 165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 167              		.loc 1 178 0
 168 0016 154B     		ldr	r3, .L2+4
 169 0018 7A68     		ldr	r2, [r7, #4]
 170 001a 5200     		lsls	r2, r2, #1
 171 001c D15A     		ldrh	r1, [r2, r3]
 172 001e 144B     		ldr	r3, .L2+8
 173 0020 7A68     		ldr	r2, [r7, #4]
 174 0022 5200     		lsls	r2, r2, #1
 175 0024 D152     		strh	r1, [r2, r3]
 179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 176              		.loc 1 179 0
 177 0026 134A     		ldr	r2, .L2+12
 178 0028 7B68     		ldr	r3, [r7, #4]
 179 002a D318     		adds	r3, r2, r3
 180 002c 0022     		movs	r2, #0
 181 002e 1A70     		strb	r2, [r3]
 180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 182              		.loc 1 180 0
 183 0030 114A     		ldr	r2, .L2+16
 184 0032 7B68     		ldr	r3, [r7, #4]
 185 0034 D318     		adds	r3, r2, r3
 186 0036 0022     		movs	r2, #0
 187 0038 1A70     		strb	r2, [r3]
 181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 188              		.loc 1 182 0
 189 003a 0F23     		movs	r3, #15
 190 003c FB18     		adds	r3, r7, r3
 191 003e 1B78     		ldrb	r3, [r3]
 192 0040 0F22     		movs	r2, #15
 193 0042 BA18     		adds	r2, r7, r2
 194 0044 1278     		ldrb	r2, [r2]
 195 0046 0D49     		ldr	r1, .L2+20
 196 0048 895C     		ldrb	r1, [r1, r2]
 197 004a 0D4A     		ldr	r2, .L2+24
 198 004c D154     		strb	r1, [r2, r3]
 183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 8


 189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 199              		.loc 1 197 0
 200 004e 074B     		ldr	r3, .L2+4
 201 0050 7A68     		ldr	r2, [r7, #4]
 202 0052 5200     		lsls	r2, r2, #1
 203 0054 D15A     		ldrh	r1, [r2, r3]
 204 0056 0B4B     		ldr	r3, .L2+28
 205 0058 7A68     		ldr	r2, [r7, #4]
 206 005a 5200     		lsls	r2, r2, #1
 207 005c D152     		strh	r1, [r2, r3]
 198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 208              		.loc 1 209 0
 209 005e C046     		nop
 210 0060 BD46     		mov	sp, r7
 211 0062 04B0     		add	sp, sp, #16
 212              		@ sp needed
 213 0064 80BD     		pop	{r7, pc}
 214              	.L3:
 215 0066 C046     		.align	2
 216              	.L2:
 217 0068 00000000 		.word	CapSense_CSD_widgetNumber
 218 006c 00000000 		.word	CapSense_CSD_sensorRaw
 219 0070 00000000 		.word	CapSense_CSD_sensorBaseline
 220 0074 00000000 		.word	CapSense_CSD_sensorBaselineLow
 221 0078 00000000 		.word	CapSense_CSD_sensorSignal
 222 007c 00000000 		.word	CapSense_CSD_debounce
 223 0080 40000000 		.word	CapSense_CSD_debounceCounter
 224 0084 00000000 		.word	CapSense_CSD_rawFilterData1
 225              		.cfi_endproc
 226              	.LFE32:
 227              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 228              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 229              		.align	2
 230              		.global	CapSense_CSD_InitializeSensorBaseline
 231              		.code	16
 232              		.thumb_func
 233              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 234              	CapSense_CSD_InitializeSensorBaseline:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 9


 235              	.LFB33:
 210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 236              		.loc 1 237 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240 0000 80B5     		push	{r7, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 82B0     		sub	sp, sp, #8
 245              		.cfi_def_cfa_offset 16
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 249              		.loc 1 239 0
 250 0008 7B68     		ldr	r3, [r7, #4]
 251 000a 1800     		movs	r0, r3
 252 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 253              		.loc 1 240 0
 254 0010 C046     		nop
 255              	.L5:
 256              		.loc 1 240 0 is_stmt 0 discriminator 1
 257 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 258 0016 031E     		subs	r3, r0, #0
 259 0018 FBD1     		bne	.L5
 241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 10


 242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 260              		.loc 1 246 0 is_stmt 1
 261 001a 7B68     		ldr	r3, [r7, #4]
 262 001c 1800     		movs	r0, r3
 263 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 264              		.loc 1 247 0
 265 0022 C046     		nop
 266 0024 BD46     		mov	sp, r7
 267 0026 02B0     		add	sp, sp, #8
 268              		@ sp needed
 269 0028 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE33:
 272              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 273 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 274              		.align	2
 275              		.global	CapSense_CSD_InitializeAllBaselines
 276              		.code	16
 277              		.thumb_func
 278              		.type	CapSense_CSD_InitializeAllBaselines, %function
 279              	CapSense_CSD_InitializeAllBaselines:
 280              	.LFB34:
 248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 281              		.loc 1 274 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 11


 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 82B0     		sub	sp, sp, #8
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 293              		.loc 1 277 0
 294 0006 0023     		movs	r3, #0
 295 0008 7B60     		str	r3, [r7, #4]
 296 000a 06E0     		b	.L7
 297              	.L8:
 278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 298              		.loc 1 279 0 discriminator 3
 299 000c 7B68     		ldr	r3, [r7, #4]
 300 000e 1800     		movs	r0, r3
 301 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 302              		.loc 1 277 0 discriminator 3
 303 0014 7B68     		ldr	r3, [r7, #4]
 304 0016 0133     		adds	r3, r3, #1
 305 0018 7B60     		str	r3, [r7, #4]
 306              	.L7:
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 307              		.loc 1 277 0 is_stmt 0 discriminator 1
 308 001a 7B68     		ldr	r3, [r7, #4]
 309 001c 0D2B     		cmp	r3, #13
 310 001e F5D9     		bls	.L8
 280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 311              		.loc 1 281 0 is_stmt 1
 312 0020 C046     		nop
 313 0022 BD46     		mov	sp, r7
 314 0024 02B0     		add	sp, sp, #8
 315              		@ sp needed
 316 0026 80BD     		pop	{r7, pc}
 317              		.cfi_endproc
 318              	.LFE34:
 319              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 320              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 321              		.align	2
 322              		.global	CapSense_CSD_InitializeEnabledBaselines
 323              		.code	16
 324              		.thumb_func
 325              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 326              	CapSense_CSD_InitializeEnabledBaselines:
 327              	.LFB35:
 282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 12


 286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 328              		.loc 1 309 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 8
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332 0000 80B5     		push	{r7, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 82B0     		sub	sp, sp, #8
 337              		.cfi_def_cfa_offset 16
 338 0004 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 340              		.loc 1 313 0
 341 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 342              		.loc 1 314 0
 343 000a C046     		nop
 344              	.L10:
 345              		.loc 1 314 0 is_stmt 0 discriminator 1
 346 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 347 0010 031E     		subs	r3, r0, #0
 348 0012 FBD1     		bne	.L10
 315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 349              		.loc 1 319 0 is_stmt 1
 350 0014 0023     		movs	r3, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 13


 351 0016 7B60     		str	r3, [r7, #4]
 352 0018 11E0     		b	.L11
 353              	.L13:
 320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 354              		.loc 1 321 0
 355 001a 7A68     		ldr	r2, [r7, #4]
 356 001c 0B4B     		ldr	r3, .L14
 357 001e 1100     		movs	r1, r2
 358 0020 1800     		movs	r0, r3
 359 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 360 0026 0300     		movs	r3, r0
 361 0028 3B60     		str	r3, [r7]
 322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 362              		.loc 1 324 0
 363 002a 3B68     		ldr	r3, [r7]
 364 002c 002B     		cmp	r3, #0
 365 002e 03D0     		beq	.L12
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 366              		.loc 1 327 0
 367 0030 7B68     		ldr	r3, [r7, #4]
 368 0032 1800     		movs	r0, r3
 369 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 370              	.L12:
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 371              		.loc 1 319 0 discriminator 2
 372 0038 7B68     		ldr	r3, [r7, #4]
 373 003a 0133     		adds	r3, r3, #1
 374 003c 7B60     		str	r3, [r7, #4]
 375              	.L11:
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 376              		.loc 1 319 0 is_stmt 0 discriminator 1
 377 003e 7B68     		ldr	r3, [r7, #4]
 378 0040 0D2B     		cmp	r3, #13
 379 0042 EAD9     		bls	.L13
 328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 380              		.loc 1 330 0 is_stmt 1
 381 0044 C046     		nop
 382 0046 BD46     		mov	sp, r7
 383 0048 02B0     		add	sp, sp, #8
 384              		@ sp needed
 385 004a 80BD     		pop	{r7, pc}
 386              	.L15:
 387              		.align	2
 388              	.L14:
 389 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 390              		.cfi_endproc
 391              	.LFE35:
 392              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 393              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 394              		.align	2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 14


 395              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 396              		.code	16
 397              		.thumb_func
 398              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 399              	CapSense_CSD_UpdateBaselineNoThreshold:
 400              	.LFB36:
 331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 401              		.loc 1 374 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 24
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 90B5     		push	{r4, r7, lr}
 406              		.cfi_def_cfa_offset 12
 407              		.cfi_offset 4, -12
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 15


 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 87B0     		sub	sp, sp, #28
 411              		.cfi_def_cfa_offset 40
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 7860     		str	r0, [r7, #4]
 375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 415              		.loc 1 379 0
 416 0008 0F23     		movs	r3, #15
 417 000a FB18     		adds	r3, r7, r3
 418 000c 7249     		ldr	r1, .L28
 419 000e 7A68     		ldr	r2, [r7, #4]
 420 0010 8A18     		adds	r2, r1, r2
 421 0012 1278     		ldrb	r2, [r2]
 422 0014 1A70     		strb	r2, [r3]
 380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 423              		.loc 1 388 0
 424 0016 0F23     		movs	r3, #15
 425 0018 FB18     		adds	r3, r7, r3
 426 001a 1A78     		ldrb	r2, [r3]
 427 001c 0E23     		movs	r3, #14
 428 001e FB18     		adds	r3, r7, r3
 429 0020 6E49     		ldr	r1, .L28+4
 430 0022 8A5C     		ldrb	r2, [r1, r2]
 431 0024 1A70     		strb	r2, [r3]
 389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 432              		.loc 1 389 0
 433 0026 1023     		movs	r3, #16
 434 0028 FB18     		adds	r3, r7, r3
 435 002a 6D4A     		ldr	r2, .L28+8
 436 002c 7968     		ldr	r1, [r7, #4]
 437 002e 4900     		lsls	r1, r1, #1
 438 0030 8A5A     		ldrh	r2, [r1, r2]
 439 0032 1A80     		strh	r2, [r3]
 390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 440              		.loc 1 392 0
 441 0034 6B4B     		ldr	r3, .L28+12
 442 0036 1B78     		ldrb	r3, [r3]
 443 0038 002B     		cmp	r3, #0
 444 003a 15D0     		beq	.L17
 393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 16


 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 445              		.loc 1 425 0
 446 003c 6A4B     		ldr	r3, .L28+16
 447 003e 7A68     		ldr	r2, [r7, #4]
 448 0040 5200     		lsls	r2, r2, #1
 449 0042 D25A     		ldrh	r2, [r2, r3]
 450 0044 1023     		movs	r3, #16
 451 0046 FC18     		adds	r4, r7, r3
 452 0048 1023     		movs	r3, #16
 453 004a FB18     		adds	r3, r7, r3
 454 004c 1B88     		ldrh	r3, [r3]
 455 004e 1100     		movs	r1, r2
 456 0050 1800     		movs	r0, r3
 457 0052 FFF7FEFF 		bl	CapSense_CSD_IIR16Filter
 458 0056 0300     		movs	r3, r0
 459 0058 2380     		strh	r3, [r4]
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 460              		.loc 1 426 0
 461 005a 634B     		ldr	r3, .L28+16
 462 005c 7A68     		ldr	r2, [r7, #4]
 463 005e 5200     		lsls	r2, r2, #1
 464 0060 1021     		movs	r1, #16
 465 0062 7918     		adds	r1, r7, r1
 466 0064 0988     		ldrh	r1, [r1]
 467 0066 D152     		strh	r1, [r2, r3]
 468              	.L17:
 427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 17


 428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 469              		.loc 1 435 0
 470 0068 7B68     		ldr	r3, [r7, #4]
 471 006a D9B2     		uxtb	r1, r3
 472 006c 5C4A     		ldr	r2, .L28+8
 473 006e 5F4B     		ldr	r3, .L28+20
 474 0070 1800     		movs	r0, r3
 475 0072 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 476              		.loc 1 440 0
 477 0076 5E4B     		ldr	r3, .L28+24
 478 0078 7A68     		ldr	r2, [r7, #4]
 479 007a 5200     		lsls	r2, r2, #1
 480 007c D35A     		ldrh	r3, [r2, r3]
 481 007e 1022     		movs	r2, #16
 482 0080 BA18     		adds	r2, r7, r2
 483 0082 1288     		ldrh	r2, [r2]
 484 0084 9A42     		cmp	r2, r3
 485 0086 12D3     		bcc	.L18
 441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 486              		.loc 1 442 0
 487 0088 5A4A     		ldr	r2, .L28+28
 488 008a 7B68     		ldr	r3, [r7, #4]
 489 008c D318     		adds	r3, r2, r3
 490 008e 0022     		movs	r2, #0
 491 0090 1A70     		strb	r2, [r3]
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 492              		.loc 1 443 0
 493 0092 574B     		ldr	r3, .L28+24
 494 0094 7A68     		ldr	r2, [r7, #4]
 495 0096 5200     		lsls	r2, r2, #1
 496 0098 D25A     		ldrh	r2, [r2, r3]
 497 009a 1223     		movs	r3, #18
 498 009c FB18     		adds	r3, r7, r3
 499 009e 1021     		movs	r1, #16
 500 00a0 7918     		adds	r1, r7, r1
 501 00a2 0988     		ldrh	r1, [r1]
 502 00a4 8A1A     		subs	r2, r1, r2
 503 00a6 1A80     		strh	r2, [r3]
 444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 504              		.loc 1 444 0
 505 00a8 0123     		movs	r3, #1
 506 00aa 7B61     		str	r3, [r7, #20]
 507 00ac 0CE0     		b	.L19
 508              	.L18:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 18


 445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 509              		.loc 1 448 0
 510 00ae 504B     		ldr	r3, .L28+24
 511 00b0 7A68     		ldr	r2, [r7, #4]
 512 00b2 5200     		lsls	r2, r2, #1
 513 00b4 D15A     		ldrh	r1, [r2, r3]
 514 00b6 1223     		movs	r3, #18
 515 00b8 FB18     		adds	r3, r7, r3
 516 00ba 1022     		movs	r2, #16
 517 00bc BA18     		adds	r2, r7, r2
 518 00be 1288     		ldrh	r2, [r2]
 519 00c0 8A1A     		subs	r2, r1, r2
 520 00c2 1A80     		strh	r2, [r3]
 449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 521              		.loc 1 449 0
 522 00c4 0023     		movs	r3, #0
 523 00c6 7B61     		str	r3, [r7, #20]
 524              	.L19:
 450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 525              		.loc 1 453 0
 526 00c8 7B69     		ldr	r3, [r7, #20]
 527 00ca 002B     		cmp	r3, #0
 528 00cc 2AD1     		bne	.L20
 529              		.loc 1 453 0 is_stmt 0 discriminator 1
 530 00ce 0F23     		movs	r3, #15
 531 00d0 FB18     		adds	r3, r7, r3
 532 00d2 1B78     		ldrb	r3, [r3]
 533 00d4 484A     		ldr	r2, .L28+32
 534 00d6 D35C     		ldrb	r3, [r2, r3]
 535 00d8 9BB2     		uxth	r3, r3
 536 00da 1222     		movs	r2, #18
 537 00dc BA18     		adds	r2, r7, r2
 538 00de 1288     		ldrh	r2, [r2]
 539 00e0 9A42     		cmp	r2, r3
 540 00e2 1FD9     		bls	.L20
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 541              		.loc 1 458 0 is_stmt 1
 542 00e4 434A     		ldr	r2, .L28+28
 543 00e6 7B68     		ldr	r3, [r7, #4]
 544 00e8 D318     		adds	r3, r2, r3
 545 00ea 1A78     		ldrb	r2, [r3]
 546 00ec 4349     		ldr	r1, .L28+36
 547 00ee 7B68     		ldr	r3, [r7, #4]
 548 00f0 CB18     		adds	r3, r1, r3
 549 00f2 1B78     		ldrb	r3, [r3]
 550 00f4 9A42     		cmp	r2, r3
 551 00f6 09D3     		bcc	.L21
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 19


 459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 552              		.loc 1 460 0
 553 00f8 7B68     		ldr	r3, [r7, #4]
 554 00fa 1800     		movs	r0, r3
 555 00fc FFF7FEFF 		bl	CapSense_CSD_BaseInit
 461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 556              		.loc 1 461 0
 557 0100 3C4A     		ldr	r2, .L28+28
 558 0102 7B68     		ldr	r3, [r7, #4]
 559 0104 D318     		adds	r3, r2, r3
 560 0106 0022     		movs	r2, #0
 561 0108 1A70     		strb	r2, [r3]
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 562              		.loc 1 458 0
 563 010a 3AE0     		b	.L23
 564              	.L21:
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 565              		.loc 1 465 0
 566 010c 394A     		ldr	r2, .L28+28
 567 010e 7B68     		ldr	r3, [r7, #4]
 568 0110 D318     		adds	r3, r2, r3
 569 0112 1B78     		ldrb	r3, [r3]
 570 0114 0133     		adds	r3, r3, #1
 571 0116 D9B2     		uxtb	r1, r3
 572 0118 364A     		ldr	r2, .L28+28
 573 011a 7B68     		ldr	r3, [r7, #4]
 574 011c D318     		adds	r3, r2, r3
 575 011e 0A1C     		adds	r2, r1, #0
 576 0120 1A70     		strb	r2, [r3]
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 577              		.loc 1 458 0
 578 0122 2EE0     		b	.L23
 579              	.L20:
 466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 20


 486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 580              		.loc 1 486 0
 581 0124 324B     		ldr	r3, .L28+24
 582 0126 7A68     		ldr	r2, [r7, #4]
 583 0128 5200     		lsls	r2, r2, #1
 584 012a D35A     		ldrh	r3, [r2, r3]
 585 012c 1B02     		lsls	r3, r3, #8
 586 012e BB60     		str	r3, [r7, #8]
 487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 587              		.loc 1 487 0
 588 0130 334A     		ldr	r2, .L28+40
 589 0132 7B68     		ldr	r3, [r7, #4]
 590 0134 D318     		adds	r3, r2, r3
 591 0136 1B78     		ldrb	r3, [r3]
 592 0138 1A00     		movs	r2, r3
 593 013a BB68     		ldr	r3, [r7, #8]
 594 013c 1343     		orrs	r3, r2
 595 013e BB60     		str	r3, [r7, #8]
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 596              		.loc 1 490 0
 597 0140 1023     		movs	r3, #16
 598 0142 FB18     		adds	r3, r7, r3
 599 0144 1B88     		ldrh	r3, [r3]
 600 0146 BA68     		ldr	r2, [r7, #8]
 601 0148 D318     		adds	r3, r2, r3
 602 014a BB60     		str	r3, [r7, #8]
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 603              		.loc 1 493 0
 604 014c 284B     		ldr	r3, .L28+24
 605 014e 7A68     		ldr	r2, [r7, #4]
 606 0150 5200     		lsls	r2, r2, #1
 607 0152 D35A     		ldrh	r3, [r2, r3]
 608 0154 1A00     		movs	r2, r3
 609 0156 BB68     		ldr	r3, [r7, #8]
 610 0158 9B1A     		subs	r3, r3, r2
 611 015a BB60     		str	r3, [r7, #8]
 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 612              		.loc 1 496 0
 613 015c BB68     		ldr	r3, [r7, #8]
 614 015e 1B0A     		lsrs	r3, r3, #8
 615 0160 99B2     		uxth	r1, r3
 616 0162 234B     		ldr	r3, .L28+24
 617 0164 7A68     		ldr	r2, [r7, #4]
 618 0166 5200     		lsls	r2, r2, #1
 619 0168 D152     		strh	r1, [r2, r3]
 497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 620              		.loc 1 497 0
 621 016a BB68     		ldr	r3, [r7, #8]
 622 016c D9B2     		uxtb	r1, r3
 623 016e 244A     		ldr	r2, .L28+40
 624 0170 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 21


 625 0172 D318     		adds	r3, r2, r3
 626 0174 0A1C     		adds	r2, r1, #0
 627 0176 1A70     		strb	r2, [r3]
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 628              		.loc 1 499 0
 629 0178 1E4A     		ldr	r2, .L28+28
 630 017a 7B68     		ldr	r3, [r7, #4]
 631 017c D318     		adds	r3, r2, r3
 632 017e 0022     		movs	r2, #0
 633 0180 1A70     		strb	r2, [r3]
 634              	.L23:
 500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 635              		.loc 1 506 0
 636 0182 0E23     		movs	r3, #14
 637 0184 FB18     		adds	r3, r7, r3
 638 0186 1B78     		ldrb	r3, [r3]
 639 0188 9BB2     		uxth	r3, r3
 640 018a 1222     		movs	r2, #18
 641 018c BA18     		adds	r2, r7, r2
 642 018e 1288     		ldrh	r2, [r2]
 643 0190 9A42     		cmp	r2, r3
 644 0192 17D9     		bls	.L24
 645              		.loc 1 506 0 is_stmt 0 discriminator 1
 646 0194 7B69     		ldr	r3, [r7, #20]
 647 0196 002B     		cmp	r3, #0
 648 0198 14D0     		beq	.L24
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 649              		.loc 1 510 0 is_stmt 1
 650 019a 1223     		movs	r3, #18
 651 019c FB18     		adds	r3, r7, r3
 652 019e 1B88     		ldrh	r3, [r3]
 653 01a0 FF2B     		cmp	r3, #255
 654 01a2 05D9     		bls	.L25
 511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 655              		.loc 1 512 0
 656 01a4 174A     		ldr	r2, .L28+44
 657 01a6 7B68     		ldr	r3, [r7, #4]
 658 01a8 D318     		adds	r3, r2, r3
 659 01aa FF22     		movs	r2, #255
 660 01ac 1A70     		strb	r2, [r3]
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 661              		.loc 1 510 0
 662 01ae 0EE0     		b	.L27
 663              	.L25:
 513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 22


 515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 664              		.loc 1 516 0
 665 01b0 1223     		movs	r3, #18
 666 01b2 FB18     		adds	r3, r7, r3
 667 01b4 1B88     		ldrh	r3, [r3]
 668 01b6 D9B2     		uxtb	r1, r3
 669 01b8 124A     		ldr	r2, .L28+44
 670 01ba 7B68     		ldr	r3, [r7, #4]
 671 01bc D318     		adds	r3, r2, r3
 672 01be 0A1C     		adds	r2, r1, #0
 673 01c0 1A70     		strb	r2, [r3]
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 674              		.loc 1 510 0
 675 01c2 04E0     		b	.L27
 676              	.L24:
 517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 677              		.loc 1 525 0
 678 01c4 0F4A     		ldr	r2, .L28+44
 679 01c6 7B68     		ldr	r3, [r7, #4]
 680 01c8 D318     		adds	r3, r2, r3
 681 01ca 0022     		movs	r2, #0
 682 01cc 1A70     		strb	r2, [r3]
 683              	.L27:
 526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 684              		.loc 1 532 0
 685 01ce C046     		nop
 686 01d0 BD46     		mov	sp, r7
 687 01d2 07B0     		add	sp, sp, #28
 688              		@ sp needed
 689 01d4 90BD     		pop	{r4, r7, pc}
 690              	.L29:
 691 01d6 C046     		.align	2
 692              	.L28:
 693 01d8 00000000 		.word	CapSense_CSD_widgetNumber
 694 01dc 00000000 		.word	CapSense_CSD_noiseThreshold
 695 01e0 00000000 		.word	CapSense_CSD_sensorRaw
 696 01e4 00000000 		.word	CapSense_CSD_enableRawFilters
 697 01e8 00000000 		.word	CapSense_CSD_rawFilterData1
 698 01ec 00000000 		.word	CapSense_CSD_config
 699 01f0 00000000 		.word	CapSense_CSD_sensorBaseline
 700 01f4 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 701 01f8 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 23


 702 01fc 00000000 		.word	CapSense_CSD_lowBaselineReset
 703 0200 00000000 		.word	CapSense_CSD_sensorBaselineLow
 704 0204 00000000 		.word	CapSense_CSD_sensorSignal
 705              		.cfi_endproc
 706              	.LFE36:
 707              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 708              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 709              		.align	2
 710              		.global	CapSense_CSD_UpdateSensorBaseline
 711              		.code	16
 712              		.thumb_func
 713              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 714              	CapSense_CSD_UpdateSensorBaseline:
 715              	.LFB37:
 533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 716              		.loc 1 566 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 24


 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 729              		.loc 1 578 0
 730 0008 7B68     		ldr	r3, [r7, #4]
 731 000a 1800     		movs	r0, r3
 732 000c FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 733              		.loc 1 581 0
 734 0010 7B68     		ldr	r3, [r7, #4]
 735 0012 1800     		movs	r0, r3
 736 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 737              		.loc 1 587 0
 738 0018 C046     		nop
 739 001a BD46     		mov	sp, r7
 740 001c 02B0     		add	sp, sp, #8
 741              		@ sp needed
 742 001e 80BD     		pop	{r7, pc}
 743              		.cfi_endproc
 744              	.LFE37:
 745              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 746              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 747              		.align	2
 748              		.global	CapSense_CSD_UpdateEnabledBaselines
 749              		.code	16
 750              		.thumb_func
 751              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 752              	CapSense_CSD_UpdateEnabledBaselines:
 753              	.LFB38:
 588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 25


 595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 754              		.loc 1 620 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 8
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 82B0     		sub	sp, sp, #8
 763              		.cfi_def_cfa_offset 16
 764 0004 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 766              		.loc 1 624 0
 767 0006 0023     		movs	r3, #0
 768 0008 7B60     		str	r3, [r7, #4]
 769 000a 11E0     		b	.L32
 770              	.L34:
 625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 771              		.loc 1 626 0
 772 000c 7A68     		ldr	r2, [r7, #4]
 773 000e 0C4B     		ldr	r3, .L35
 774 0010 1100     		movs	r1, r2
 775 0012 1800     		movs	r0, r3
 776 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 777 0018 0300     		movs	r3, r0
 778 001a 3B60     		str	r3, [r7]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 26


 627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 779              		.loc 1 628 0
 780 001c 3B68     		ldr	r3, [r7]
 781 001e 002B     		cmp	r3, #0
 782 0020 03D0     		beq	.L33
 629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 783              		.loc 1 630 0
 784 0022 7B68     		ldr	r3, [r7, #4]
 785 0024 1800     		movs	r0, r3
 786 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 787              	.L33:
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 788              		.loc 1 624 0 discriminator 2
 789 002a 7B68     		ldr	r3, [r7, #4]
 790 002c 0133     		adds	r3, r3, #1
 791 002e 7B60     		str	r3, [r7, #4]
 792              	.L32:
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 793              		.loc 1 624 0 is_stmt 0 discriminator 1
 794 0030 7B68     		ldr	r3, [r7, #4]
 795 0032 0D2B     		cmp	r3, #13
 796 0034 EAD9     		bls	.L34
 631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 797              		.loc 1 633 0 is_stmt 1
 798 0036 C046     		nop
 799 0038 BD46     		mov	sp, r7
 800 003a 02B0     		add	sp, sp, #8
 801              		@ sp needed
 802 003c 80BD     		pop	{r7, pc}
 803              	.L36:
 804 003e C046     		.align	2
 805              	.L35:
 806 0040 00000000 		.word	CapSense_CSD_sensorEnableMask
 807              		.cfi_endproc
 808              	.LFE38:
 809              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 810              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 811              		.align	2
 812              		.global	CapSense_CSD_UpdateWidgetBaseline
 813              		.code	16
 814              		.thumb_func
 815              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 816              	CapSense_CSD_UpdateWidgetBaseline:
 817              	.LFB39:
 634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 27


 643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 818              		.loc 1 665 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 32
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 88B0     		sub	sp, sp, #32
 827              		.cfi_def_cfa_offset 40
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 830 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 831              		.loc 1 673 0
 832 0008 174A     		ldr	r2, .L41
 833 000a 7B68     		ldr	r3, [r7, #4]
 834 000c D318     		adds	r3, r2, r3
 835 000e 1B78     		ldrb	r3, [r3]
 836 0010 BB61     		str	r3, [r7, #24]
 674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 837              		.loc 1 676 0
 838 0012 164A     		ldr	r2, .L41+4
 839 0014 7B68     		ldr	r3, [r7, #4]
 840 0016 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 28


 841 0018 1B78     		ldrb	r3, [r3]
 842 001a 7B61     		str	r3, [r7, #20]
 677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 843              		.loc 1 679 0
 844 001c 134A     		ldr	r2, .L41+4
 845 001e 7B68     		ldr	r3, [r7, #4]
 846 0020 D318     		adds	r3, r2, r3
 847 0022 1B78     		ldrb	r3, [r3]
 848 0024 1A00     		movs	r2, r3
 849 0026 BB69     		ldr	r3, [r7, #24]
 850 0028 D318     		adds	r3, r2, r3
 851 002a 3B61     		str	r3, [r7, #16]
 680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 852              		.loc 1 681 0
 853 002c 7B69     		ldr	r3, [r7, #20]
 854 002e FB61     		str	r3, [r7, #28]
 855 0030 11E0     		b	.L38
 856              	.L40:
 682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 857              		.loc 1 683 0
 858 0032 FA69     		ldr	r2, [r7, #28]
 859 0034 0E4B     		ldr	r3, .L41+8
 860 0036 1100     		movs	r1, r2
 861 0038 1800     		movs	r0, r3
 862 003a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 863 003e 0300     		movs	r3, r0
 864 0040 FB60     		str	r3, [r7, #12]
 684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 865              		.loc 1 685 0
 866 0042 FB68     		ldr	r3, [r7, #12]
 867 0044 002B     		cmp	r3, #0
 868 0046 03D0     		beq	.L39
 686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 869              		.loc 1 687 0
 870 0048 FB69     		ldr	r3, [r7, #28]
 871 004a 1800     		movs	r0, r3
 872 004c FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 873              	.L39:
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 874              		.loc 1 681 0 discriminator 2
 875 0050 FB69     		ldr	r3, [r7, #28]
 876 0052 0133     		adds	r3, r3, #1
 877 0054 FB61     		str	r3, [r7, #28]
 878              	.L38:
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 879              		.loc 1 681 0 is_stmt 0 discriminator 1
 880 0056 FA69     		ldr	r2, [r7, #28]
 881 0058 3B69     		ldr	r3, [r7, #16]
 882 005a 9A42     		cmp	r2, r3
 883 005c E9D3     		bcc	.L40
 688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 29


 689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 884              		.loc 1 690 0 is_stmt 1
 885 005e C046     		nop
 886 0060 BD46     		mov	sp, r7
 887 0062 08B0     		add	sp, sp, #32
 888              		@ sp needed
 889 0064 80BD     		pop	{r7, pc}
 890              	.L42:
 891 0066 C046     		.align	2
 892              	.L41:
 893 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 894 006c 00000000 		.word	CapSense_CSD_rawDataIndex
 895 0070 00000000 		.word	CapSense_CSD_sensorEnableMask
 896              		.cfi_endproc
 897              	.LFE39:
 898              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 899              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 900              		.align	2
 901              		.global	CapSense_CSD_GetBaselineData
 902              		.code	16
 903              		.thumb_func
 904              		.type	CapSense_CSD_GetBaselineData, %function
 905              	CapSense_CSD_GetBaselineData:
 906              	.LFB40:
 691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 907              		.loc 1 714 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 30


 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 920              		.loc 1 715 0
 921 0008 034B     		ldr	r3, .L45
 922 000a 7A68     		ldr	r2, [r7, #4]
 923 000c 5200     		lsls	r2, r2, #1
 924 000e D35A     		ldrh	r3, [r2, r3]
 716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 925              		.loc 1 716 0
 926 0010 1800     		movs	r0, r3
 927 0012 BD46     		mov	sp, r7
 928 0014 02B0     		add	sp, sp, #8
 929              		@ sp needed
 930 0016 80BD     		pop	{r7, pc}
 931              	.L46:
 932              		.align	2
 933              	.L45:
 934 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 935              		.cfi_endproc
 936              	.LFE40:
 937              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 938              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 939              		.align	2
 940              		.global	CapSense_CSD_SetBaselineData
 941              		.code	16
 942              		.thumb_func
 943              		.type	CapSense_CSD_SetBaselineData, %function
 944              	CapSense_CSD_SetBaselineData:
 945              	.LFB41:
 717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 31


 741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 946              		.loc 1 741 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 8
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950 0000 80B5     		push	{r7, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 82B0     		sub	sp, sp, #8
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              		.cfi_def_cfa_register 7
 958 0006 7860     		str	r0, [r7, #4]
 959 0008 0A00     		movs	r2, r1
 960 000a BB1C     		adds	r3, r7, #2
 961 000c 1A80     		strh	r2, [r3]
 742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 962              		.loc 1 742 0
 963 000e 054B     		ldr	r3, .L48
 964 0010 7A68     		ldr	r2, [r7, #4]
 965 0012 5200     		lsls	r2, r2, #1
 966 0014 B91C     		adds	r1, r7, #2
 967 0016 0988     		ldrh	r1, [r1]
 968 0018 D152     		strh	r1, [r2, r3]
 743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 969              		.loc 1 743 0
 970 001a C046     		nop
 971 001c BD46     		mov	sp, r7
 972 001e 02B0     		add	sp, sp, #8
 973              		@ sp needed
 974 0020 80BD     		pop	{r7, pc}
 975              	.L49:
 976 0022 C046     		.align	2
 977              	.L48:
 978 0024 00000000 		.word	CapSense_CSD_sensorBaseline
 979              		.cfi_endproc
 980              	.LFE41:
 981              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 982              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 983              		.align	2
 984              		.global	CapSense_CSD_GetDiffCountData
 985              		.code	16
 986              		.thumb_func
 987              		.type	CapSense_CSD_GetDiffCountData, %function
 988              	CapSense_CSD_GetDiffCountData:
 989              	.LFB42:
 744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 32


 754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 990              		.loc 1 768 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 8
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 1003              		.loc 1 769 0
 1004 0008 034A     		ldr	r2, .L52
 1005 000a 7B68     		ldr	r3, [r7, #4]
 1006 000c D318     		adds	r3, r2, r3
 1007 000e 1B78     		ldrb	r3, [r3]
 770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1008              		.loc 1 770 0
 1009 0010 1800     		movs	r0, r3
 1010 0012 BD46     		mov	sp, r7
 1011 0014 02B0     		add	sp, sp, #8
 1012              		@ sp needed
 1013 0016 80BD     		pop	{r7, pc}
 1014              	.L53:
 1015              		.align	2
 1016              	.L52:
 1017 0018 00000000 		.word	CapSense_CSD_sensorSignal
 1018              		.cfi_endproc
 1019              	.LFE42:
 1020              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 1021              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_CSD_SetDiffCountData
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_CSD_SetDiffCountData, %function
 1027              	CapSense_CSD_SetDiffCountData:
 1028              	.LFB43:
 771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 33


 772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1029              		.loc 1 795 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 82B0     		sub	sp, sp, #8
 1038              		.cfi_def_cfa_offset 16
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 1041 0006 7860     		str	r0, [r7, #4]
 1042 0008 0A00     		movs	r2, r1
 1043 000a FB1C     		adds	r3, r7, #3
 1044 000c 1A70     		strb	r2, [r3]
 796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 1045              		.loc 1 796 0
 1046 000e 054A     		ldr	r2, .L55
 1047 0010 7B68     		ldr	r3, [r7, #4]
 1048 0012 D318     		adds	r3, r2, r3
 1049 0014 FA1C     		adds	r2, r7, #3
 1050 0016 1278     		ldrb	r2, [r2]
 1051 0018 1A70     		strb	r2, [r3]
 797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1052              		.loc 1 797 0
 1053 001a C046     		nop
 1054 001c BD46     		mov	sp, r7
 1055 001e 02B0     		add	sp, sp, #8
 1056              		@ sp needed
 1057 0020 80BD     		pop	{r7, pc}
 1058              	.L56:
 1059 0022 C046     		.align	2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 34


 1060              	.L55:
 1061 0024 00000000 		.word	CapSense_CSD_sensorSignal
 1062              		.cfi_endproc
 1063              	.LFE43:
 1064              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 1065              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1066              		.align	2
 1067              		.global	CapSense_CSD_GetFingerThreshold
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	CapSense_CSD_GetFingerThreshold, %function
 1071              	CapSense_CSD_GetFingerThreshold:
 1072              	.LFB44:
 798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1073              		.loc 1 822 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 8
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 80B5     		push	{r7, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1086              		.loc 1 823 0
 1087 0008 034A     		ldr	r2, .L59
 1088 000a 7B68     		ldr	r3, [r7, #4]
 1089 000c D318     		adds	r3, r2, r3
 1090 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 35


 824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1091              		.loc 1 824 0
 1092 0010 1800     		movs	r0, r3
 1093 0012 BD46     		mov	sp, r7
 1094 0014 02B0     		add	sp, sp, #8
 1095              		@ sp needed
 1096 0016 80BD     		pop	{r7, pc}
 1097              	.L60:
 1098              		.align	2
 1099              	.L59:
 1100 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1101              		.cfi_endproc
 1102              	.LFE44:
 1103              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1104              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_CSD_GetNoiseThreshold
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1110              	CapSense_CSD_GetNoiseThreshold:
 1111              	.LFB45:
 825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1112              		.loc 1 849 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 82B0     		sub	sp, sp, #8
 1121              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 36


 1122 0004 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
 1124 0006 7860     		str	r0, [r7, #4]
 850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1125              		.loc 1 850 0
 1126 0008 034A     		ldr	r2, .L63
 1127 000a 7B68     		ldr	r3, [r7, #4]
 1128 000c D318     		adds	r3, r2, r3
 1129 000e 1B78     		ldrb	r3, [r3]
 851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1130              		.loc 1 851 0
 1131 0010 1800     		movs	r0, r3
 1132 0012 BD46     		mov	sp, r7
 1133 0014 02B0     		add	sp, sp, #8
 1134              		@ sp needed
 1135 0016 80BD     		pop	{r7, pc}
 1136              	.L64:
 1137              		.align	2
 1138              	.L63:
 1139 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1140              		.cfi_endproc
 1141              	.LFE45:
 1142              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1143              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1144              		.align	2
 1145              		.global	CapSense_CSD_GetFingerHysteresis
 1146              		.code	16
 1147              		.thumb_func
 1148              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1149              	CapSense_CSD_GetFingerHysteresis:
 1150              	.LFB46:
 852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 37


 1151              		.loc 1 877 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 80B5     		push	{r7, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 82B0     		sub	sp, sp, #8
 1160              		.cfi_def_cfa_offset 16
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1164              		.loc 1 878 0
 1165 0008 034A     		ldr	r2, .L67
 1166 000a 7B68     		ldr	r3, [r7, #4]
 1167 000c D318     		adds	r3, r2, r3
 1168 000e 1B78     		ldrb	r3, [r3]
 879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1169              		.loc 1 879 0
 1170 0010 1800     		movs	r0, r3
 1171 0012 BD46     		mov	sp, r7
 1172 0014 02B0     		add	sp, sp, #8
 1173              		@ sp needed
 1174 0016 80BD     		pop	{r7, pc}
 1175              	.L68:
 1176              		.align	2
 1177              	.L67:
 1178 0018 00000000 		.word	CapSense_CSD_hysteresis
 1179              		.cfi_endproc
 1180              	.LFE46:
 1181              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1182              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1183              		.align	2
 1184              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1188              	CapSense_CSD_GetNegativeNoiseThreshold:
 1189              	.LFB47:
 880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 38


 896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1190              		.loc 1 905 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 82B0     		sub	sp, sp, #8
 1199              		.cfi_def_cfa_offset 16
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 0006 7860     		str	r0, [r7, #4]
 906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1203              		.loc 1 907 0
 1204 0008 034A     		ldr	r2, .L71
 1205 000a 7B68     		ldr	r3, [r7, #4]
 1206 000c D318     		adds	r3, r2, r3
 1207 000e 1B78     		ldrb	r3, [r3]
 908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1208              		.loc 1 911 0
 1209 0010 1800     		movs	r0, r3
 1210 0012 BD46     		mov	sp, r7
 1211 0014 02B0     		add	sp, sp, #8
 1212              		@ sp needed
 1213 0016 80BD     		pop	{r7, pc}
 1214              	.L72:
 1215              		.align	2
 1216              	.L71:
 1217 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1218              		.cfi_endproc
 1219              	.LFE47:
 1220              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1221              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1222              		.align	2
 1223              		.global	CapSense_CSD_SetFingerThreshold
 1224              		.code	16
 1225              		.thumb_func
 1226              		.type	CapSense_CSD_SetFingerThreshold, %function
 1227              	CapSense_CSD_SetFingerThreshold:
 1228              	.LFB48:
 912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 39


 914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1229              		.loc 1 938 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 8
 1232              		@ frame_needed = 1, uses_anonymous_args = 0
 1233 0000 80B5     		push	{r7, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 7, -8
 1236              		.cfi_offset 14, -4
 1237 0002 82B0     		sub	sp, sp, #8
 1238              		.cfi_def_cfa_offset 16
 1239 0004 00AF     		add	r7, sp, #0
 1240              		.cfi_def_cfa_register 7
 1241 0006 7860     		str	r0, [r7, #4]
 1242 0008 0A00     		movs	r2, r1
 1243 000a FB1C     		adds	r3, r7, #3
 1244 000c 1A70     		strb	r2, [r3]
 939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 1245              		.loc 1 939 0
 1246 000e 054A     		ldr	r2, .L74
 1247 0010 7B68     		ldr	r3, [r7, #4]
 1248 0012 D318     		adds	r3, r2, r3
 1249 0014 FA1C     		adds	r2, r7, #3
 1250 0016 1278     		ldrb	r2, [r2]
 1251 0018 1A70     		strb	r2, [r3]
 940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1252              		.loc 1 940 0
 1253 001a C046     		nop
 1254 001c BD46     		mov	sp, r7
 1255 001e 02B0     		add	sp, sp, #8
 1256              		@ sp needed
 1257 0020 80BD     		pop	{r7, pc}
 1258              	.L75:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 40


 1259 0022 C046     		.align	2
 1260              	.L74:
 1261 0024 00000000 		.word	CapSense_CSD_fingerThreshold
 1262              		.cfi_endproc
 1263              	.LFE48:
 1264              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1265              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1266              		.align	2
 1267              		.global	CapSense_CSD_SetNoiseThreshold
 1268              		.code	16
 1269              		.thumb_func
 1270              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1271              	CapSense_CSD_SetNoiseThreshold:
 1272              	.LFB49:
 941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
 966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1273              		.loc 1 966 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 8
 1276              		@ frame_needed = 1, uses_anonymous_args = 0
 1277 0000 80B5     		push	{r7, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 82B0     		sub	sp, sp, #8
 1282              		.cfi_def_cfa_offset 16
 1283 0004 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 1285 0006 7860     		str	r0, [r7, #4]
 1286 0008 0A00     		movs	r2, r1
 1287 000a FB1C     		adds	r3, r7, #3
 1288 000c 1A70     		strb	r2, [r3]
 967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 41


 1289              		.loc 1 967 0
 1290 000e 054A     		ldr	r2, .L77
 1291 0010 7B68     		ldr	r3, [r7, #4]
 1292 0012 D318     		adds	r3, r2, r3
 1293 0014 FA1C     		adds	r2, r7, #3
 1294 0016 1278     		ldrb	r2, [r2]
 1295 0018 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1296              		.loc 1 968 0
 1297 001a C046     		nop
 1298 001c BD46     		mov	sp, r7
 1299 001e 02B0     		add	sp, sp, #8
 1300              		@ sp needed
 1301 0020 80BD     		pop	{r7, pc}
 1302              	.L78:
 1303 0022 C046     		.align	2
 1304              	.L77:
 1305 0024 00000000 		.word	CapSense_CSD_noiseThreshold
 1306              		.cfi_endproc
 1307              	.LFE49:
 1308              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1309              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1310              		.align	2
 1311              		.global	CapSense_CSD_SetFingerHysteresis
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1315              	CapSense_CSD_SetFingerHysteresis:
 1316              	.LFB50:
 969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1317              		.loc 1 994 0
 1318              		.cfi_startproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 42


 1319              		@ args = 0, pretend = 0, frame = 8
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321 0000 80B5     		push	{r7, lr}
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 7, -8
 1324              		.cfi_offset 14, -4
 1325 0002 82B0     		sub	sp, sp, #8
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              		.cfi_def_cfa_register 7
 1329 0006 7860     		str	r0, [r7, #4]
 1330 0008 0A00     		movs	r2, r1
 1331 000a FB1C     		adds	r3, r7, #3
 1332 000c 1A70     		strb	r2, [r3]
 995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1333              		.loc 1 995 0
 1334 000e 054A     		ldr	r2, .L80
 1335 0010 7B68     		ldr	r3, [r7, #4]
 1336 0012 D318     		adds	r3, r2, r3
 1337 0014 FA1C     		adds	r2, r7, #3
 1338 0016 1278     		ldrb	r2, [r2]
 1339 0018 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1340              		.loc 1 996 0
 1341 001a C046     		nop
 1342 001c BD46     		mov	sp, r7
 1343 001e 02B0     		add	sp, sp, #8
 1344              		@ sp needed
 1345 0020 80BD     		pop	{r7, pc}
 1346              	.L81:
 1347 0022 C046     		.align	2
 1348              	.L80:
 1349 0024 00000000 		.word	CapSense_CSD_hysteresis
 1350              		.cfi_endproc
 1351              	.LFE50:
 1352              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1353              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1354              		.align	2
 1355              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1356              		.code	16
 1357              		.thumb_func
 1358              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1359              	CapSense_CSD_SetNegativeNoiseThreshold:
 1360              	.LFB51:
 997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
1001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
1009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 43


1010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
1015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
1017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1361              		.loc 1 1023 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 8
 1364              		@ frame_needed = 1, uses_anonymous_args = 0
 1365 0000 80B5     		push	{r7, lr}
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 82B0     		sub	sp, sp, #8
 1370              		.cfi_def_cfa_offset 16
 1371 0004 00AF     		add	r7, sp, #0
 1372              		.cfi_def_cfa_register 7
 1373 0006 7860     		str	r0, [r7, #4]
 1374 0008 0A00     		movs	r2, r1
 1375 000a FB1C     		adds	r3, r7, #3
 1376 000c 1A70     		strb	r2, [r3]
1024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1377              		.loc 1 1024 0
 1378 000e 054A     		ldr	r2, .L83
 1379 0010 7B68     		ldr	r3, [r7, #4]
 1380 0012 D318     		adds	r3, r2, r3
 1381 0014 FA1C     		adds	r2, r7, #3
 1382 0016 1278     		ldrb	r2, [r2]
 1383 0018 1A70     		strb	r2, [r3]
1025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1384              		.loc 1 1025 0
 1385 001a C046     		nop
 1386 001c BD46     		mov	sp, r7
 1387 001e 02B0     		add	sp, sp, #8
 1388              		@ sp needed
 1389 0020 80BD     		pop	{r7, pc}
 1390              	.L84:
 1391 0022 C046     		.align	2
 1392              	.L83:
 1393 0024 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1394              		.cfi_endproc
 1395              	.LFE51:
 1396              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1397              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1398              		.align	2
 1399              		.global	CapSense_CSD_SetDebounce
 1400              		.code	16
 1401              		.thumb_func
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 44


 1402              		.type	CapSense_CSD_SetDebounce, %function
 1403              	CapSense_CSD_SetDebounce:
 1404              	.LFB52:
1026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1405              		.loc 1 1051 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 8
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 82B0     		sub	sp, sp, #8
 1414              		.cfi_def_cfa_offset 16
 1415 0004 00AF     		add	r7, sp, #0
 1416              		.cfi_def_cfa_register 7
 1417 0006 7860     		str	r0, [r7, #4]
 1418 0008 0A00     		movs	r2, r1
 1419 000a FB1C     		adds	r3, r7, #3
 1420 000c 1A70     		strb	r2, [r3]
1052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1421              		.loc 1 1052 0
 1422 000e 054A     		ldr	r2, .L86
 1423 0010 7B68     		ldr	r3, [r7, #4]
 1424 0012 D318     		adds	r3, r2, r3
 1425 0014 FA1C     		adds	r2, r7, #3
 1426 0016 1278     		ldrb	r2, [r2]
 1427 0018 1A70     		strb	r2, [r3]
1053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1428              		.loc 1 1053 0
 1429 001a C046     		nop
 1430 001c BD46     		mov	sp, r7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 45


 1431 001e 02B0     		add	sp, sp, #8
 1432              		@ sp needed
 1433 0020 80BD     		pop	{r7, pc}
 1434              	.L87:
 1435 0022 C046     		.align	2
 1436              	.L86:
 1437 0024 00000000 		.word	CapSense_CSD_debounce
 1438              		.cfi_endproc
 1439              	.LFE52:
 1440              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1441              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1442              		.align	2
 1443              		.global	CapSense_CSD_SetLowBaselineReset
 1444              		.code	16
 1445              		.thumb_func
 1446              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1447              	CapSense_CSD_SetLowBaselineReset:
 1448              	.LFB53:
1054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1449              		.loc 1 1079 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 8
 1452              		@ frame_needed = 1, uses_anonymous_args = 0
 1453 0000 80B5     		push	{r7, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 82B0     		sub	sp, sp, #8
 1458              		.cfi_def_cfa_offset 16
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 46


 1462 0008 0A00     		movs	r2, r1
 1463 000a FB1C     		adds	r3, r7, #3
 1464 000c 1A70     		strb	r2, [r3]
1080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1465              		.loc 1 1080 0
 1466 000e 054A     		ldr	r2, .L89
 1467 0010 7B68     		ldr	r3, [r7, #4]
 1468 0012 D318     		adds	r3, r2, r3
 1469 0014 FA1C     		adds	r2, r7, #3
 1470 0016 1278     		ldrb	r2, [r2]
 1471 0018 1A70     		strb	r2, [r3]
1081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1472              		.loc 1 1081 0
 1473 001a C046     		nop
 1474 001c BD46     		mov	sp, r7
 1475 001e 02B0     		add	sp, sp, #8
 1476              		@ sp needed
 1477 0020 80BD     		pop	{r7, pc}
 1478              	.L90:
 1479 0022 C046     		.align	2
 1480              	.L89:
 1481 0024 00000000 		.word	CapSense_CSD_lowBaselineReset
 1482              		.cfi_endproc
 1483              	.LFE53:
 1484              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1485              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1486              		.align	2
 1487              		.global	CapSense_CSD_CheckIsSensorActive
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1491              	CapSense_CSD_CheckIsSensorActive:
 1492              	.LFB54:
1082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 47


1106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1493              		.loc 1 1125 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 16
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497 0000 80B5     		push	{r7, lr}
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 84B0     		sub	sp, sp, #16
 1502              		.cfi_def_cfa_offset 24
 1503 0004 00AF     		add	r7, sp, #0
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]
1126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold;
1131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 hysteresis;
1132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1506              		.loc 1 1135 0
 1507 0008 0F23     		movs	r3, #15
 1508 000a FB18     		adds	r3, r7, r3
 1509 000c 4149     		ldr	r1, .L100
 1510 000e 7A68     		ldr	r2, [r7, #4]
 1511 0010 8A18     		adds	r2, r1, r2
 1512 0012 1278     		ldrb	r2, [r2]
 1513 0014 1A70     		strb	r2, [r3]
1136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1514              		.loc 1 1137 0
 1515 0016 0F23     		movs	r3, #15
 1516 0018 FB18     		adds	r3, r7, r3
 1517 001a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 48


 1518 001c 0E23     		movs	r3, #14
 1519 001e FB18     		adds	r3, r7, r3
 1520 0020 3D49     		ldr	r1, .L100+4
 1521 0022 8A5C     		ldrb	r2, [r1, r2]
 1522 0024 1A70     		strb	r2, [r3]
1138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1523              		.loc 1 1138 0
 1524 0026 0F23     		movs	r3, #15
 1525 0028 FB18     		adds	r3, r7, r3
 1526 002a 1A78     		ldrb	r2, [r3]
 1527 002c 0D23     		movs	r3, #13
 1528 002e FB18     		adds	r3, r7, r3
 1529 0030 3A49     		ldr	r1, .L100+8
 1530 0032 8A5C     		ldrb	r2, [r1, r2]
 1531 0034 1A70     		strb	r2, [r3]
1139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1532              		.loc 1 1139 0
 1533 0036 0F23     		movs	r3, #15
 1534 0038 FB18     		adds	r3, r7, r3
 1535 003a 1A78     		ldrb	r2, [r3]
 1536 003c 0C23     		movs	r3, #12
 1537 003e FB18     		adds	r3, r7, r3
 1538 0040 3749     		ldr	r1, .L100+12
 1539 0042 8A5C     		ldrb	r2, [r1, r2]
 1540 0044 1A70     		strb	r2, [r3]
1140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = widget;
 1541              		.loc 1 1141 0
 1542 0046 0B23     		movs	r3, #11
 1543 0048 FB18     		adds	r3, r7, r3
 1544 004a 0F22     		movs	r2, #15
 1545 004c BA18     		adds	r2, r7, r2
 1546 004e 1278     		ldrb	r2, [r2]
 1547 0050 1A70     		strb	r2, [r3]
1142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1548              		.loc 1 1145 0
 1549 0052 7A68     		ldr	r2, [r7, #4]
 1550 0054 334B     		ldr	r3, .L100+16
 1551 0056 1100     		movs	r1, r2
 1552 0058 1800     		movs	r0, r3
 1553 005a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1554 005e 031E     		subs	r3, r0, #0
 1555 0060 1CD0     		beq	.L92
1146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1556              		.loc 1 1148 0
 1557 0062 314A     		ldr	r2, .L100+20
 1558 0064 7B68     		ldr	r3, [r7, #4]
 1559 0066 D318     		adds	r3, r2, r3
 1560 0068 1B78     		ldrb	r3, [r3]
 1561 006a 1900     		movs	r1, r3
 1562 006c 0E23     		movs	r3, #14
 1563 006e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 49


 1564 0070 1A78     		ldrb	r2, [r3]
 1565 0072 0D23     		movs	r3, #13
 1566 0074 FB18     		adds	r3, r7, r3
 1567 0076 1B78     		ldrb	r3, [r3]
 1568 0078 D31A     		subs	r3, r2, r3
 1569 007a 9942     		cmp	r1, r3
 1570 007c 3BDA     		bge	.L94
1149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1571              		.loc 1 1150 0
 1572 007e 7968     		ldr	r1, [r7, #4]
 1573 0080 284B     		ldr	r3, .L100+16
 1574 0082 0022     		movs	r2, #0
 1575 0084 1800     		movs	r0, r3
 1576 0086 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1577              		.loc 1 1152 0
 1578 008a 0B23     		movs	r3, #11
 1579 008c FB18     		adds	r3, r7, r3
 1580 008e 1B78     		ldrb	r3, [r3]
 1581 0090 264A     		ldr	r2, .L100+24
 1582 0092 0C21     		movs	r1, #12
 1583 0094 7918     		adds	r1, r7, r1
 1584 0096 0978     		ldrb	r1, [r1]
 1585 0098 D154     		strb	r1, [r2, r3]
 1586 009a 2CE0     		b	.L94
 1587              	.L92:
1153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1588              		.loc 1 1158 0
 1589 009c 224A     		ldr	r2, .L100+20
 1590 009e 7B68     		ldr	r3, [r7, #4]
 1591 00a0 D318     		adds	r3, r2, r3
 1592 00a2 1B78     		ldrb	r3, [r3]
 1593 00a4 1900     		movs	r1, r3
 1594 00a6 0E23     		movs	r3, #14
 1595 00a8 FB18     		adds	r3, r7, r3
 1596 00aa 1A78     		ldrb	r2, [r3]
 1597 00ac 0D23     		movs	r3, #13
 1598 00ae FB18     		adds	r3, r7, r3
 1599 00b0 1B78     		ldrb	r3, [r3]
 1600 00b2 D318     		adds	r3, r2, r3
 1601 00b4 9942     		cmp	r1, r3
 1602 00b6 16DB     		blt	.L95
1159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1603              		.loc 1 1160 0
 1604 00b8 0B23     		movs	r3, #11
 1605 00ba FB18     		adds	r3, r7, r3
 1606 00bc 1B78     		ldrb	r3, [r3]
 1607 00be 1B4A     		ldr	r2, .L100+24
 1608 00c0 D25C     		ldrb	r2, [r2, r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 50


 1609 00c2 013A     		subs	r2, r2, #1
 1610 00c4 D1B2     		uxtb	r1, r2
 1611 00c6 194A     		ldr	r2, .L100+24
 1612 00c8 D154     		strb	r1, [r2, r3]
1161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1613              		.loc 1 1162 0
 1614 00ca 0B23     		movs	r3, #11
 1615 00cc FB18     		adds	r3, r7, r3
 1616 00ce 1B78     		ldrb	r3, [r3]
 1617 00d0 164A     		ldr	r2, .L100+24
 1618 00d2 D35C     		ldrb	r3, [r2, r3]
 1619 00d4 002B     		cmp	r3, #0
 1620 00d6 0ED1     		bne	.L94
1163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1621              		.loc 1 1164 0
 1622 00d8 7968     		ldr	r1, [r7, #4]
 1623 00da 124B     		ldr	r3, .L100+16
 1624 00dc 0122     		movs	r2, #1
 1625 00de 1800     		movs	r0, r3
 1626 00e0 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1627 00e4 07E0     		b	.L94
 1628              	.L95:
1165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1629              		.loc 1 1170 0
 1630 00e6 0B23     		movs	r3, #11
 1631 00e8 FB18     		adds	r3, r7, r3
 1632 00ea 1B78     		ldrb	r3, [r3]
 1633 00ec 0F4A     		ldr	r2, .L100+24
 1634 00ee 0C21     		movs	r1, #12
 1635 00f0 7918     		adds	r1, r7, r1
 1636 00f2 0978     		ldrb	r1, [r1]
 1637 00f4 D154     		strb	r1, [r2, r3]
 1638              	.L94:
1171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1639              		.loc 1 1174 0
 1640 00f6 7A68     		ldr	r2, [r7, #4]
 1641 00f8 0A4B     		ldr	r3, .L100+16
 1642 00fa 1100     		movs	r1, r2
 1643 00fc 1800     		movs	r0, r3
 1644 00fe FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1645 0102 031E     		subs	r3, r0, #0
 1646 0104 01D0     		beq	.L97
 1647              		.loc 1 1174 0 is_stmt 0 discriminator 1
 1648 0106 0123     		movs	r3, #1
 1649 0108 00E0     		b	.L99
 1650              	.L97:
 1651              		.loc 1 1174 0 discriminator 2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 51


 1652 010a 0023     		movs	r3, #0
 1653              	.L99:
1175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1654              		.loc 1 1175 0 is_stmt 1 discriminator 5
 1655 010c 1800     		movs	r0, r3
 1656 010e BD46     		mov	sp, r7
 1657 0110 04B0     		add	sp, sp, #16
 1658              		@ sp needed
 1659 0112 80BD     		pop	{r7, pc}
 1660              	.L101:
 1661              		.align	2
 1662              	.L100:
 1663 0114 00000000 		.word	CapSense_CSD_widgetNumber
 1664 0118 00000000 		.word	CapSense_CSD_fingerThreshold
 1665 011c 00000000 		.word	CapSense_CSD_hysteresis
 1666 0120 00000000 		.word	CapSense_CSD_debounce
 1667 0124 00000000 		.word	CapSense_CSD_sensorOnMask
 1668 0128 00000000 		.word	CapSense_CSD_sensorSignal
 1669 012c 40000000 		.word	CapSense_CSD_debounceCounter
 1670              		.cfi_endproc
 1671              	.LFE54:
 1672              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1673              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1674              		.align	2
 1675              		.global	CapSense_CSD_CheckIsWidgetActive
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1679              	CapSense_CSD_CheckIsWidgetActive:
 1680              	.LFB55:
1176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 52


1203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1681              		.loc 1 1207 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 24
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
 1685 0000 80B5     		push	{r7, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 86B0     		sub	sp, sp, #24
 1690              		.cfi_def_cfa_offset 32
 1691 0004 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
 1693 0006 7860     		str	r0, [r7, #4]
1208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1694              		.loc 1 1208 0
 1695 0008 114A     		ldr	r2, .L106
 1696 000a 7B68     		ldr	r3, [r7, #4]
 1697 000c D318     		adds	r3, r2, r3
 1698 000e 1B78     		ldrb	r3, [r3]
 1699 0010 7B61     		str	r3, [r7, #20]
1209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1700              		.loc 1 1209 0
 1701 0012 104A     		ldr	r2, .L106+4
 1702 0014 7B68     		ldr	r3, [r7, #4]
 1703 0016 D318     		adds	r3, r2, r3
 1704 0018 1B78     		ldrb	r3, [r3]
 1705 001a 1A00     		movs	r2, r3
 1706 001c 7B69     		ldr	r3, [r7, #20]
 1707 001e D318     		adds	r3, r2, r3
 1708 0020 FB60     		str	r3, [r7, #12]
1210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1709              		.loc 1 1210 0
 1710 0022 0023     		movs	r3, #0
 1711 0024 3B61     		str	r3, [r7, #16]
 1712              	.L104:
1211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1713              		.loc 1 1215 0
 1714 0026 7B69     		ldr	r3, [r7, #20]
 1715 0028 1800     		movs	r0, r3
 1716 002a FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1717 002e 031E     		subs	r3, r0, #0
 1718 0030 01D0     		beq	.L103
1216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1719              		.loc 1 1217 0
 1720 0032 0123     		movs	r3, #1
 1721 0034 3B61     		str	r3, [r7, #16]
 1722              	.L103:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 53


1218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1723              		.loc 1 1219 0
 1724 0036 7B69     		ldr	r3, [r7, #20]
 1725 0038 0133     		adds	r3, r3, #1
 1726 003a 7B61     		str	r3, [r7, #20]
1220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1727              		.loc 1 1221 0
 1728 003c 7A69     		ldr	r2, [r7, #20]
 1729 003e FB68     		ldr	r3, [r7, #12]
 1730 0040 9A42     		cmp	r2, r3
 1731 0042 F0D3     		bcc	.L104
1222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1732              		.loc 1 1225 0
 1733 0044 3B69     		ldr	r3, [r7, #16]
1226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1734              		.loc 1 1226 0
 1735 0046 1800     		movs	r0, r3
 1736 0048 BD46     		mov	sp, r7
 1737 004a 06B0     		add	sp, sp, #24
 1738              		@ sp needed
 1739 004c 80BD     		pop	{r7, pc}
 1740              	.L107:
 1741 004e C046     		.align	2
 1742              	.L106:
 1743 0050 00000000 		.word	CapSense_CSD_rawDataIndex
 1744 0054 00000000 		.word	CapSense_CSD_numberOfSensors
 1745              		.cfi_endproc
 1746              	.LFE55:
 1747              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1748              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1749              		.align	2
 1750              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1754              	CapSense_CSD_CheckIsAnyWidgetActive:
 1755              	.LFB56:
1227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 54


1242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1756              		.loc 1 1253 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 8
 1759              		@ frame_needed = 1, uses_anonymous_args = 0
 1760 0000 80B5     		push	{r7, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 7, -8
 1763              		.cfi_offset 14, -4
 1764 0002 82B0     		sub	sp, sp, #8
 1765              		.cfi_def_cfa_offset 16
 1766 0004 00AF     		add	r7, sp, #0
 1767              		.cfi_def_cfa_register 7
1254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1768              		.loc 1 1256 0
 1769 0006 0023     		movs	r3, #0
 1770 0008 3B60     		str	r3, [r7]
1257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1771              		.loc 1 1258 0
 1772 000a 0023     		movs	r3, #0
 1773 000c 7B60     		str	r3, [r7, #4]
 1774 000e 0AE0     		b	.L109
 1775              	.L111:
1259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1776              		.loc 1 1260 0
 1777 0010 7B68     		ldr	r3, [r7, #4]
 1778 0012 1800     		movs	r0, r3
 1779 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1780 0018 031E     		subs	r3, r0, #0
 1781 001a 01D0     		beq	.L110
1261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1782              		.loc 1 1262 0
 1783 001c 0123     		movs	r3, #1
 1784 001e 3B60     		str	r3, [r7]
 1785              	.L110:
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1786              		.loc 1 1258 0 discriminator 2
 1787 0020 7B68     		ldr	r3, [r7, #4]
 1788 0022 0133     		adds	r3, r3, #1
 1789 0024 7B60     		str	r3, [r7, #4]
 1790              	.L109:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 55


1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1791              		.loc 1 1258 0 is_stmt 0 discriminator 1
 1792 0026 7B68     		ldr	r3, [r7, #4]
 1793 0028 0D2B     		cmp	r3, #13
 1794 002a F1D9     		bls	.L111
1263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1795              		.loc 1 1268 0 is_stmt 1
 1796 002c 3B68     		ldr	r3, [r7]
1269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1797              		.loc 1 1269 0
 1798 002e 1800     		movs	r0, r3
 1799 0030 BD46     		mov	sp, r7
 1800 0032 02B0     		add	sp, sp, #8
 1801              		@ sp needed
 1802 0034 80BD     		pop	{r7, pc}
 1803              		.cfi_endproc
 1804              	.LFE56:
 1805              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1806 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1807              		.align	2
 1808              		.global	CapSense_CSD_EnableWidget
 1809              		.code	16
 1810              		.thumb_func
 1811              		.type	CapSense_CSD_EnableWidget, %function
 1812              	CapSense_CSD_EnableWidget:
 1813              	.LFB57:
1270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 56


1296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1814              		.loc 1 1300 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 16
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0002 84B0     		sub	sp, sp, #16
 1823              		.cfi_def_cfa_offset 24
 1824 0004 00AF     		add	r7, sp, #0
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
1301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1827              		.loc 1 1302 0
 1828 0008 0F23     		movs	r3, #15
 1829 000a FB18     		adds	r3, r7, r3
 1830 000c 1549     		ldr	r1, .L115
 1831 000e 7A68     		ldr	r2, [r7, #4]
 1832 0010 8A18     		adds	r2, r1, r2
 1833 0012 1278     		ldrb	r2, [r2]
 1834 0014 1A70     		strb	r2, [r3]
1303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1835              		.loc 1 1303 0
 1836 0016 144A     		ldr	r2, .L115+4
 1837 0018 7B68     		ldr	r3, [r7, #4]
 1838 001a D318     		adds	r3, r2, r3
 1839 001c 1978     		ldrb	r1, [r3]
 1840 001e 0E23     		movs	r3, #14
 1841 0020 FB18     		adds	r3, r7, r3
 1842 0022 0F22     		movs	r2, #15
 1843 0024 BA18     		adds	r2, r7, r2
 1844 0026 1278     		ldrb	r2, [r2]
 1845 0028 8A18     		adds	r2, r1, r2
 1846 002a 1A70     		strb	r2, [r3]
 1847              	.L114:
1304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1848              		.loc 1 1308 0 discriminator 1
 1849 002c 0F23     		movs	r3, #15
 1850 002e FB18     		adds	r3, r7, r3
 1851 0030 1978     		ldrb	r1, [r3]
 1852 0032 0E4B     		ldr	r3, .L115+8
 1853 0034 0122     		movs	r2, #1
 1854 0036 1800     		movs	r0, r3
 1855 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1856              		.loc 1 1309 0 discriminator 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 57


 1857 003c 0F23     		movs	r3, #15
 1858 003e FB18     		adds	r3, r7, r3
 1859 0040 1A78     		ldrb	r2, [r3]
 1860 0042 0F23     		movs	r3, #15
 1861 0044 FB18     		adds	r3, r7, r3
 1862 0046 0132     		adds	r2, r2, #1
 1863 0048 1A70     		strb	r2, [r3]
1310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1864              		.loc 1 1311 0 discriminator 1
 1865 004a 0F23     		movs	r3, #15
 1866 004c FA18     		adds	r2, r7, r3
 1867 004e 0E23     		movs	r3, #14
 1868 0050 FB18     		adds	r3, r7, r3
 1869 0052 1278     		ldrb	r2, [r2]
 1870 0054 1B78     		ldrb	r3, [r3]
 1871 0056 9A42     		cmp	r2, r3
 1872 0058 E8D3     		bcc	.L114
1312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1873              		.loc 1 1312 0
 1874 005a C046     		nop
 1875 005c BD46     		mov	sp, r7
 1876 005e 04B0     		add	sp, sp, #16
 1877              		@ sp needed
 1878 0060 80BD     		pop	{r7, pc}
 1879              	.L116:
 1880 0062 C046     		.align	2
 1881              	.L115:
 1882 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1883 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 1884 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1885              		.cfi_endproc
 1886              	.LFE57:
 1887              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1888              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1889              		.align	2
 1890              		.global	CapSense_CSD_DisableWidget
 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	CapSense_CSD_DisableWidget, %function
 1894              	CapSense_CSD_DisableWidget:
 1895              	.LFB58:
1313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 58


1328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1896              		.loc 1 1343 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 16
 1899              		@ frame_needed = 1, uses_anonymous_args = 0
 1900 0000 80B5     		push	{r7, lr}
 1901              		.cfi_def_cfa_offset 8
 1902              		.cfi_offset 7, -8
 1903              		.cfi_offset 14, -4
 1904 0002 84B0     		sub	sp, sp, #16
 1905              		.cfi_def_cfa_offset 24
 1906 0004 00AF     		add	r7, sp, #0
 1907              		.cfi_def_cfa_register 7
 1908 0006 7860     		str	r0, [r7, #4]
1344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1909              		.loc 1 1344 0
 1910 0008 0F23     		movs	r3, #15
 1911 000a FB18     		adds	r3, r7, r3
 1912 000c 1549     		ldr	r1, .L119
 1913 000e 7A68     		ldr	r2, [r7, #4]
 1914 0010 8A18     		adds	r2, r1, r2
 1915 0012 1278     		ldrb	r2, [r2]
 1916 0014 1A70     		strb	r2, [r3]
1345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1917              		.loc 1 1345 0
 1918 0016 144A     		ldr	r2, .L119+4
 1919 0018 7B68     		ldr	r3, [r7, #4]
 1920 001a D318     		adds	r3, r2, r3
 1921 001c 1978     		ldrb	r1, [r3]
 1922 001e 0E23     		movs	r3, #14
 1923 0020 FB18     		adds	r3, r7, r3
 1924 0022 0F22     		movs	r2, #15
 1925 0024 BA18     		adds	r2, r7, r2
 1926 0026 1278     		ldrb	r2, [r2]
 1927 0028 8A18     		adds	r2, r1, r2
 1928 002a 1A70     		strb	r2, [r3]
 1929              	.L118:
1346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 59


1351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1930              		.loc 1 1351 0 discriminator 1
 1931 002c 0F23     		movs	r3, #15
 1932 002e FB18     		adds	r3, r7, r3
 1933 0030 1978     		ldrb	r1, [r3]
 1934 0032 0E4B     		ldr	r3, .L119+8
 1935 0034 0022     		movs	r2, #0
 1936 0036 1800     		movs	r0, r3
 1937 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1938              		.loc 1 1352 0 discriminator 1
 1939 003c 0F23     		movs	r3, #15
 1940 003e FB18     		adds	r3, r7, r3
 1941 0040 1A78     		ldrb	r2, [r3]
 1942 0042 0F23     		movs	r3, #15
 1943 0044 FB18     		adds	r3, r7, r3
 1944 0046 0132     		adds	r2, r2, #1
 1945 0048 1A70     		strb	r2, [r3]
1353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1946              		.loc 1 1354 0 discriminator 1
 1947 004a 0F23     		movs	r3, #15
 1948 004c FA18     		adds	r2, r7, r3
 1949 004e 0E23     		movs	r3, #14
 1950 0050 FB18     		adds	r3, r7, r3
 1951 0052 1278     		ldrb	r2, [r2]
 1952 0054 1B78     		ldrb	r3, [r3]
 1953 0056 9A42     		cmp	r2, r3
 1954 0058 E8D3     		bcc	.L118
1355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1955              		.loc 1 1355 0
 1956 005a C046     		nop
 1957 005c BD46     		mov	sp, r7
 1958 005e 04B0     		add	sp, sp, #16
 1959              		@ sp needed
 1960 0060 80BD     		pop	{r7, pc}
 1961              	.L120:
 1962 0062 C046     		.align	2
 1963              	.L119:
 1964 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1965 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 1966 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1967              		.cfi_endproc
 1968              	.LFE58:
 1969              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1970              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 1971              		.align	2
 1972              		.global	CapSense_CSD_MedianFilter
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CapSense_CSD_MedianFilter, %function
 1976              	CapSense_CSD_MedianFilter:
 1977              	.LFB59:
1356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 60


1360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
1391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
1406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
1408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 61


1417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 62


1474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
1506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
1511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
1513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
1514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
1519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 63


1531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint8 CapSense_CSD_centroid[3u];
1563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
1577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 64


1588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
1641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 65


1645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
1698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 66


1702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
1703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 67


1759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 68


1816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 69


1873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 70


1930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 71


1987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
1993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
2003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
2008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
2012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 72


2044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 73


2101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
2112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 74


2158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 75


2215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 76


2272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 77


2329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 78


2386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1978              		.loc 1 2395 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 16
 1981              		@ frame_needed = 1, uses_anonymous_args = 0
 1982 0000 90B5     		push	{r4, r7, lr}
 1983              		.cfi_def_cfa_offset 12
 1984              		.cfi_offset 4, -12
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 85B0     		sub	sp, sp, #20
 1988              		.cfi_def_cfa_offset 32
 1989 0004 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991 0006 0400     		movs	r4, r0
 1992 0008 0800     		movs	r0, r1
 1993 000a 1100     		movs	r1, r2
 1994 000c BB1D     		adds	r3, r7, #6
 1995 000e 221C     		adds	r2, r4, #0
 1996 0010 1A80     		strh	r2, [r3]
 1997 0012 3B1D     		adds	r3, r7, #4
 1998 0014 021C     		adds	r2, r0, #0
 1999 0016 1A80     		strh	r2, [r3]
 2000 0018 BB1C     		adds	r3, r7, #2
 2001 001a 0A1C     		adds	r2, r1, #0
 2002 001c 1A80     		strh	r2, [r3]
2396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2003              		.loc 1 2398 0
 2004 001e BA1D     		adds	r2, r7, #6
 2005 0020 3B1D     		adds	r3, r7, #4
 2006 0022 1288     		ldrh	r2, [r2]
 2007 0024 1B88     		ldrh	r3, [r3]
 2008 0026 9A42     		cmp	r2, r3
 2009 0028 0DD9     		bls	.L122
2399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2010              		.loc 1 2400 0
 2011 002a 0E23     		movs	r3, #14
 2012 002c FB18     		adds	r3, r7, r3
 2013 002e 3A1D     		adds	r2, r7, #4
 2014 0030 1288     		ldrh	r2, [r2]
 2015 0032 1A80     		strh	r2, [r3]
2401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2016              		.loc 1 2401 0
 2017 0034 3B1D     		adds	r3, r7, #4
 2018 0036 BA1D     		adds	r2, r7, #6
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 79


 2019 0038 1288     		ldrh	r2, [r2]
 2020 003a 1A80     		strh	r2, [r3]
2402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2021              		.loc 1 2402 0
 2022 003c BB1D     		adds	r3, r7, #6
 2023 003e 0E22     		movs	r2, #14
 2024 0040 BA18     		adds	r2, r7, r2
 2025 0042 1288     		ldrh	r2, [r2]
 2026 0044 1A80     		strh	r2, [r3]
 2027              	.L122:
2403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2028              		.loc 1 2405 0
 2029 0046 3A1D     		adds	r2, r7, #4
 2030 0048 BB1C     		adds	r3, r7, #2
 2031 004a 1288     		ldrh	r2, [r2]
 2032 004c 1B88     		ldrh	r3, [r3]
 2033 004e 9A42     		cmp	r2, r3
 2034 0050 03D9     		bls	.L123
2406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2035              		.loc 1 2407 0
 2036 0052 3B1D     		adds	r3, r7, #4
 2037 0054 BA1C     		adds	r2, r7, #2
 2038 0056 1288     		ldrh	r2, [r2]
 2039 0058 1A80     		strh	r2, [r3]
 2040              	.L123:
2408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2041              		.loc 1 2410 0
 2042 005a 3B1D     		adds	r3, r7, #4
 2043 005c BA1D     		adds	r2, r7, #6
 2044 005e 1088     		ldrh	r0, [r2]
 2045 0060 1B88     		ldrh	r3, [r3]
 2046 0062 99B2     		uxth	r1, r3
 2047 0064 82B2     		uxth	r2, r0
 2048 0066 9142     		cmp	r1, r2
 2049 0068 00D2     		bcs	.L124
 2050 006a 031C     		adds	r3, r0, #0
 2051              	.L124:
 2052 006c 9BB2     		uxth	r3, r3
2411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2053              		.loc 1 2411 0
 2054 006e 1800     		movs	r0, r3
 2055 0070 BD46     		mov	sp, r7
 2056 0072 05B0     		add	sp, sp, #20
 2057              		@ sp needed
 2058 0074 90BD     		pop	{r4, r7, pc}
 2059              		.cfi_endproc
 2060              	.LFE59:
 2061              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2062 0076 C046     		.section	.text.CapSense_CSD_IIR16Filter,"ax",%progbits
 2063              		.align	2
 2064              		.global	CapSense_CSD_IIR16Filter
 2065              		.code	16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 80


 2066              		.thumb_func
 2067              		.type	CapSense_CSD_IIR16Filter, %function
 2068              	CapSense_CSD_IIR16Filter:
 2069              	.LFB60:
2412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 81


2465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 82


2522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
2559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
2563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
2565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
2569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 83


2579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 84


2636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2070              		.loc 1 2637 0
 2071              		.cfi_startproc
 2072              		@ args = 0, pretend = 0, frame = 16
 2073              		@ frame_needed = 1, uses_anonymous_args = 0
 2074 0000 80B5     		push	{r7, lr}
 2075              		.cfi_def_cfa_offset 8
 2076              		.cfi_offset 7, -8
 2077              		.cfi_offset 14, -4
 2078 0002 84B0     		sub	sp, sp, #16
 2079              		.cfi_def_cfa_offset 24
 2080 0004 00AF     		add	r7, sp, #0
 2081              		.cfi_def_cfa_register 7
 2082 0006 0200     		movs	r2, r0
 2083 0008 BB1D     		adds	r3, r7, #6
 2084 000a 1A80     		strh	r2, [r3]
 2085 000c 3B1D     		adds	r3, r7, #4
 2086 000e 0A1C     		adds	r2, r1, #0
 2087 0010 1A80     		strh	r2, [r3]
2638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
 2088              		.loc 1 2641 0
 2089 0012 BB1D     		adds	r3, r7, #6
 2090 0014 1B88     		ldrh	r3, [r3]
 2091 0016 FB60     		str	r3, [r7, #12]
2642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
 2092              		.loc 1 2642 0
 2093 0018 3B1D     		adds	r3, r7, #4
 2094 001a 1B88     		ldrh	r3, [r3]
 2095 001c 1A01     		lsls	r2, r3, #4
 2096 001e 3B1D     		adds	r3, r7, #4
 2097 0020 1B88     		ldrh	r3, [r3]
 2098 0022 D31A     		subs	r3, r2, r3
 2099 0024 FA68     		ldr	r2, [r7, #12]
 2100 0026 D318     		adds	r3, r2, r3
 2101 0028 FB60     		str	r3, [r7, #12]
2643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
 2102              		.loc 1 2643 0
 2103 002a FB68     		ldr	r3, [r7, #12]
 2104 002c 1B09     		lsrs	r3, r3, #4
 2105 002e FB60     		str	r3, [r7, #12]
2644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 2106              		.loc 1 2645 0
 2107 0030 FB68     		ldr	r3, [r7, #12]
 2108 0032 9BB2     		uxth	r3, r3
2646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2109              		.loc 1 2646 0
 2110 0034 1800     		movs	r0, r3
 2111 0036 BD46     		mov	sp, r7
 2112 0038 04B0     		add	sp, sp, #16
 2113              		@ sp needed
 2114 003a 80BD     		pop	{r7, pc}
 2115              		.cfi_endproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 85


 2116              	.LFE60:
 2117              		.size	CapSense_CSD_IIR16Filter, .-CapSense_CSD_IIR16Filter
 2118              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2119              		.align	2
 2120              		.global	CapSense_CSD_GetWidgetNumber
 2121              		.code	16
 2122              		.thumb_func
 2123              		.type	CapSense_CSD_GetWidgetNumber, %function
 2124              	CapSense_CSD_GetWidgetNumber:
 2125              	.LFB61:
2647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 86


2694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2126              		.loc 1 2748 0
 2127              		.cfi_startproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 87


 2128              		@ args = 0, pretend = 0, frame = 8
 2129              		@ frame_needed = 1, uses_anonymous_args = 0
 2130 0000 80B5     		push	{r7, lr}
 2131              		.cfi_def_cfa_offset 8
 2132              		.cfi_offset 7, -8
 2133              		.cfi_offset 14, -4
 2134 0002 82B0     		sub	sp, sp, #8
 2135              		.cfi_def_cfa_offset 16
 2136 0004 00AF     		add	r7, sp, #0
 2137              		.cfi_def_cfa_register 7
 2138 0006 7860     		str	r0, [r7, #4]
2749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2139              		.loc 1 2749 0
 2140 0008 034A     		ldr	r2, .L130
 2141 000a 7B68     		ldr	r3, [r7, #4]
 2142 000c D318     		adds	r3, r2, r3
 2143 000e 1B78     		ldrb	r3, [r3]
2750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2144              		.loc 1 2750 0
 2145 0010 1800     		movs	r0, r3
 2146 0012 BD46     		mov	sp, r7
 2147 0014 02B0     		add	sp, sp, #8
 2148              		@ sp needed
 2149 0016 80BD     		pop	{r7, pc}
 2150              	.L131:
 2151              		.align	2
 2152              	.L130:
 2153 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2154              		.cfi_endproc
 2155              	.LFE61:
 2156              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2157              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2158              		.align	2
 2159              		.global	CapSense_CSD_GetLowBaselineReset
 2160              		.code	16
 2161              		.thumb_func
 2162              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2163              	CapSense_CSD_GetLowBaselineReset:
 2164              	.LFB62:
2751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 88


2769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2165              		.loc 1 2774 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 8
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169 0000 80B5     		push	{r7, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 7, -8
 2172              		.cfi_offset 14, -4
 2173 0002 82B0     		sub	sp, sp, #8
 2174              		.cfi_def_cfa_offset 16
 2175 0004 00AF     		add	r7, sp, #0
 2176              		.cfi_def_cfa_register 7
 2177 0006 7860     		str	r0, [r7, #4]
2775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2178              		.loc 1 2775 0
 2179 0008 034A     		ldr	r2, .L134
 2180 000a 7B68     		ldr	r3, [r7, #4]
 2181 000c D318     		adds	r3, r2, r3
 2182 000e 1B78     		ldrb	r3, [r3]
2776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2183              		.loc 1 2776 0
 2184 0010 1800     		movs	r0, r3
 2185 0012 BD46     		mov	sp, r7
 2186 0014 02B0     		add	sp, sp, #8
 2187              		@ sp needed
 2188 0016 80BD     		pop	{r7, pc}
 2189              	.L135:
 2190              		.align	2
 2191              	.L134:
 2192 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2193              		.cfi_endproc
 2194              	.LFE62:
 2195              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2196              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2197              		.align	2
 2198              		.global	CapSense_CSD_GetDebounce
 2199              		.code	16
 2200              		.thumb_func
 2201              		.type	CapSense_CSD_GetDebounce, %function
 2202              	CapSense_CSD_GetDebounce:
 2203              	.LFB63:
2777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 89


2787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2204              		.loc 1 2800 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 8
 2207              		@ frame_needed = 1, uses_anonymous_args = 0
 2208 0000 80B5     		push	{r7, lr}
 2209              		.cfi_def_cfa_offset 8
 2210              		.cfi_offset 7, -8
 2211              		.cfi_offset 14, -4
 2212 0002 82B0     		sub	sp, sp, #8
 2213              		.cfi_def_cfa_offset 16
 2214 0004 00AF     		add	r7, sp, #0
 2215              		.cfi_def_cfa_register 7
 2216 0006 7860     		str	r0, [r7, #4]
2801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2217              		.loc 1 2801 0
 2218 0008 034A     		ldr	r2, .L138
 2219 000a 7B68     		ldr	r3, [r7, #4]
 2220 000c D318     		adds	r3, r2, r3
 2221 000e 1B78     		ldrb	r3, [r3]
2802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2222              		.loc 1 2802 0
 2223 0010 1800     		movs	r0, r3
 2224 0012 BD46     		mov	sp, r7
 2225 0014 02B0     		add	sp, sp, #8
 2226              		@ sp needed
 2227 0016 80BD     		pop	{r7, pc}
 2228              	.L139:
 2229              		.align	2
 2230              	.L138:
 2231 0018 00000000 		.word	CapSense_CSD_debounce
 2232              		.cfi_endproc
 2233              	.LFE63:
 2234              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2235              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2236              		.align	2
 2237              		.global	CapSense_CSD_EnableRawDataFilters
 2238              		.code	16
 2239              		.thumb_func
 2240              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2241              	CapSense_CSD_EnableRawDataFilters:
 2242              	.LFB64:
2803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 90


2805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2243              		.loc 1 2826 0
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 0
 2246              		@ frame_needed = 1, uses_anonymous_args = 0
 2247 0000 80B5     		push	{r7, lr}
 2248              		.cfi_def_cfa_offset 8
 2249              		.cfi_offset 7, -8
 2250              		.cfi_offset 14, -4
 2251 0002 00AF     		add	r7, sp, #0
 2252              		.cfi_def_cfa_register 7
2827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2253              		.loc 1 2827 0
 2254 0004 024B     		ldr	r3, .L141
 2255 0006 0122     		movs	r2, #1
 2256 0008 1A70     		strb	r2, [r3]
2828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2257              		.loc 1 2828 0
 2258 000a C046     		nop
 2259 000c BD46     		mov	sp, r7
 2260              		@ sp needed
 2261 000e 80BD     		pop	{r7, pc}
 2262              	.L142:
 2263              		.align	2
 2264              	.L141:
 2265 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2266              		.cfi_endproc
 2267              	.LFE64:
 2268              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 2269              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 2270              		.align	2
 2271              		.global	CapSense_CSD_DisableRawDataFilters
 2272              		.code	16
 2273              		.thumb_func
 2274              		.type	CapSense_CSD_DisableRawDataFilters, %function
 2275              	CapSense_CSD_DisableRawDataFilters:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 91


 2276              	.LFB65:
2829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2277              		.loc 1 2851 0
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 0
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281 0000 80B5     		push	{r7, lr}
 2282              		.cfi_def_cfa_offset 8
 2283              		.cfi_offset 7, -8
 2284              		.cfi_offset 14, -4
 2285 0002 00AF     		add	r7, sp, #0
 2286              		.cfi_def_cfa_register 7
2852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 2287              		.loc 1 2852 0
 2288 0004 024B     		ldr	r3, .L144
 2289 0006 0022     		movs	r2, #0
 2290 0008 1A70     		strb	r2, [r3]
2853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2291              		.loc 1 2853 0
 2292 000a C046     		nop
 2293 000c BD46     		mov	sp, r7
 2294              		@ sp needed
 2295 000e 80BD     		pop	{r7, pc}
 2296              	.L145:
 2297              		.align	2
 2298              	.L144:
 2299 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2300              		.cfi_endproc
 2301              	.LFE65:
 2302              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 2303              		.text
 2304              	.Letext0:
 2305              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2306              		.file 3 "Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 2307              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 92


 2308              	.Ldebug_info0:
 2309 0000 B10B0000 		.4byte	0xbb1
 2310 0004 0400     		.2byte	0x4
 2311 0006 00000000 		.4byte	.Ldebug_abbrev0
 2312 000a 04       		.byte	0x4
 2313 000b 01       		.uleb128 0x1
 2314 000c 3A010000 		.4byte	.LASF122
 2315 0010 0C       		.byte	0xc
 2316 0011 AE020000 		.4byte	.LASF123
 2317 0015 1D000000 		.4byte	.LASF124
 2318 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2319 001d 00000000 		.4byte	0
 2320 0021 00000000 		.4byte	.Ldebug_line0
 2321 0025 02       		.uleb128 0x2
 2322 0026 01       		.byte	0x1
 2323 0027 06       		.byte	0x6
 2324 0028 790A0000 		.4byte	.LASF0
 2325 002c 02       		.uleb128 0x2
 2326 002d 01       		.byte	0x1
 2327 002e 08       		.byte	0x8
 2328 002f E5090000 		.4byte	.LASF1
 2329 0033 02       		.uleb128 0x2
 2330 0034 02       		.byte	0x2
 2331 0035 05       		.byte	0x5
 2332 0036 1D080000 		.4byte	.LASF2
 2333 003a 02       		.uleb128 0x2
 2334 003b 02       		.byte	0x2
 2335 003c 07       		.byte	0x7
 2336 003d 850A0000 		.4byte	.LASF3
 2337 0041 02       		.uleb128 0x2
 2338 0042 04       		.byte	0x4
 2339 0043 05       		.byte	0x5
 2340 0044 27080000 		.4byte	.LASF4
 2341 0048 02       		.uleb128 0x2
 2342 0049 04       		.byte	0x4
 2343 004a 07       		.byte	0x7
 2344 004b F8080000 		.4byte	.LASF5
 2345 004f 02       		.uleb128 0x2
 2346 0050 08       		.byte	0x8
 2347 0051 05       		.byte	0x5
 2348 0052 DB050000 		.4byte	.LASF6
 2349 0056 02       		.uleb128 0x2
 2350 0057 08       		.byte	0x8
 2351 0058 07       		.byte	0x7
 2352 0059 60030000 		.4byte	.LASF7
 2353 005d 03       		.uleb128 0x3
 2354 005e 04       		.byte	0x4
 2355 005f 05       		.byte	0x5
 2356 0060 696E7400 		.ascii	"int\000"
 2357 0064 02       		.uleb128 0x2
 2358 0065 04       		.byte	0x4
 2359 0066 07       		.byte	0x7
 2360 0067 D8000000 		.4byte	.LASF8
 2361 006b 04       		.uleb128 0x4
 2362 006c D30A0000 		.4byte	.LASF9
 2363 0070 02       		.byte	0x2
 2364 0071 F701     		.2byte	0x1f7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 93


 2365 0073 2C000000 		.4byte	0x2c
 2366 0077 04       		.uleb128 0x4
 2367 0078 5A050000 		.4byte	.LASF10
 2368 007c 02       		.byte	0x2
 2369 007d F801     		.2byte	0x1f8
 2370 007f 3A000000 		.4byte	0x3a
 2371 0083 04       		.uleb128 0x4
 2372 0084 B0060000 		.4byte	.LASF11
 2373 0088 02       		.byte	0x2
 2374 0089 F901     		.2byte	0x1f9
 2375 008b 48000000 		.4byte	0x48
 2376 008f 02       		.uleb128 0x2
 2377 0090 04       		.byte	0x4
 2378 0091 04       		.byte	0x4
 2379 0092 15030000 		.4byte	.LASF12
 2380 0096 02       		.uleb128 0x2
 2381 0097 08       		.byte	0x8
 2382 0098 04       		.byte	0x4
 2383 0099 D90A0000 		.4byte	.LASF13
 2384 009d 02       		.uleb128 0x2
 2385 009e 01       		.byte	0x1
 2386 009f 08       		.byte	0x8
 2387 00a0 2B050000 		.4byte	.LASF14
 2388 00a4 02       		.uleb128 0x2
 2389 00a5 04       		.byte	0x4
 2390 00a6 07       		.byte	0x7
 2391 00a7 EF080000 		.4byte	.LASF15
 2392 00ab 02       		.uleb128 0x2
 2393 00ac 08       		.byte	0x8
 2394 00ad 04       		.byte	0x4
 2395 00ae B7070000 		.4byte	.LASF16
 2396 00b2 05       		.uleb128 0x5
 2397 00b3 5C       		.byte	0x5c
 2398 00b4 03       		.byte	0x3
 2399 00b5 2F       		.byte	0x2f
 2400 00b6 CF010000 		.4byte	0x1cf
 2401 00ba 06       		.uleb128 0x6
 2402 00bb 66050000 		.4byte	.LASF17
 2403 00bf 03       		.byte	0x3
 2404 00c0 31       		.byte	0x31
 2405 00c1 CF010000 		.4byte	0x1cf
 2406 00c5 00       		.byte	0
 2407 00c6 06       		.uleb128 0x6
 2408 00c7 0E080000 		.4byte	.LASF18
 2409 00cb 03       		.byte	0x3
 2410 00cc 32       		.byte	0x32
 2411 00cd CF010000 		.4byte	0x1cf
 2412 00d1 04       		.byte	0x4
 2413 00d2 06       		.uleb128 0x6
 2414 00d3 5A0A0000 		.4byte	.LASF19
 2415 00d7 03       		.byte	0x3
 2416 00d8 33       		.byte	0x33
 2417 00d9 CF010000 		.4byte	0x1cf
 2418 00dd 08       		.byte	0x8
 2419 00de 06       		.uleb128 0x6
 2420 00df BE090000 		.4byte	.LASF20
 2421 00e3 03       		.byte	0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 94


 2422 00e4 34       		.byte	0x34
 2423 00e5 CF010000 		.4byte	0x1cf
 2424 00e9 0C       		.byte	0xc
 2425 00ea 06       		.uleb128 0x6
 2426 00eb 6F0A0000 		.4byte	.LASF21
 2427 00ef 03       		.byte	0x3
 2428 00f0 35       		.byte	0x35
 2429 00f1 CF010000 		.4byte	0x1cf
 2430 00f5 10       		.byte	0x10
 2431 00f6 06       		.uleb128 0x6
 2432 00f7 72080000 		.4byte	.LASF22
 2433 00fb 03       		.byte	0x3
 2434 00fc 36       		.byte	0x36
 2435 00fd D5010000 		.4byte	0x1d5
 2436 0101 14       		.byte	0x14
 2437 0102 06       		.uleb128 0x6
 2438 0103 1B030000 		.4byte	.LASF23
 2439 0107 03       		.byte	0x3
 2440 0108 37       		.byte	0x37
 2441 0109 E0010000 		.4byte	0x1e0
 2442 010d 18       		.byte	0x18
 2443 010e 06       		.uleb128 0x6
 2444 010f 34040000 		.4byte	.LASF24
 2445 0113 03       		.byte	0x3
 2446 0114 38       		.byte	0x38
 2447 0115 CF010000 		.4byte	0x1cf
 2448 0119 1C       		.byte	0x1c
 2449 011a 06       		.uleb128 0x6
 2450 011b 2A030000 		.4byte	.LASF25
 2451 011f 03       		.byte	0x3
 2452 0120 39       		.byte	0x39
 2453 0121 CF010000 		.4byte	0x1cf
 2454 0125 20       		.byte	0x20
 2455 0126 06       		.uleb128 0x6
 2456 0127 D5010000 		.4byte	.LASF26
 2457 012b 03       		.byte	0x3
 2458 012c 3A       		.byte	0x3a
 2459 012d CF010000 		.4byte	0x1cf
 2460 0131 24       		.byte	0x24
 2461 0132 06       		.uleb128 0x6
 2462 0133 A3060000 		.4byte	.LASF27
 2463 0137 03       		.byte	0x3
 2464 0138 3B       		.byte	0x3b
 2465 0139 E6010000 		.4byte	0x1e6
 2466 013d 28       		.byte	0x28
 2467 013e 06       		.uleb128 0x6
 2468 013f C8010000 		.4byte	.LASF28
 2469 0143 03       		.byte	0x3
 2470 0144 3C       		.byte	0x3c
 2471 0145 E6010000 		.4byte	0x1e6
 2472 0149 2C       		.byte	0x2c
 2473 014a 06       		.uleb128 0x6
 2474 014b 9C090000 		.4byte	.LASF29
 2475 014f 03       		.byte	0x3
 2476 0150 3D       		.byte	0x3d
 2477 0151 E6010000 		.4byte	0x1e6
 2478 0155 30       		.byte	0x30
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 95


 2479 0156 06       		.uleb128 0x6
 2480 0157 C8080000 		.4byte	.LASF30
 2481 015b 03       		.byte	0x3
 2482 015c 3E       		.byte	0x3e
 2483 015d CF010000 		.4byte	0x1cf
 2484 0161 34       		.byte	0x34
 2485 0162 06       		.uleb128 0x6
 2486 0163 00000000 		.4byte	.LASF31
 2487 0167 03       		.byte	0x3
 2488 0168 3F       		.byte	0x3f
 2489 0169 CF010000 		.4byte	0x1cf
 2490 016d 38       		.byte	0x38
 2491 016e 06       		.uleb128 0x6
 2492 016f 4B050000 		.4byte	.LASF32
 2493 0173 03       		.byte	0x3
 2494 0174 40       		.byte	0x40
 2495 0175 D5010000 		.4byte	0x1d5
 2496 0179 3C       		.byte	0x3c
 2497 017a 06       		.uleb128 0x6
 2498 017b FC010000 		.4byte	.LASF33
 2499 017f 03       		.byte	0x3
 2500 0180 41       		.byte	0x41
 2501 0181 D5010000 		.4byte	0x1d5
 2502 0185 40       		.byte	0x40
 2503 0186 06       		.uleb128 0x6
 2504 0187 0D000000 		.4byte	.LASF34
 2505 018b 03       		.byte	0x3
 2506 018c 42       		.byte	0x42
 2507 018d D5010000 		.4byte	0x1d5
 2508 0191 44       		.byte	0x44
 2509 0192 06       		.uleb128 0x6
 2510 0193 3E060000 		.4byte	.LASF35
 2511 0197 03       		.byte	0x3
 2512 0198 43       		.byte	0x43
 2513 0199 FB010000 		.4byte	0x1fb
 2514 019d 48       		.byte	0x48
 2515 019e 06       		.uleb128 0x6
 2516 019f 12060000 		.4byte	.LASF36
 2517 01a3 03       		.byte	0x3
 2518 01a4 44       		.byte	0x44
 2519 01a5 0C020000 		.4byte	0x20c
 2520 01a9 4C       		.byte	0x4c
 2521 01aa 06       		.uleb128 0x6
 2522 01ab 4A040000 		.4byte	.LASF37
 2523 01af 03       		.byte	0x3
 2524 01b0 45       		.byte	0x45
 2525 01b1 FB010000 		.4byte	0x1fb
 2526 01b5 50       		.byte	0x50
 2527 01b6 06       		.uleb128 0x6
 2528 01b7 78000000 		.4byte	.LASF38
 2529 01bb 03       		.byte	0x3
 2530 01bc 46       		.byte	0x46
 2531 01bd 26020000 		.4byte	0x226
 2532 01c1 54       		.byte	0x54
 2533 01c2 06       		.uleb128 0x6
 2534 01c3 980A0000 		.4byte	.LASF39
 2535 01c7 03       		.byte	0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 96


 2536 01c8 47       		.byte	0x47
 2537 01c9 41020000 		.4byte	0x241
 2538 01cd 58       		.byte	0x58
 2539 01ce 00       		.byte	0
 2540 01cf 07       		.uleb128 0x7
 2541 01d0 04       		.byte	0x4
 2542 01d1 6B000000 		.4byte	0x6b
 2543 01d5 07       		.uleb128 0x7
 2544 01d6 04       		.byte	0x4
 2545 01d7 DB010000 		.4byte	0x1db
 2546 01db 08       		.uleb128 0x8
 2547 01dc 6B000000 		.4byte	0x6b
 2548 01e0 07       		.uleb128 0x7
 2549 01e1 04       		.byte	0x4
 2550 01e2 83000000 		.4byte	0x83
 2551 01e6 07       		.uleb128 0x7
 2552 01e7 04       		.byte	0x4
 2553 01e8 77000000 		.4byte	0x77
 2554 01ec 09       		.uleb128 0x9
 2555 01ed 77000000 		.4byte	0x77
 2556 01f1 FB010000 		.4byte	0x1fb
 2557 01f5 0A       		.uleb128 0xa
 2558 01f6 83000000 		.4byte	0x83
 2559 01fa 00       		.byte	0
 2560 01fb 07       		.uleb128 0x7
 2561 01fc 04       		.byte	0x4
 2562 01fd EC010000 		.4byte	0x1ec
 2563 0201 0B       		.uleb128 0xb
 2564 0202 0C020000 		.4byte	0x20c
 2565 0206 0A       		.uleb128 0xa
 2566 0207 83000000 		.4byte	0x83
 2567 020b 00       		.byte	0
 2568 020c 07       		.uleb128 0x7
 2569 020d 04       		.byte	0x4
 2570 020e 01020000 		.4byte	0x201
 2571 0212 09       		.uleb128 0x9
 2572 0213 83000000 		.4byte	0x83
 2573 0217 26020000 		.4byte	0x226
 2574 021b 0A       		.uleb128 0xa
 2575 021c D5010000 		.4byte	0x1d5
 2576 0220 0A       		.uleb128 0xa
 2577 0221 83000000 		.4byte	0x83
 2578 0225 00       		.byte	0
 2579 0226 07       		.uleb128 0x7
 2580 0227 04       		.byte	0x4
 2581 0228 12020000 		.4byte	0x212
 2582 022c 0B       		.uleb128 0xb
 2583 022d 41020000 		.4byte	0x241
 2584 0231 0A       		.uleb128 0xa
 2585 0232 CF010000 		.4byte	0x1cf
 2586 0236 0A       		.uleb128 0xa
 2587 0237 83000000 		.4byte	0x83
 2588 023b 0A       		.uleb128 0xa
 2589 023c 83000000 		.4byte	0x83
 2590 0240 00       		.byte	0
 2591 0241 07       		.uleb128 0x7
 2592 0242 04       		.byte	0x4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 97


 2593 0243 2C020000 		.4byte	0x22c
 2594 0247 0C       		.uleb128 0xc
 2595 0248 DB060000 		.4byte	.LASF40
 2596 024c 03       		.byte	0x3
 2597 024d 48       		.byte	0x48
 2598 024e B2000000 		.4byte	0xb2
 2599 0252 05       		.uleb128 0x5
 2600 0253 0C       		.byte	0xc
 2601 0254 03       		.byte	0x3
 2602 0255 4A       		.byte	0x4a
 2603 0256 A3020000 		.4byte	0x2a3
 2604 025a 06       		.uleb128 0x6
 2605 025b C2040000 		.4byte	.LASF41
 2606 025f 03       		.byte	0x3
 2607 0260 4C       		.byte	0x4c
 2608 0261 6B000000 		.4byte	0x6b
 2609 0265 00       		.byte	0
 2610 0266 06       		.uleb128 0x6
 2611 0267 09020000 		.4byte	.LASF42
 2612 026b 03       		.byte	0x3
 2613 026c 4D       		.byte	0x4d
 2614 026d 6B000000 		.4byte	0x6b
 2615 0271 01       		.byte	0x1
 2616 0272 06       		.uleb128 0x6
 2617 0273 E5000000 		.4byte	.LASF43
 2618 0277 03       		.byte	0x3
 2619 0278 4E       		.byte	0x4e
 2620 0279 6B000000 		.4byte	0x6b
 2621 027d 02       		.byte	0x2
 2622 027e 06       		.uleb128 0x6
 2623 027f FE040000 		.4byte	.LASF44
 2624 0283 03       		.byte	0x3
 2625 0284 4F       		.byte	0x4f
 2626 0285 77000000 		.4byte	0x77
 2627 0289 04       		.byte	0x4
 2628 028a 06       		.uleb128 0x6
 2629 028b E2070000 		.4byte	.LASF45
 2630 028f 03       		.byte	0x3
 2631 0290 50       		.byte	0x50
 2632 0291 77000000 		.4byte	0x77
 2633 0295 06       		.byte	0x6
 2634 0296 06       		.uleb128 0x6
 2635 0297 0A090000 		.4byte	.LASF46
 2636 029b 03       		.byte	0x3
 2637 029c 51       		.byte	0x51
 2638 029d A3020000 		.4byte	0x2a3
 2639 02a1 08       		.byte	0x8
 2640 02a2 00       		.byte	0
 2641 02a3 07       		.uleb128 0x7
 2642 02a4 04       		.byte	0x4
 2643 02a5 A9020000 		.4byte	0x2a9
 2644 02a9 08       		.uleb128 0x8
 2645 02aa 47020000 		.4byte	0x247
 2646 02ae 0C       		.uleb128 0xc
 2647 02af 5B040000 		.4byte	.LASF47
 2648 02b3 03       		.byte	0x3
 2649 02b4 52       		.byte	0x52
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 98


 2650 02b5 52020000 		.4byte	0x252
 2651 02b9 0D       		.uleb128 0xd
 2652 02ba 87000000 		.4byte	.LASF48
 2653 02be 01       		.byte	0x1
 2654 02bf A0       		.byte	0xa0
 2655 02c0 00000000 		.4byte	.LFB32
 2656 02c4 88000000 		.4byte	.LFE32-.LFB32
 2657 02c8 01       		.uleb128 0x1
 2658 02c9 9C       		.byte	0x9c
 2659 02ca EB020000 		.4byte	0x2eb
 2660 02ce 0E       		.uleb128 0xe
 2661 02cf F7040000 		.4byte	.LASF50
 2662 02d3 01       		.byte	0x1
 2663 02d4 A0       		.byte	0xa0
 2664 02d5 83000000 		.4byte	0x83
 2665 02d9 02       		.uleb128 0x2
 2666 02da 91       		.byte	0x91
 2667 02db 6C       		.sleb128 -20
 2668 02dc 0F       		.uleb128 0xf
 2669 02dd 77030000 		.4byte	.LASF52
 2670 02e1 01       		.byte	0x1
 2671 02e2 A4       		.byte	0xa4
 2672 02e3 6B000000 		.4byte	0x6b
 2673 02e7 02       		.uleb128 0x2
 2674 02e8 91       		.byte	0x91
 2675 02e9 77       		.sleb128 -9
 2676 02ea 00       		.byte	0
 2677 02eb 10       		.uleb128 0x10
 2678 02ec 1A0A0000 		.4byte	.LASF49
 2679 02f0 01       		.byte	0x1
 2680 02f1 EC       		.byte	0xec
 2681 02f2 00000000 		.4byte	.LFB33
 2682 02f6 2A000000 		.4byte	.LFE33-.LFB33
 2683 02fa 01       		.uleb128 0x1
 2684 02fb 9C       		.byte	0x9c
 2685 02fc 0F030000 		.4byte	0x30f
 2686 0300 0E       		.uleb128 0xe
 2687 0301 F7040000 		.4byte	.LASF50
 2688 0305 01       		.byte	0x1
 2689 0306 EC       		.byte	0xec
 2690 0307 83000000 		.4byte	0x83
 2691 030b 02       		.uleb128 0x2
 2692 030c 91       		.byte	0x91
 2693 030d 74       		.sleb128 -12
 2694 030e 00       		.byte	0
 2695 030f 11       		.uleb128 0x11
 2696 0310 A70A0000 		.4byte	.LASF51
 2697 0314 01       		.byte	0x1
 2698 0315 1101     		.2byte	0x111
 2699 0317 00000000 		.4byte	.LFB34
 2700 031b 28000000 		.4byte	.LFE34-.LFB34
 2701 031f 01       		.uleb128 0x1
 2702 0320 9C       		.byte	0x9c
 2703 0321 33030000 		.4byte	0x333
 2704 0325 12       		.uleb128 0x12
 2705 0326 6900     		.ascii	"i\000"
 2706 0328 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 99


 2707 0329 1301     		.2byte	0x113
 2708 032b 83000000 		.4byte	0x83
 2709 032f 02       		.uleb128 0x2
 2710 0330 91       		.byte	0x91
 2711 0331 74       		.sleb128 -12
 2712 0332 00       		.byte	0
 2713 0333 11       		.uleb128 0x11
 2714 0334 F5000000 		.4byte	.LASF53
 2715 0338 01       		.byte	0x1
 2716 0339 3401     		.2byte	0x134
 2717 033b 00000000 		.4byte	.LFB35
 2718 033f 50000000 		.4byte	.LFE35-.LFB35
 2719 0343 01       		.uleb128 0x1
 2720 0344 9C       		.byte	0x9c
 2721 0345 66030000 		.4byte	0x366
 2722 0349 12       		.uleb128 0x12
 2723 034a 6900     		.ascii	"i\000"
 2724 034c 01       		.byte	0x1
 2725 034d 3601     		.2byte	0x136
 2726 034f 83000000 		.4byte	0x83
 2727 0353 02       		.uleb128 0x2
 2728 0354 91       		.byte	0x91
 2729 0355 74       		.sleb128 -12
 2730 0356 13       		.uleb128 0x13
 2731 0357 BB000000 		.4byte	.LASF54
 2732 035b 01       		.byte	0x1
 2733 035c 3701     		.2byte	0x137
 2734 035e 83000000 		.4byte	0x83
 2735 0362 02       		.uleb128 0x2
 2736 0363 91       		.byte	0x91
 2737 0364 70       		.sleb128 -16
 2738 0365 00       		.byte	0
 2739 0366 11       		.uleb128 0x11
 2740 0367 EC030000 		.4byte	.LASF55
 2741 036b 01       		.byte	0x1
 2742 036c 7501     		.2byte	0x175
 2743 036e 00000000 		.4byte	.LFB36
 2744 0372 08020000 		.4byte	.LFE36-.LFB36
 2745 0376 01       		.uleb128 0x1
 2746 0377 9C       		.byte	0x9c
 2747 0378 E6030000 		.4byte	0x3e6
 2748 037c 14       		.uleb128 0x14
 2749 037d F7040000 		.4byte	.LASF50
 2750 0381 01       		.byte	0x1
 2751 0382 7501     		.2byte	0x175
 2752 0384 83000000 		.4byte	0x83
 2753 0388 02       		.uleb128 0x2
 2754 0389 91       		.byte	0x91
 2755 038a 5C       		.sleb128 -36
 2756 038b 13       		.uleb128 0x13
 2757 038c 45040000 		.4byte	.LASF56
 2758 0390 01       		.byte	0x1
 2759 0391 7701     		.2byte	0x177
 2760 0393 83000000 		.4byte	0x83
 2761 0397 02       		.uleb128 0x2
 2762 0398 91       		.byte	0x91
 2763 0399 60       		.sleb128 -32
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 100


 2764 039a 13       		.uleb128 0x13
 2765 039b 2F040000 		.4byte	.LASF57
 2766 039f 01       		.byte	0x1
 2767 03a0 7801     		.2byte	0x178
 2768 03a2 83000000 		.4byte	0x83
 2769 03a6 02       		.uleb128 0x2
 2770 03a7 91       		.byte	0x91
 2771 03a8 6C       		.sleb128 -20
 2772 03a9 13       		.uleb128 0x13
 2773 03aa CB0A0000 		.4byte	.LASF58
 2774 03ae 01       		.byte	0x1
 2775 03af 7901     		.2byte	0x179
 2776 03b1 77000000 		.4byte	0x77
 2777 03b5 02       		.uleb128 0x2
 2778 03b6 91       		.byte	0x91
 2779 03b7 6A       		.sleb128 -22
 2780 03b8 13       		.uleb128 0x13
 2781 03b9 A1040000 		.4byte	.LASF59
 2782 03bd 01       		.byte	0x1
 2783 03be 7A01     		.2byte	0x17a
 2784 03c0 77000000 		.4byte	0x77
 2785 03c4 02       		.uleb128 0x2
 2786 03c5 91       		.byte	0x91
 2787 03c6 68       		.sleb128 -24
 2788 03c7 13       		.uleb128 0x13
 2789 03c8 77030000 		.4byte	.LASF52
 2790 03cc 01       		.byte	0x1
 2791 03cd 7B01     		.2byte	0x17b
 2792 03cf 6B000000 		.4byte	0x6b
 2793 03d3 02       		.uleb128 0x2
 2794 03d4 91       		.byte	0x91
 2795 03d5 67       		.sleb128 -25
 2796 03d6 13       		.uleb128 0x13
 2797 03d7 4A090000 		.4byte	.LASF60
 2798 03db 01       		.byte	0x1
 2799 03dc 7C01     		.2byte	0x17c
 2800 03de 6B000000 		.4byte	0x6b
 2801 03e2 02       		.uleb128 0x2
 2802 03e3 91       		.byte	0x91
 2803 03e4 66       		.sleb128 -26
 2804 03e5 00       		.byte	0
 2805 03e6 11       		.uleb128 0x11
 2806 03e7 24070000 		.4byte	.LASF61
 2807 03eb 01       		.byte	0x1
 2808 03ec 3502     		.2byte	0x235
 2809 03ee 00000000 		.4byte	.LFB37
 2810 03f2 20000000 		.4byte	.LFE37-.LFB37
 2811 03f6 01       		.uleb128 0x1
 2812 03f7 9C       		.byte	0x9c
 2813 03f8 0C040000 		.4byte	0x40c
 2814 03fc 14       		.uleb128 0x14
 2815 03fd F7040000 		.4byte	.LASF50
 2816 0401 01       		.byte	0x1
 2817 0402 3502     		.2byte	0x235
 2818 0404 83000000 		.4byte	0x83
 2819 0408 02       		.uleb128 0x2
 2820 0409 91       		.byte	0x91
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 101


 2821 040a 74       		.sleb128 -12
 2822 040b 00       		.byte	0
 2823 040c 11       		.uleb128 0x11
 2824 040d 65060000 		.4byte	.LASF62
 2825 0411 01       		.byte	0x1
 2826 0412 6B02     		.2byte	0x26b
 2827 0414 00000000 		.4byte	.LFB38
 2828 0418 44000000 		.4byte	.LFE38-.LFB38
 2829 041c 01       		.uleb128 0x1
 2830 041d 9C       		.byte	0x9c
 2831 041e 3F040000 		.4byte	0x43f
 2832 0422 12       		.uleb128 0x12
 2833 0423 6900     		.ascii	"i\000"
 2834 0425 01       		.byte	0x1
 2835 0426 6D02     		.2byte	0x26d
 2836 0428 83000000 		.4byte	0x83
 2837 042c 02       		.uleb128 0x2
 2838 042d 91       		.byte	0x91
 2839 042e 74       		.sleb128 -12
 2840 042f 13       		.uleb128 0x13
 2841 0430 BB000000 		.4byte	.LASF54
 2842 0434 01       		.byte	0x1
 2843 0435 6E02     		.2byte	0x26e
 2844 0437 83000000 		.4byte	0x83
 2845 043b 02       		.uleb128 0x2
 2846 043c 91       		.byte	0x91
 2847 043d 70       		.sleb128 -16
 2848 043e 00       		.byte	0
 2849 043f 11       		.uleb128 0x11
 2850 0440 9D030000 		.4byte	.LASF63
 2851 0444 01       		.byte	0x1
 2852 0445 9802     		.2byte	0x298
 2853 0447 00000000 		.4byte	.LFB39
 2854 044b 74000000 		.4byte	.LFE39-.LFB39
 2855 044f 01       		.uleb128 0x1
 2856 0450 9C       		.byte	0x9c
 2857 0451 AE040000 		.4byte	0x4ae
 2858 0455 14       		.uleb128 0x14
 2859 0456 77030000 		.4byte	.LASF52
 2860 045a 01       		.byte	0x1
 2861 045b 9802     		.2byte	0x298
 2862 045d 83000000 		.4byte	0x83
 2863 0461 02       		.uleb128 0x2
 2864 0462 91       		.byte	0x91
 2865 0463 5C       		.sleb128 -36
 2866 0464 13       		.uleb128 0x13
 2867 0465 B1040000 		.4byte	.LASF64
 2868 0469 01       		.byte	0x1
 2869 046a 9A02     		.2byte	0x29a
 2870 046c 83000000 		.4byte	0x83
 2871 0470 02       		.uleb128 0x2
 2872 0471 91       		.byte	0x91
 2873 0472 70       		.sleb128 -16
 2874 0473 13       		.uleb128 0x13
 2875 0474 30080000 		.4byte	.LASF65
 2876 0478 01       		.byte	0x1
 2877 0479 9B02     		.2byte	0x29b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 102


 2878 047b 83000000 		.4byte	0x83
 2879 047f 02       		.uleb128 0x2
 2880 0480 91       		.byte	0x91
 2881 0481 6C       		.sleb128 -20
 2882 0482 13       		.uleb128 0x13
 2883 0483 C3070000 		.4byte	.LASF66
 2884 0487 01       		.byte	0x1
 2885 0488 9C02     		.2byte	0x29c
 2886 048a 83000000 		.4byte	0x83
 2887 048e 02       		.uleb128 0x2
 2888 048f 91       		.byte	0x91
 2889 0490 68       		.sleb128 -24
 2890 0491 12       		.uleb128 0x12
 2891 0492 6900     		.ascii	"i\000"
 2892 0494 01       		.byte	0x1
 2893 0495 9D02     		.2byte	0x29d
 2894 0497 83000000 		.4byte	0x83
 2895 049b 02       		.uleb128 0x2
 2896 049c 91       		.byte	0x91
 2897 049d 74       		.sleb128 -12
 2898 049e 13       		.uleb128 0x13
 2899 049f BB000000 		.4byte	.LASF54
 2900 04a3 01       		.byte	0x1
 2901 04a4 9E02     		.2byte	0x29e
 2902 04a6 83000000 		.4byte	0x83
 2903 04aa 02       		.uleb128 0x2
 2904 04ab 91       		.byte	0x91
 2905 04ac 64       		.sleb128 -28
 2906 04ad 00       		.byte	0
 2907 04ae 15       		.uleb128 0x15
 2908 04af D2080000 		.4byte	.LASF69
 2909 04b3 01       		.byte	0x1
 2910 04b4 C902     		.2byte	0x2c9
 2911 04b6 77000000 		.4byte	0x77
 2912 04ba 00000000 		.4byte	.LFB40
 2913 04be 1C000000 		.4byte	.LFE40-.LFB40
 2914 04c2 01       		.uleb128 0x1
 2915 04c3 9C       		.byte	0x9c
 2916 04c4 D8040000 		.4byte	0x4d8
 2917 04c8 14       		.uleb128 0x14
 2918 04c9 F7040000 		.4byte	.LASF50
 2919 04cd 01       		.byte	0x1
 2920 04ce C902     		.2byte	0x2c9
 2921 04d0 83000000 		.4byte	0x83
 2922 04d4 02       		.uleb128 0x2
 2923 04d5 91       		.byte	0x91
 2924 04d6 74       		.sleb128 -12
 2925 04d7 00       		.byte	0
 2926 04d8 16       		.uleb128 0x16
 2927 04d9 1D010000 		.4byte	.LASF67
 2928 04dd 01       		.byte	0x1
 2929 04de E402     		.2byte	0x2e4
 2930 04e0 00000000 		.4byte	.LFB41
 2931 04e4 28000000 		.4byte	.LFE41-.LFB41
 2932 04e8 01       		.uleb128 0x1
 2933 04e9 9C       		.byte	0x9c
 2934 04ea 0D050000 		.4byte	0x50d
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 103


 2935 04ee 14       		.uleb128 0x14
 2936 04ef F7040000 		.4byte	.LASF50
 2937 04f3 01       		.byte	0x1
 2938 04f4 E402     		.2byte	0x2e4
 2939 04f6 83000000 		.4byte	0x83
 2940 04fa 02       		.uleb128 0x2
 2941 04fb 91       		.byte	0x91
 2942 04fc 74       		.sleb128 -12
 2943 04fd 14       		.uleb128 0x14
 2944 04fe 61050000 		.4byte	.LASF68
 2945 0502 01       		.byte	0x1
 2946 0503 E402     		.2byte	0x2e4
 2947 0505 77000000 		.4byte	0x77
 2948 0509 02       		.uleb128 0x2
 2949 050a 91       		.byte	0x91
 2950 050b 72       		.sleb128 -14
 2951 050c 00       		.byte	0
 2952 050d 15       		.uleb128 0x15
 2953 050e 54080000 		.4byte	.LASF70
 2954 0512 01       		.byte	0x1
 2955 0513 FF02     		.2byte	0x2ff
 2956 0515 6B000000 		.4byte	0x6b
 2957 0519 00000000 		.4byte	.LFB42
 2958 051d 1C000000 		.4byte	.LFE42-.LFB42
 2959 0521 01       		.uleb128 0x1
 2960 0522 9C       		.byte	0x9c
 2961 0523 37050000 		.4byte	0x537
 2962 0527 14       		.uleb128 0x14
 2963 0528 F7040000 		.4byte	.LASF50
 2964 052c 01       		.byte	0x1
 2965 052d FF02     		.2byte	0x2ff
 2966 052f 83000000 		.4byte	0x83
 2967 0533 02       		.uleb128 0x2
 2968 0534 91       		.byte	0x91
 2969 0535 74       		.sleb128 -12
 2970 0536 00       		.byte	0
 2971 0537 16       		.uleb128 0x16
 2972 0538 06070000 		.4byte	.LASF71
 2973 053c 01       		.byte	0x1
 2974 053d 1A03     		.2byte	0x31a
 2975 053f 00000000 		.4byte	.LFB43
 2976 0543 28000000 		.4byte	.LFE43-.LFB43
 2977 0547 01       		.uleb128 0x1
 2978 0548 9C       		.byte	0x9c
 2979 0549 6C050000 		.4byte	0x56c
 2980 054d 14       		.uleb128 0x14
 2981 054e F7040000 		.4byte	.LASF50
 2982 0552 01       		.byte	0x1
 2983 0553 1A03     		.2byte	0x31a
 2984 0555 83000000 		.4byte	0x83
 2985 0559 02       		.uleb128 0x2
 2986 055a 91       		.byte	0x91
 2987 055b 74       		.sleb128 -12
 2988 055c 14       		.uleb128 0x14
 2989 055d BF030000 		.4byte	.LASF72
 2990 0561 01       		.byte	0x1
 2991 0562 1A03     		.2byte	0x31a
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 104


 2992 0564 6B000000 		.4byte	0x6b
 2993 0568 02       		.uleb128 0x2
 2994 0569 91       		.byte	0x91
 2995 056a 73       		.sleb128 -13
 2996 056b 00       		.byte	0
 2997 056c 15       		.uleb128 0x15
 2998 056d E9050000 		.4byte	.LASF73
 2999 0571 01       		.byte	0x1
 3000 0572 3503     		.2byte	0x335
 3001 0574 6B000000 		.4byte	0x6b
 3002 0578 00000000 		.4byte	.LFB44
 3003 057c 1C000000 		.4byte	.LFE44-.LFB44
 3004 0580 01       		.uleb128 0x1
 3005 0581 9C       		.byte	0x9c
 3006 0582 96050000 		.4byte	0x596
 3007 0586 14       		.uleb128 0x14
 3008 0587 77030000 		.4byte	.LASF52
 3009 058b 01       		.byte	0x1
 3010 058c 3503     		.2byte	0x335
 3011 058e 83000000 		.4byte	0x83
 3012 0592 02       		.uleb128 0x2
 3013 0593 91       		.byte	0x91
 3014 0594 74       		.sleb128 -12
 3015 0595 00       		.byte	0
 3016 0596 15       		.uleb128 0x15
 3017 0597 F6020000 		.4byte	.LASF74
 3018 059b 01       		.byte	0x1
 3019 059c 5003     		.2byte	0x350
 3020 059e 6B000000 		.4byte	0x6b
 3021 05a2 00000000 		.4byte	.LFB45
 3022 05a6 1C000000 		.4byte	.LFE45-.LFB45
 3023 05aa 01       		.uleb128 0x1
 3024 05ab 9C       		.byte	0x9c
 3025 05ac C0050000 		.4byte	0x5c0
 3026 05b0 14       		.uleb128 0x14
 3027 05b1 77030000 		.4byte	.LASF52
 3028 05b5 01       		.byte	0x1
 3029 05b6 5003     		.2byte	0x350
 3030 05b8 83000000 		.4byte	0x83
 3031 05bc 02       		.uleb128 0x2
 3032 05bd 91       		.byte	0x91
 3033 05be 74       		.sleb128 -12
 3034 05bf 00       		.byte	0
 3035 05c0 15       		.uleb128 0x15
 3036 05c1 1D060000 		.4byte	.LASF75
 3037 05c5 01       		.byte	0x1
 3038 05c6 6C03     		.2byte	0x36c
 3039 05c8 6B000000 		.4byte	0x6b
 3040 05cc 00000000 		.4byte	.LFB46
 3041 05d0 1C000000 		.4byte	.LFE46-.LFB46
 3042 05d4 01       		.uleb128 0x1
 3043 05d5 9C       		.byte	0x9c
 3044 05d6 EA050000 		.4byte	0x5ea
 3045 05da 14       		.uleb128 0x14
 3046 05db 77030000 		.4byte	.LASF52
 3047 05df 01       		.byte	0x1
 3048 05e0 6C03     		.2byte	0x36c
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 105


 3049 05e2 83000000 		.4byte	0x83
 3050 05e6 02       		.uleb128 0x2
 3051 05e7 91       		.byte	0x91
 3052 05e8 74       		.sleb128 -12
 3053 05e9 00       		.byte	0
 3054 05ea 15       		.uleb128 0x15
 3055 05eb 75050000 		.4byte	.LASF76
 3056 05ef 01       		.byte	0x1
 3057 05f0 8803     		.2byte	0x388
 3058 05f2 6B000000 		.4byte	0x6b
 3059 05f6 00000000 		.4byte	.LFB47
 3060 05fa 1C000000 		.4byte	.LFE47-.LFB47
 3061 05fe 01       		.uleb128 0x1
 3062 05ff 9C       		.byte	0x9c
 3063 0600 14060000 		.4byte	0x614
 3064 0604 14       		.uleb128 0x14
 3065 0605 77030000 		.4byte	.LASF52
 3066 0609 01       		.byte	0x1
 3067 060a 8803     		.2byte	0x388
 3068 060c 83000000 		.4byte	0x83
 3069 0610 02       		.uleb128 0x2
 3070 0611 91       		.byte	0x91
 3071 0612 74       		.sleb128 -12
 3072 0613 00       		.byte	0
 3073 0614 16       		.uleb128 0x16
 3074 0615 3A020000 		.4byte	.LASF77
 3075 0619 01       		.byte	0x1
 3076 061a A903     		.2byte	0x3a9
 3077 061c 00000000 		.4byte	.LFB48
 3078 0620 28000000 		.4byte	.LFE48-.LFB48
 3079 0624 01       		.uleb128 0x1
 3080 0625 9C       		.byte	0x9c
 3081 0626 49060000 		.4byte	0x649
 3082 062a 14       		.uleb128 0x14
 3083 062b 77030000 		.4byte	.LASF52
 3084 062f 01       		.byte	0x1
 3085 0630 A903     		.2byte	0x3a9
 3086 0632 83000000 		.4byte	0x83
 3087 0636 02       		.uleb128 0x2
 3088 0637 91       		.byte	0x91
 3089 0638 74       		.sleb128 -12
 3090 0639 14       		.uleb128 0x14
 3091 063a BF030000 		.4byte	.LASF72
 3092 063e 01       		.byte	0x1
 3093 063f A903     		.2byte	0x3a9
 3094 0641 6B000000 		.4byte	0x6b
 3095 0645 02       		.uleb128 0x2
 3096 0646 91       		.byte	0x91
 3097 0647 73       		.sleb128 -13
 3098 0648 00       		.byte	0
 3099 0649 16       		.uleb128 0x16
 3100 064a 7E030000 		.4byte	.LASF78
 3101 064e 01       		.byte	0x1
 3102 064f C503     		.2byte	0x3c5
 3103 0651 00000000 		.4byte	.LFB49
 3104 0655 28000000 		.4byte	.LFE49-.LFB49
 3105 0659 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 106


 3106 065a 9C       		.byte	0x9c
 3107 065b 7E060000 		.4byte	0x67e
 3108 065f 14       		.uleb128 0x14
 3109 0660 77030000 		.4byte	.LASF52
 3110 0664 01       		.byte	0x1
 3111 0665 C503     		.2byte	0x3c5
 3112 0667 83000000 		.4byte	0x83
 3113 066b 02       		.uleb128 0x2
 3114 066c 91       		.byte	0x91
 3115 066d 74       		.sleb128 -12
 3116 066e 14       		.uleb128 0x14
 3117 066f BF030000 		.4byte	.LASF72
 3118 0673 01       		.byte	0x1
 3119 0674 C503     		.2byte	0x3c5
 3120 0676 6B000000 		.4byte	0x6b
 3121 067a 02       		.uleb128 0x2
 3122 067b 91       		.byte	0x91
 3123 067c 73       		.sleb128 -13
 3124 067d 00       		.byte	0
 3125 067e 16       		.uleb128 0x16
 3126 067f 7B090000 		.4byte	.LASF79
 3127 0683 01       		.byte	0x1
 3128 0684 E103     		.2byte	0x3e1
 3129 0686 00000000 		.4byte	.LFB50
 3130 068a 28000000 		.4byte	.LFE50-.LFB50
 3131 068e 01       		.uleb128 0x1
 3132 068f 9C       		.byte	0x9c
 3133 0690 B3060000 		.4byte	0x6b3
 3134 0694 14       		.uleb128 0x14
 3135 0695 77030000 		.4byte	.LASF52
 3136 0699 01       		.byte	0x1
 3137 069a E103     		.2byte	0x3e1
 3138 069c 83000000 		.4byte	0x83
 3139 06a0 02       		.uleb128 0x2
 3140 06a1 91       		.byte	0x91
 3141 06a2 74       		.sleb128 -12
 3142 06a3 14       		.uleb128 0x14
 3143 06a4 BF030000 		.4byte	.LASF72
 3144 06a8 01       		.byte	0x1
 3145 06a9 E103     		.2byte	0x3e1
 3146 06ab 6B000000 		.4byte	0x6b
 3147 06af 02       		.uleb128 0x2
 3148 06b0 91       		.byte	0x91
 3149 06b1 73       		.sleb128 -13
 3150 06b2 00       		.byte	0
 3151 06b3 16       		.uleb128 0x16
 3152 06b4 C5030000 		.4byte	.LASF80
 3153 06b8 01       		.byte	0x1
 3154 06b9 FE03     		.2byte	0x3fe
 3155 06bb 00000000 		.4byte	.LFB51
 3156 06bf 28000000 		.4byte	.LFE51-.LFB51
 3157 06c3 01       		.uleb128 0x1
 3158 06c4 9C       		.byte	0x9c
 3159 06c5 E8060000 		.4byte	0x6e8
 3160 06c9 14       		.uleb128 0x14
 3161 06ca 77030000 		.4byte	.LASF52
 3162 06ce 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 107


 3163 06cf FE03     		.2byte	0x3fe
 3164 06d1 83000000 		.4byte	0x83
 3165 06d5 02       		.uleb128 0x2
 3166 06d6 91       		.byte	0x91
 3167 06d7 74       		.sleb128 -12
 3168 06d8 14       		.uleb128 0x14
 3169 06d9 BF030000 		.4byte	.LASF72
 3170 06dd 01       		.byte	0x1
 3171 06de FE03     		.2byte	0x3fe
 3172 06e0 6B000000 		.4byte	0x6b
 3173 06e4 02       		.uleb128 0x2
 3174 06e5 91       		.byte	0x91
 3175 06e6 73       		.sleb128 -13
 3176 06e7 00       		.byte	0
 3177 06e8 16       		.uleb128 0x16
 3178 06e9 88040000 		.4byte	.LASF81
 3179 06ed 01       		.byte	0x1
 3180 06ee 1A04     		.2byte	0x41a
 3181 06f0 00000000 		.4byte	.LFB52
 3182 06f4 28000000 		.4byte	.LFE52-.LFB52
 3183 06f8 01       		.uleb128 0x1
 3184 06f9 9C       		.byte	0x9c
 3185 06fa 1D070000 		.4byte	0x71d
 3186 06fe 14       		.uleb128 0x14
 3187 06ff 77030000 		.4byte	.LASF52
 3188 0703 01       		.byte	0x1
 3189 0704 1A04     		.2byte	0x41a
 3190 0706 83000000 		.4byte	0x83
 3191 070a 02       		.uleb128 0x2
 3192 070b 91       		.byte	0x91
 3193 070c 74       		.sleb128 -12
 3194 070d 14       		.uleb128 0x14
 3195 070e BF030000 		.4byte	.LASF72
 3196 0712 01       		.byte	0x1
 3197 0713 1A04     		.2byte	0x41a
 3198 0715 6B000000 		.4byte	0x6b
 3199 0719 02       		.uleb128 0x2
 3200 071a 91       		.byte	0x91
 3201 071b 73       		.sleb128 -13
 3202 071c 00       		.byte	0
 3203 071d 16       		.uleb128 0x16
 3204 071e 7C070000 		.4byte	.LASF82
 3205 0722 01       		.byte	0x1
 3206 0723 3604     		.2byte	0x436
 3207 0725 00000000 		.4byte	.LFB53
 3208 0729 28000000 		.4byte	.LFE53-.LFB53
 3209 072d 01       		.uleb128 0x1
 3210 072e 9C       		.byte	0x9c
 3211 072f 52070000 		.4byte	0x752
 3212 0733 14       		.uleb128 0x14
 3213 0734 F7040000 		.4byte	.LASF50
 3214 0738 01       		.byte	0x1
 3215 0739 3604     		.2byte	0x436
 3216 073b 83000000 		.4byte	0x83
 3217 073f 02       		.uleb128 0x2
 3218 0740 91       		.byte	0x91
 3219 0741 74       		.sleb128 -12
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 108


 3220 0742 14       		.uleb128 0x14
 3221 0743 BF030000 		.4byte	.LASF72
 3222 0747 01       		.byte	0x1
 3223 0748 3604     		.2byte	0x436
 3224 074a 6B000000 		.4byte	0x6b
 3225 074e 02       		.uleb128 0x2
 3226 074f 91       		.byte	0x91
 3227 0750 73       		.sleb128 -13
 3228 0751 00       		.byte	0
 3229 0752 17       		.uleb128 0x17
 3230 0753 A7080000 		.4byte	.LASF83
 3231 0757 01       		.byte	0x1
 3232 0758 6404     		.2byte	0x464
 3233 075a 83000000 		.4byte	0x83
 3234 075e 00000000 		.4byte	.LFB54
 3235 0762 30010000 		.4byte	.LFE54-.LFB54
 3236 0766 01       		.uleb128 0x1
 3237 0767 9C       		.byte	0x9c
 3238 0768 C7070000 		.4byte	0x7c7
 3239 076c 14       		.uleb128 0x14
 3240 076d F7040000 		.4byte	.LASF50
 3241 0771 01       		.byte	0x1
 3242 0772 6404     		.2byte	0x464
 3243 0774 83000000 		.4byte	0x83
 3244 0778 02       		.uleb128 0x2
 3245 0779 91       		.byte	0x91
 3246 077a 6C       		.sleb128 -20
 3247 077b 13       		.uleb128 0x13
 3248 077c 77030000 		.4byte	.LASF52
 3249 0780 01       		.byte	0x1
 3250 0781 6604     		.2byte	0x466
 3251 0783 6B000000 		.4byte	0x6b
 3252 0787 02       		.uleb128 0x2
 3253 0788 91       		.byte	0x91
 3254 0789 77       		.sleb128 -9
 3255 078a 13       		.uleb128 0x13
 3256 078b 09060000 		.4byte	.LASF84
 3257 078f 01       		.byte	0x1
 3258 0790 6704     		.2byte	0x467
 3259 0792 6B000000 		.4byte	0x6b
 3260 0796 02       		.uleb128 0x2
 3261 0797 91       		.byte	0x91
 3262 0798 74       		.sleb128 -12
 3263 0799 13       		.uleb128 0x13
 3264 079a F3090000 		.4byte	.LASF85
 3265 079e 01       		.byte	0x1
 3266 079f 6804     		.2byte	0x468
 3267 07a1 6B000000 		.4byte	0x6b
 3268 07a5 02       		.uleb128 0x2
 3269 07a6 91       		.byte	0x91
 3270 07a7 73       		.sleb128 -13
 3271 07a8 13       		.uleb128 0x13
 3272 07a9 AE090000 		.4byte	.LASF86
 3273 07ad 01       		.byte	0x1
 3274 07ae 6A04     		.2byte	0x46a
 3275 07b0 6B000000 		.4byte	0x6b
 3276 07b4 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 109


 3277 07b5 91       		.byte	0x91
 3278 07b6 76       		.sleb128 -10
 3279 07b7 13       		.uleb128 0x13
 3280 07b8 7D040000 		.4byte	.LASF87
 3281 07bc 01       		.byte	0x1
 3282 07bd 6B04     		.2byte	0x46b
 3283 07bf 6B000000 		.4byte	0x6b
 3284 07c3 02       		.uleb128 0x2
 3285 07c4 91       		.byte	0x91
 3286 07c5 75       		.sleb128 -11
 3287 07c6 00       		.byte	0
 3288 07c7 17       		.uleb128 0x17
 3289 07c8 19020000 		.4byte	.LASF88
 3290 07cc 01       		.byte	0x1
 3291 07cd B604     		.2byte	0x4b6
 3292 07cf 83000000 		.4byte	0x83
 3293 07d3 00000000 		.4byte	.LFB55
 3294 07d7 58000000 		.4byte	.LFE55-.LFB55
 3295 07db 01       		.uleb128 0x1
 3296 07dc 9C       		.byte	0x9c
 3297 07dd 1E080000 		.4byte	0x81e
 3298 07e1 14       		.uleb128 0x14
 3299 07e2 77030000 		.4byte	.LASF52
 3300 07e6 01       		.byte	0x1
 3301 07e7 B604     		.2byte	0x4b6
 3302 07e9 83000000 		.4byte	0x83
 3303 07ed 02       		.uleb128 0x2
 3304 07ee 91       		.byte	0x91
 3305 07ef 64       		.sleb128 -28
 3306 07f0 13       		.uleb128 0x13
 3307 07f1 9C050000 		.4byte	.LASF89
 3308 07f5 01       		.byte	0x1
 3309 07f6 B804     		.2byte	0x4b8
 3310 07f8 83000000 		.4byte	0x83
 3311 07fc 02       		.uleb128 0x2
 3312 07fd 91       		.byte	0x91
 3313 07fe 74       		.sleb128 -12
 3314 07ff 13       		.uleb128 0x13
 3315 0800 CB000000 		.4byte	.LASF90
 3316 0804 01       		.byte	0x1
 3317 0805 B904     		.2byte	0x4b9
 3318 0807 83000000 		.4byte	0x83
 3319 080b 02       		.uleb128 0x2
 3320 080c 91       		.byte	0x91
 3321 080d 6C       		.sleb128 -20
 3322 080e 13       		.uleb128 0x13
 3323 080f 690A0000 		.4byte	.LASF91
 3324 0813 01       		.byte	0x1
 3325 0814 BA04     		.2byte	0x4ba
 3326 0816 83000000 		.4byte	0x83
 3327 081a 02       		.uleb128 0x2
 3328 081b 91       		.byte	0x91
 3329 081c 70       		.sleb128 -16
 3330 081d 00       		.byte	0
 3331 081e 17       		.uleb128 0x17
 3332 081f 83080000 		.4byte	.LASF92
 3333 0823 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 110


 3334 0824 E404     		.2byte	0x4e4
 3335 0826 83000000 		.4byte	0x83
 3336 082a 00000000 		.4byte	.LFB56
 3337 082e 36000000 		.4byte	.LFE56-.LFB56
 3338 0832 01       		.uleb128 0x1
 3339 0833 9C       		.byte	0x9c
 3340 0834 55080000 		.4byte	0x855
 3341 0838 12       		.uleb128 0x12
 3342 0839 6900     		.ascii	"i\000"
 3343 083b 01       		.byte	0x1
 3344 083c E704     		.2byte	0x4e7
 3345 083e 83000000 		.4byte	0x83
 3346 0842 02       		.uleb128 0x2
 3347 0843 91       		.byte	0x91
 3348 0844 74       		.sleb128 -12
 3349 0845 13       		.uleb128 0x13
 3350 0846 690A0000 		.4byte	.LASF91
 3351 084a 01       		.byte	0x1
 3352 084b E804     		.2byte	0x4e8
 3353 084d 83000000 		.4byte	0x83
 3354 0851 02       		.uleb128 0x2
 3355 0852 91       		.byte	0x91
 3356 0853 70       		.sleb128 -16
 3357 0854 00       		.byte	0
 3358 0855 11       		.uleb128 0x11
 3359 0856 400A0000 		.4byte	.LASF93
 3360 085a 01       		.byte	0x1
 3361 085b 1305     		.2byte	0x513
 3362 085d 00000000 		.4byte	.LFB57
 3363 0861 70000000 		.4byte	.LFE57-.LFB57
 3364 0865 01       		.uleb128 0x1
 3365 0866 9C       		.byte	0x9c
 3366 0867 99080000 		.4byte	0x899
 3367 086b 14       		.uleb128 0x14
 3368 086c 77030000 		.4byte	.LASF52
 3369 0870 01       		.byte	0x1
 3370 0871 1305     		.2byte	0x513
 3371 0873 83000000 		.4byte	0x83
 3372 0877 02       		.uleb128 0x2
 3373 0878 91       		.byte	0x91
 3374 0879 6C       		.sleb128 -20
 3375 087a 13       		.uleb128 0x13
 3376 087b 9C050000 		.4byte	.LASF89
 3377 087f 01       		.byte	0x1
 3378 0880 1605     		.2byte	0x516
 3379 0882 6B000000 		.4byte	0x6b
 3380 0886 02       		.uleb128 0x2
 3381 0887 91       		.byte	0x91
 3382 0888 77       		.sleb128 -9
 3383 0889 13       		.uleb128 0x13
 3384 088a CB000000 		.4byte	.LASF90
 3385 088e 01       		.byte	0x1
 3386 088f 1705     		.2byte	0x517
 3387 0891 6B000000 		.4byte	0x6b
 3388 0895 02       		.uleb128 0x2
 3389 0896 91       		.byte	0x91
 3390 0897 76       		.sleb128 -10
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 111


 3391 0898 00       		.byte	0
 3392 0899 11       		.uleb128 0x11
 3393 089a 30050000 		.4byte	.LASF94
 3394 089e 01       		.byte	0x1
 3395 089f 3E05     		.2byte	0x53e
 3396 08a1 00000000 		.4byte	.LFB58
 3397 08a5 70000000 		.4byte	.LFE58-.LFB58
 3398 08a9 01       		.uleb128 0x1
 3399 08aa 9C       		.byte	0x9c
 3400 08ab DD080000 		.4byte	0x8dd
 3401 08af 14       		.uleb128 0x14
 3402 08b0 77030000 		.4byte	.LASF52
 3403 08b4 01       		.byte	0x1
 3404 08b5 3E05     		.2byte	0x53e
 3405 08b7 83000000 		.4byte	0x83
 3406 08bb 02       		.uleb128 0x2
 3407 08bc 91       		.byte	0x91
 3408 08bd 6C       		.sleb128 -20
 3409 08be 13       		.uleb128 0x13
 3410 08bf 9C050000 		.4byte	.LASF89
 3411 08c3 01       		.byte	0x1
 3412 08c4 4005     		.2byte	0x540
 3413 08c6 6B000000 		.4byte	0x6b
 3414 08ca 02       		.uleb128 0x2
 3415 08cb 91       		.byte	0x91
 3416 08cc 77       		.sleb128 -9
 3417 08cd 13       		.uleb128 0x13
 3418 08ce CB000000 		.4byte	.LASF90
 3419 08d2 01       		.byte	0x1
 3420 08d3 4105     		.2byte	0x541
 3421 08d5 6B000000 		.4byte	0x6b
 3422 08d9 02       		.uleb128 0x2
 3423 08da 91       		.byte	0x91
 3424 08db 76       		.sleb128 -10
 3425 08dc 00       		.byte	0
 3426 08dd 15       		.uleb128 0x15
 3427 08de A5050000 		.4byte	.LASF95
 3428 08e2 01       		.byte	0x1
 3429 08e3 5A09     		.2byte	0x95a
 3430 08e5 77000000 		.4byte	0x77
 3431 08e9 00000000 		.4byte	.LFB59
 3432 08ed 76000000 		.4byte	.LFE59-.LFB59
 3433 08f1 01       		.uleb128 0x1
 3434 08f2 9C       		.byte	0x9c
 3435 08f3 31090000 		.4byte	0x931
 3436 08f7 18       		.uleb128 0x18
 3437 08f8 783100   		.ascii	"x1\000"
 3438 08fb 01       		.byte	0x1
 3439 08fc 5A09     		.2byte	0x95a
 3440 08fe 77000000 		.4byte	0x77
 3441 0902 02       		.uleb128 0x2
 3442 0903 91       		.byte	0x91
 3443 0904 66       		.sleb128 -26
 3444 0905 18       		.uleb128 0x18
 3445 0906 783200   		.ascii	"x2\000"
 3446 0909 01       		.byte	0x1
 3447 090a 5A09     		.2byte	0x95a
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 112


 3448 090c 77000000 		.4byte	0x77
 3449 0910 02       		.uleb128 0x2
 3450 0911 91       		.byte	0x91
 3451 0912 64       		.sleb128 -28
 3452 0913 18       		.uleb128 0x18
 3453 0914 783300   		.ascii	"x3\000"
 3454 0917 01       		.byte	0x1
 3455 0918 5A09     		.2byte	0x95a
 3456 091a 77000000 		.4byte	0x77
 3457 091e 02       		.uleb128 0x2
 3458 091f 91       		.byte	0x91
 3459 0920 62       		.sleb128 -30
 3460 0921 12       		.uleb128 0x12
 3461 0922 746D7000 		.ascii	"tmp\000"
 3462 0926 01       		.byte	0x1
 3463 0927 5C09     		.2byte	0x95c
 3464 0929 77000000 		.4byte	0x77
 3465 092d 02       		.uleb128 0x2
 3466 092e 91       		.byte	0x91
 3467 092f 6E       		.sleb128 -18
 3468 0930 00       		.byte	0
 3469 0931 15       		.uleb128 0x15
 3470 0932 010A0000 		.4byte	.LASF96
 3471 0936 01       		.byte	0x1
 3472 0937 4C0A     		.2byte	0xa4c
 3473 0939 77000000 		.4byte	0x77
 3474 093d 00000000 		.4byte	.LFB60
 3475 0941 3C000000 		.4byte	.LFE60-.LFB60
 3476 0945 01       		.uleb128 0x1
 3477 0946 9C       		.byte	0x9c
 3478 0947 77090000 		.4byte	0x977
 3479 094b 18       		.uleb128 0x18
 3480 094c 783100   		.ascii	"x1\000"
 3481 094f 01       		.byte	0x1
 3482 0950 4C0A     		.2byte	0xa4c
 3483 0952 77000000 		.4byte	0x77
 3484 0956 02       		.uleb128 0x2
 3485 0957 91       		.byte	0x91
 3486 0958 6E       		.sleb128 -18
 3487 0959 18       		.uleb128 0x18
 3488 095a 783200   		.ascii	"x2\000"
 3489 095d 01       		.byte	0x1
 3490 095e 4C0A     		.2byte	0xa4c
 3491 0960 77000000 		.4byte	0x77
 3492 0964 02       		.uleb128 0x2
 3493 0965 91       		.byte	0x91
 3494 0966 6C       		.sleb128 -20
 3495 0967 12       		.uleb128 0x12
 3496 0968 746D7000 		.ascii	"tmp\000"
 3497 096c 01       		.byte	0x1
 3498 096d 4E0A     		.2byte	0xa4e
 3499 096f 83000000 		.4byte	0x83
 3500 0973 02       		.uleb128 0x2
 3501 0974 91       		.byte	0x91
 3502 0975 74       		.sleb128 -12
 3503 0976 00       		.byte	0
 3504 0977 15       		.uleb128 0x15
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 113


 3505 0978 48060000 		.4byte	.LASF97
 3506 097c 01       		.byte	0x1
 3507 097d BB0A     		.2byte	0xabb
 3508 097f 83000000 		.4byte	0x83
 3509 0983 00000000 		.4byte	.LFB61
 3510 0987 1C000000 		.4byte	.LFE61-.LFB61
 3511 098b 01       		.uleb128 0x1
 3512 098c 9C       		.byte	0x9c
 3513 098d A1090000 		.4byte	0x9a1
 3514 0991 14       		.uleb128 0x14
 3515 0992 F7040000 		.4byte	.LASF50
 3516 0996 01       		.byte	0x1
 3517 0997 BB0A     		.2byte	0xabb
 3518 0999 83000000 		.4byte	0x83
 3519 099d 02       		.uleb128 0x2
 3520 099e 91       		.byte	0x91
 3521 099f 74       		.sleb128 -12
 3522 09a0 00       		.byte	0
 3523 09a1 15       		.uleb128 0x15
 3524 09a2 13090000 		.4byte	.LASF98
 3525 09a6 01       		.byte	0x1
 3526 09a7 D50A     		.2byte	0xad5
 3527 09a9 6B000000 		.4byte	0x6b
 3528 09ad 00000000 		.4byte	.LFB62
 3529 09b1 1C000000 		.4byte	.LFE62-.LFB62
 3530 09b5 01       		.uleb128 0x1
 3531 09b6 9C       		.byte	0x9c
 3532 09b7 CB090000 		.4byte	0x9cb
 3533 09bb 14       		.uleb128 0x14
 3534 09bc F7040000 		.4byte	.LASF50
 3535 09c0 01       		.byte	0x1
 3536 09c1 D50A     		.2byte	0xad5
 3537 09c3 83000000 		.4byte	0x83
 3538 09c7 02       		.uleb128 0x2
 3539 09c8 91       		.byte	0x91
 3540 09c9 74       		.sleb128 -12
 3541 09ca 00       		.byte	0
 3542 09cb 15       		.uleb128 0x15
 3543 09cc 5A020000 		.4byte	.LASF99
 3544 09d0 01       		.byte	0x1
 3545 09d1 EF0A     		.2byte	0xaef
 3546 09d3 6B000000 		.4byte	0x6b
 3547 09d7 00000000 		.4byte	.LFB63
 3548 09db 1C000000 		.4byte	.LFE63-.LFB63
 3549 09df 01       		.uleb128 0x1
 3550 09e0 9C       		.byte	0x9c
 3551 09e1 F5090000 		.4byte	0x9f5
 3552 09e5 14       		.uleb128 0x14
 3553 09e6 77030000 		.4byte	.LASF52
 3554 09ea 01       		.byte	0x1
 3555 09eb EF0A     		.2byte	0xaef
 3556 09ed 83000000 		.4byte	0x83
 3557 09f1 02       		.uleb128 0x2
 3558 09f2 91       		.byte	0x91
 3559 09f3 74       		.sleb128 -12
 3560 09f4 00       		.byte	0
 3561 09f5 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 114


 3562 09f6 59090000 		.4byte	.LASF100
 3563 09fa 01       		.byte	0x1
 3564 09fb 090B     		.2byte	0xb09
 3565 09fd 00000000 		.4byte	.LFB64
 3566 0a01 14000000 		.4byte	.LFE64-.LFB64
 3567 0a05 01       		.uleb128 0x1
 3568 0a06 9C       		.byte	0x9c
 3569 0a07 19       		.uleb128 0x19
 3570 0a08 D4040000 		.4byte	.LASF101
 3571 0a0c 01       		.byte	0x1
 3572 0a0d 220B     		.2byte	0xb22
 3573 0a0f 00000000 		.4byte	.LFB65
 3574 0a13 14000000 		.4byte	.LFE65-.LFB65
 3575 0a17 01       		.uleb128 0x1
 3576 0a18 9C       		.byte	0x9c
 3577 0a19 1A       		.uleb128 0x1a
 3578 0a1a 6B000000 		.4byte	0x6b
 3579 0a1e 290A0000 		.4byte	0xa29
 3580 0a22 1B       		.uleb128 0x1b
 3581 0a23 A4000000 		.4byte	0xa4
 3582 0a27 0E       		.byte	0xe
 3583 0a28 00       		.byte	0
 3584 0a29 0F       		.uleb128 0xf
 3585 0a2a D9020000 		.4byte	.LASF102
 3586 0a2e 01       		.byte	0x1
 3587 0a2f 55       		.byte	0x55
 3588 0a30 190A0000 		.4byte	0xa19
 3589 0a34 05       		.uleb128 0x5
 3590 0a35 03       		.byte	0x3
 3591 0a36 40000000 		.4byte	CapSense_CSD_debounceCounter
 3592 0a3a 1A       		.uleb128 0x1a
 3593 0a3b 77000000 		.4byte	0x77
 3594 0a3f 4A0A0000 		.4byte	0xa4a
 3595 0a43 1B       		.uleb128 0x1b
 3596 0a44 A4000000 		.4byte	0xa4
 3597 0a48 0D       		.byte	0xd
 3598 0a49 00       		.byte	0
 3599 0a4a 1C       		.uleb128 0x1c
 3600 0a4b E5010000 		.4byte	.LASF103
 3601 0a4f 01       		.byte	0x1
 3602 0a50 2C       		.byte	0x2c
 3603 0a51 3A0A0000 		.4byte	0xa3a
 3604 0a55 1A       		.uleb128 0x1a
 3605 0a56 6B000000 		.4byte	0x6b
 3606 0a5a 650A0000 		.4byte	0xa65
 3607 0a5e 1B       		.uleb128 0x1b
 3608 0a5f A4000000 		.4byte	0xa4
 3609 0a63 01       		.byte	0x1
 3610 0a64 00       		.byte	0
 3611 0a65 1C       		.uleb128 0x1c
 3612 0a66 F0070000 		.4byte	.LASF104
 3613 0a6a 01       		.byte	0x1
 3614 0a6b 2D       		.byte	0x2d
 3615 0a6c 550A0000 		.4byte	0xa55
 3616 0a70 1A       		.uleb128 0x1a
 3617 0a71 DB010000 		.4byte	0x1db
 3618 0a75 800A0000 		.4byte	0xa80
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 115


 3619 0a79 1B       		.uleb128 0x1b
 3620 0a7a A4000000 		.4byte	0xa4
 3621 0a7e 0D       		.byte	0xd
 3622 0a7f 00       		.byte	0
 3623 0a80 1C       		.uleb128 0x1c
 3624 0a81 CB090000 		.4byte	.LASF105
 3625 0a85 01       		.byte	0x1
 3626 0a86 2E       		.byte	0x2e
 3627 0a87 8B0A0000 		.4byte	0xa8b
 3628 0a8b 08       		.uleb128 0x8
 3629 0a8c 700A0000 		.4byte	0xa70
 3630 0a90 1D       		.uleb128 0x1d
 3631 0a91 13040000 		.4byte	.LASF106
 3632 0a95 01       		.byte	0x1
 3633 0a96 34       		.byte	0x34
 3634 0a97 3A0A0000 		.4byte	0xa3a
 3635 0a9b 05       		.uleb128 0x5
 3636 0a9c 03       		.byte	0x3
 3637 0a9d 00000000 		.4byte	CapSense_CSD_sensorBaseline
 3638 0aa1 1A       		.uleb128 0x1a
 3639 0aa2 6B000000 		.4byte	0x6b
 3640 0aa6 B10A0000 		.4byte	0xab1
 3641 0aaa 1B       		.uleb128 0x1b
 3642 0aab A4000000 		.4byte	0xa4
 3643 0aaf 0D       		.byte	0xd
 3644 0ab0 00       		.byte	0
 3645 0ab1 1D       		.uleb128 0x1d
 3646 0ab2 E00A0000 		.4byte	.LASF107
 3647 0ab6 01       		.byte	0x1
 3648 0ab7 35       		.byte	0x35
 3649 0ab8 A10A0000 		.4byte	0xaa1
 3650 0abc 05       		.uleb128 0x5
 3651 0abd 03       		.byte	0x3
 3652 0abe 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 3653 0ac2 1D       		.uleb128 0x1d
 3654 0ac3 62070000 		.4byte	.LASF108
 3655 0ac7 01       		.byte	0x1
 3656 0ac8 36       		.byte	0x36
 3657 0ac9 A10A0000 		.4byte	0xaa1
 3658 0acd 05       		.uleb128 0x5
 3659 0ace 03       		.byte	0x3
 3660 0acf 00000000 		.4byte	CapSense_CSD_sensorSignal
 3661 0ad3 1D       		.uleb128 0x1d
 3662 0ad4 89060000 		.4byte	.LASF109
 3663 0ad8 01       		.byte	0x1
 3664 0ad9 37       		.byte	0x37
 3665 0ada 550A0000 		.4byte	0xa55
 3666 0ade 05       		.uleb128 0x5
 3667 0adf 03       		.byte	0x3
 3668 0ae0 00000000 		.4byte	CapSense_CSD_sensorOnMask
 3669 0ae4 1D       		.uleb128 0x1d
 3670 0ae5 3F030000 		.4byte	.LASF110
 3671 0ae9 01       		.byte	0x1
 3672 0aea 39       		.byte	0x39
 3673 0aeb A10A0000 		.4byte	0xaa1
 3674 0aef 05       		.uleb128 0x5
 3675 0af0 03       		.byte	0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 116


 3676 0af1 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 3677 0af5 1D       		.uleb128 0x1d
 3678 0af6 9D000000 		.4byte	.LASF111
 3679 0afa 01       		.byte	0x1
 3680 0afb 3A       		.byte	0x3a
 3681 0afc A10A0000 		.4byte	0xaa1
 3682 0b00 05       		.uleb128 0x5
 3683 0b01 03       		.byte	0x3
 3684 0b02 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 3685 0b06 1D       		.uleb128 0x1d
 3686 0b07 91020000 		.4byte	.LASF112
 3687 0b0b 01       		.byte	0x1
 3688 0b0c 49       		.byte	0x49
 3689 0b0d A10A0000 		.4byte	0xaa1
 3690 0b11 05       		.uleb128 0x5
 3691 0b12 03       		.byte	0x3
 3692 0b13 00000000 		.4byte	CapSense_CSD_fingerThreshold
 3693 0b17 1D       		.uleb128 0x1d
 3694 0b18 BF050000 		.4byte	.LASF113
 3695 0b1c 01       		.byte	0x1
 3696 0b1d 4B       		.byte	0x4b
 3697 0b1e A10A0000 		.4byte	0xaa1
 3698 0b22 05       		.uleb128 0x5
 3699 0b23 03       		.byte	0x3
 3700 0b24 00000000 		.4byte	CapSense_CSD_noiseThreshold
 3701 0b28 1D       		.uleb128 0x1d
 3702 0b29 B7060000 		.4byte	.LASF114
 3703 0b2d 01       		.byte	0x1
 3704 0b2e 4D       		.byte	0x4d
 3705 0b2f A10A0000 		.4byte	0xaa1
 3706 0b33 05       		.uleb128 0x5
 3707 0b34 03       		.byte	0x3
 3708 0b35 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 3709 0b39 1D       		.uleb128 0x1d
 3710 0b3a 3C080000 		.4byte	.LASF115
 3711 0b3e 01       		.byte	0x1
 3712 0b3f 4F       		.byte	0x4f
 3713 0b40 A10A0000 		.4byte	0xaa1
 3714 0b44 05       		.uleb128 0x5
 3715 0b45 03       		.byte	0x3
 3716 0b46 00000000 		.4byte	CapSense_CSD_hysteresis
 3717 0b4a 1D       		.uleb128 0x1d
 3718 0b4b 34090000 		.4byte	.LASF116
 3719 0b4f 01       		.byte	0x1
 3720 0b50 51       		.byte	0x51
 3721 0b51 A10A0000 		.4byte	0xaa1
 3722 0b55 05       		.uleb128 0x5
 3723 0b56 03       		.byte	0x3
 3724 0b57 00000000 		.4byte	CapSense_CSD_debounce
 3725 0b5b 1D       		.uleb128 0x1d
 3726 0b5c 9D070000 		.4byte	.LASF117
 3727 0b60 01       		.byte	0x1
 3728 0b61 59       		.byte	0x59
 3729 0b62 6C0B0000 		.4byte	0xb6c
 3730 0b66 05       		.uleb128 0x5
 3731 0b67 03       		.byte	0x3
 3732 0b68 00000000 		.4byte	CapSense_CSD_rawDataIndex
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 117


 3733 0b6c 08       		.uleb128 0x8
 3734 0b6d 700A0000 		.4byte	0xa70
 3735 0b71 1D       		.uleb128 0x1d
 3736 0b72 0E050000 		.4byte	.LASF118
 3737 0b76 01       		.byte	0x1
 3738 0b77 6A       		.byte	0x6a
 3739 0b78 820B0000 		.4byte	0xb82
 3740 0b7c 05       		.uleb128 0x5
 3741 0b7d 03       		.byte	0x3
 3742 0b7e 00000000 		.4byte	CapSense_CSD_numberOfSensors
 3743 0b82 08       		.uleb128 0x8
 3744 0b83 700A0000 		.4byte	0xa70
 3745 0b87 1D       		.uleb128 0x1d
 3746 0b88 46070000 		.4byte	.LASF119
 3747 0b8c 01       		.byte	0x1
 3748 0b8d 27       		.byte	0x27
 3749 0b8e 3A0A0000 		.4byte	0xa3a
 3750 0b92 05       		.uleb128 0x5
 3751 0b93 03       		.byte	0x3
 3752 0b94 00000000 		.4byte	CapSense_CSD_rawFilterData1
 3753 0b98 1C       		.uleb128 0x1c
 3754 0b99 CE070000 		.4byte	.LASF120
 3755 0b9d 01       		.byte	0x1
 3756 0b9e 41       		.byte	0x41
 3757 0b9f AE020000 		.4byte	0x2ae
 3758 0ba3 1D       		.uleb128 0x1d
 3759 0ba4 73020000 		.4byte	.LASF121
 3760 0ba8 01       		.byte	0x1
 3761 0ba9 45       		.byte	0x45
 3762 0baa 6B000000 		.4byte	0x6b
 3763 0bae 05       		.uleb128 0x5
 3764 0baf 03       		.byte	0x3
 3765 0bb0 00000000 		.4byte	CapSense_CSD_enableRawFilters
 3766 0bb4 00       		.byte	0
 3767              		.section	.debug_abbrev,"",%progbits
 3768              	.Ldebug_abbrev0:
 3769 0000 01       		.uleb128 0x1
 3770 0001 11       		.uleb128 0x11
 3771 0002 01       		.byte	0x1
 3772 0003 25       		.uleb128 0x25
 3773 0004 0E       		.uleb128 0xe
 3774 0005 13       		.uleb128 0x13
 3775 0006 0B       		.uleb128 0xb
 3776 0007 03       		.uleb128 0x3
 3777 0008 0E       		.uleb128 0xe
 3778 0009 1B       		.uleb128 0x1b
 3779 000a 0E       		.uleb128 0xe
 3780 000b 55       		.uleb128 0x55
 3781 000c 17       		.uleb128 0x17
 3782 000d 11       		.uleb128 0x11
 3783 000e 01       		.uleb128 0x1
 3784 000f 10       		.uleb128 0x10
 3785 0010 17       		.uleb128 0x17
 3786 0011 00       		.byte	0
 3787 0012 00       		.byte	0
 3788 0013 02       		.uleb128 0x2
 3789 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 118


 3790 0015 00       		.byte	0
 3791 0016 0B       		.uleb128 0xb
 3792 0017 0B       		.uleb128 0xb
 3793 0018 3E       		.uleb128 0x3e
 3794 0019 0B       		.uleb128 0xb
 3795 001a 03       		.uleb128 0x3
 3796 001b 0E       		.uleb128 0xe
 3797 001c 00       		.byte	0
 3798 001d 00       		.byte	0
 3799 001e 03       		.uleb128 0x3
 3800 001f 24       		.uleb128 0x24
 3801 0020 00       		.byte	0
 3802 0021 0B       		.uleb128 0xb
 3803 0022 0B       		.uleb128 0xb
 3804 0023 3E       		.uleb128 0x3e
 3805 0024 0B       		.uleb128 0xb
 3806 0025 03       		.uleb128 0x3
 3807 0026 08       		.uleb128 0x8
 3808 0027 00       		.byte	0
 3809 0028 00       		.byte	0
 3810 0029 04       		.uleb128 0x4
 3811 002a 16       		.uleb128 0x16
 3812 002b 00       		.byte	0
 3813 002c 03       		.uleb128 0x3
 3814 002d 0E       		.uleb128 0xe
 3815 002e 3A       		.uleb128 0x3a
 3816 002f 0B       		.uleb128 0xb
 3817 0030 3B       		.uleb128 0x3b
 3818 0031 05       		.uleb128 0x5
 3819 0032 49       		.uleb128 0x49
 3820 0033 13       		.uleb128 0x13
 3821 0034 00       		.byte	0
 3822 0035 00       		.byte	0
 3823 0036 05       		.uleb128 0x5
 3824 0037 13       		.uleb128 0x13
 3825 0038 01       		.byte	0x1
 3826 0039 0B       		.uleb128 0xb
 3827 003a 0B       		.uleb128 0xb
 3828 003b 3A       		.uleb128 0x3a
 3829 003c 0B       		.uleb128 0xb
 3830 003d 3B       		.uleb128 0x3b
 3831 003e 0B       		.uleb128 0xb
 3832 003f 01       		.uleb128 0x1
 3833 0040 13       		.uleb128 0x13
 3834 0041 00       		.byte	0
 3835 0042 00       		.byte	0
 3836 0043 06       		.uleb128 0x6
 3837 0044 0D       		.uleb128 0xd
 3838 0045 00       		.byte	0
 3839 0046 03       		.uleb128 0x3
 3840 0047 0E       		.uleb128 0xe
 3841 0048 3A       		.uleb128 0x3a
 3842 0049 0B       		.uleb128 0xb
 3843 004a 3B       		.uleb128 0x3b
 3844 004b 0B       		.uleb128 0xb
 3845 004c 49       		.uleb128 0x49
 3846 004d 13       		.uleb128 0x13
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 119


 3847 004e 38       		.uleb128 0x38
 3848 004f 0B       		.uleb128 0xb
 3849 0050 00       		.byte	0
 3850 0051 00       		.byte	0
 3851 0052 07       		.uleb128 0x7
 3852 0053 0F       		.uleb128 0xf
 3853 0054 00       		.byte	0
 3854 0055 0B       		.uleb128 0xb
 3855 0056 0B       		.uleb128 0xb
 3856 0057 49       		.uleb128 0x49
 3857 0058 13       		.uleb128 0x13
 3858 0059 00       		.byte	0
 3859 005a 00       		.byte	0
 3860 005b 08       		.uleb128 0x8
 3861 005c 26       		.uleb128 0x26
 3862 005d 00       		.byte	0
 3863 005e 49       		.uleb128 0x49
 3864 005f 13       		.uleb128 0x13
 3865 0060 00       		.byte	0
 3866 0061 00       		.byte	0
 3867 0062 09       		.uleb128 0x9
 3868 0063 15       		.uleb128 0x15
 3869 0064 01       		.byte	0x1
 3870 0065 27       		.uleb128 0x27
 3871 0066 19       		.uleb128 0x19
 3872 0067 49       		.uleb128 0x49
 3873 0068 13       		.uleb128 0x13
 3874 0069 01       		.uleb128 0x1
 3875 006a 13       		.uleb128 0x13
 3876 006b 00       		.byte	0
 3877 006c 00       		.byte	0
 3878 006d 0A       		.uleb128 0xa
 3879 006e 05       		.uleb128 0x5
 3880 006f 00       		.byte	0
 3881 0070 49       		.uleb128 0x49
 3882 0071 13       		.uleb128 0x13
 3883 0072 00       		.byte	0
 3884 0073 00       		.byte	0
 3885 0074 0B       		.uleb128 0xb
 3886 0075 15       		.uleb128 0x15
 3887 0076 01       		.byte	0x1
 3888 0077 27       		.uleb128 0x27
 3889 0078 19       		.uleb128 0x19
 3890 0079 01       		.uleb128 0x1
 3891 007a 13       		.uleb128 0x13
 3892 007b 00       		.byte	0
 3893 007c 00       		.byte	0
 3894 007d 0C       		.uleb128 0xc
 3895 007e 16       		.uleb128 0x16
 3896 007f 00       		.byte	0
 3897 0080 03       		.uleb128 0x3
 3898 0081 0E       		.uleb128 0xe
 3899 0082 3A       		.uleb128 0x3a
 3900 0083 0B       		.uleb128 0xb
 3901 0084 3B       		.uleb128 0x3b
 3902 0085 0B       		.uleb128 0xb
 3903 0086 49       		.uleb128 0x49
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 120


 3904 0087 13       		.uleb128 0x13
 3905 0088 00       		.byte	0
 3906 0089 00       		.byte	0
 3907 008a 0D       		.uleb128 0xd
 3908 008b 2E       		.uleb128 0x2e
 3909 008c 01       		.byte	0x1
 3910 008d 3F       		.uleb128 0x3f
 3911 008e 19       		.uleb128 0x19
 3912 008f 03       		.uleb128 0x3
 3913 0090 0E       		.uleb128 0xe
 3914 0091 3A       		.uleb128 0x3a
 3915 0092 0B       		.uleb128 0xb
 3916 0093 3B       		.uleb128 0x3b
 3917 0094 0B       		.uleb128 0xb
 3918 0095 27       		.uleb128 0x27
 3919 0096 19       		.uleb128 0x19
 3920 0097 11       		.uleb128 0x11
 3921 0098 01       		.uleb128 0x1
 3922 0099 12       		.uleb128 0x12
 3923 009a 06       		.uleb128 0x6
 3924 009b 40       		.uleb128 0x40
 3925 009c 18       		.uleb128 0x18
 3926 009d 9742     		.uleb128 0x2117
 3927 009f 19       		.uleb128 0x19
 3928 00a0 01       		.uleb128 0x1
 3929 00a1 13       		.uleb128 0x13
 3930 00a2 00       		.byte	0
 3931 00a3 00       		.byte	0
 3932 00a4 0E       		.uleb128 0xe
 3933 00a5 05       		.uleb128 0x5
 3934 00a6 00       		.byte	0
 3935 00a7 03       		.uleb128 0x3
 3936 00a8 0E       		.uleb128 0xe
 3937 00a9 3A       		.uleb128 0x3a
 3938 00aa 0B       		.uleb128 0xb
 3939 00ab 3B       		.uleb128 0x3b
 3940 00ac 0B       		.uleb128 0xb
 3941 00ad 49       		.uleb128 0x49
 3942 00ae 13       		.uleb128 0x13
 3943 00af 02       		.uleb128 0x2
 3944 00b0 18       		.uleb128 0x18
 3945 00b1 00       		.byte	0
 3946 00b2 00       		.byte	0
 3947 00b3 0F       		.uleb128 0xf
 3948 00b4 34       		.uleb128 0x34
 3949 00b5 00       		.byte	0
 3950 00b6 03       		.uleb128 0x3
 3951 00b7 0E       		.uleb128 0xe
 3952 00b8 3A       		.uleb128 0x3a
 3953 00b9 0B       		.uleb128 0xb
 3954 00ba 3B       		.uleb128 0x3b
 3955 00bb 0B       		.uleb128 0xb
 3956 00bc 49       		.uleb128 0x49
 3957 00bd 13       		.uleb128 0x13
 3958 00be 02       		.uleb128 0x2
 3959 00bf 18       		.uleb128 0x18
 3960 00c0 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 121


 3961 00c1 00       		.byte	0
 3962 00c2 10       		.uleb128 0x10
 3963 00c3 2E       		.uleb128 0x2e
 3964 00c4 01       		.byte	0x1
 3965 00c5 3F       		.uleb128 0x3f
 3966 00c6 19       		.uleb128 0x19
 3967 00c7 03       		.uleb128 0x3
 3968 00c8 0E       		.uleb128 0xe
 3969 00c9 3A       		.uleb128 0x3a
 3970 00ca 0B       		.uleb128 0xb
 3971 00cb 3B       		.uleb128 0x3b
 3972 00cc 0B       		.uleb128 0xb
 3973 00cd 27       		.uleb128 0x27
 3974 00ce 19       		.uleb128 0x19
 3975 00cf 11       		.uleb128 0x11
 3976 00d0 01       		.uleb128 0x1
 3977 00d1 12       		.uleb128 0x12
 3978 00d2 06       		.uleb128 0x6
 3979 00d3 40       		.uleb128 0x40
 3980 00d4 18       		.uleb128 0x18
 3981 00d5 9642     		.uleb128 0x2116
 3982 00d7 19       		.uleb128 0x19
 3983 00d8 01       		.uleb128 0x1
 3984 00d9 13       		.uleb128 0x13
 3985 00da 00       		.byte	0
 3986 00db 00       		.byte	0
 3987 00dc 11       		.uleb128 0x11
 3988 00dd 2E       		.uleb128 0x2e
 3989 00de 01       		.byte	0x1
 3990 00df 3F       		.uleb128 0x3f
 3991 00e0 19       		.uleb128 0x19
 3992 00e1 03       		.uleb128 0x3
 3993 00e2 0E       		.uleb128 0xe
 3994 00e3 3A       		.uleb128 0x3a
 3995 00e4 0B       		.uleb128 0xb
 3996 00e5 3B       		.uleb128 0x3b
 3997 00e6 05       		.uleb128 0x5
 3998 00e7 27       		.uleb128 0x27
 3999 00e8 19       		.uleb128 0x19
 4000 00e9 11       		.uleb128 0x11
 4001 00ea 01       		.uleb128 0x1
 4002 00eb 12       		.uleb128 0x12
 4003 00ec 06       		.uleb128 0x6
 4004 00ed 40       		.uleb128 0x40
 4005 00ee 18       		.uleb128 0x18
 4006 00ef 9642     		.uleb128 0x2116
 4007 00f1 19       		.uleb128 0x19
 4008 00f2 01       		.uleb128 0x1
 4009 00f3 13       		.uleb128 0x13
 4010 00f4 00       		.byte	0
 4011 00f5 00       		.byte	0
 4012 00f6 12       		.uleb128 0x12
 4013 00f7 34       		.uleb128 0x34
 4014 00f8 00       		.byte	0
 4015 00f9 03       		.uleb128 0x3
 4016 00fa 08       		.uleb128 0x8
 4017 00fb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 122


 4018 00fc 0B       		.uleb128 0xb
 4019 00fd 3B       		.uleb128 0x3b
 4020 00fe 05       		.uleb128 0x5
 4021 00ff 49       		.uleb128 0x49
 4022 0100 13       		.uleb128 0x13
 4023 0101 02       		.uleb128 0x2
 4024 0102 18       		.uleb128 0x18
 4025 0103 00       		.byte	0
 4026 0104 00       		.byte	0
 4027 0105 13       		.uleb128 0x13
 4028 0106 34       		.uleb128 0x34
 4029 0107 00       		.byte	0
 4030 0108 03       		.uleb128 0x3
 4031 0109 0E       		.uleb128 0xe
 4032 010a 3A       		.uleb128 0x3a
 4033 010b 0B       		.uleb128 0xb
 4034 010c 3B       		.uleb128 0x3b
 4035 010d 05       		.uleb128 0x5
 4036 010e 49       		.uleb128 0x49
 4037 010f 13       		.uleb128 0x13
 4038 0110 02       		.uleb128 0x2
 4039 0111 18       		.uleb128 0x18
 4040 0112 00       		.byte	0
 4041 0113 00       		.byte	0
 4042 0114 14       		.uleb128 0x14
 4043 0115 05       		.uleb128 0x5
 4044 0116 00       		.byte	0
 4045 0117 03       		.uleb128 0x3
 4046 0118 0E       		.uleb128 0xe
 4047 0119 3A       		.uleb128 0x3a
 4048 011a 0B       		.uleb128 0xb
 4049 011b 3B       		.uleb128 0x3b
 4050 011c 05       		.uleb128 0x5
 4051 011d 49       		.uleb128 0x49
 4052 011e 13       		.uleb128 0x13
 4053 011f 02       		.uleb128 0x2
 4054 0120 18       		.uleb128 0x18
 4055 0121 00       		.byte	0
 4056 0122 00       		.byte	0
 4057 0123 15       		.uleb128 0x15
 4058 0124 2E       		.uleb128 0x2e
 4059 0125 01       		.byte	0x1
 4060 0126 3F       		.uleb128 0x3f
 4061 0127 19       		.uleb128 0x19
 4062 0128 03       		.uleb128 0x3
 4063 0129 0E       		.uleb128 0xe
 4064 012a 3A       		.uleb128 0x3a
 4065 012b 0B       		.uleb128 0xb
 4066 012c 3B       		.uleb128 0x3b
 4067 012d 05       		.uleb128 0x5
 4068 012e 27       		.uleb128 0x27
 4069 012f 19       		.uleb128 0x19
 4070 0130 49       		.uleb128 0x49
 4071 0131 13       		.uleb128 0x13
 4072 0132 11       		.uleb128 0x11
 4073 0133 01       		.uleb128 0x1
 4074 0134 12       		.uleb128 0x12
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 123


 4075 0135 06       		.uleb128 0x6
 4076 0136 40       		.uleb128 0x40
 4077 0137 18       		.uleb128 0x18
 4078 0138 9742     		.uleb128 0x2117
 4079 013a 19       		.uleb128 0x19
 4080 013b 01       		.uleb128 0x1
 4081 013c 13       		.uleb128 0x13
 4082 013d 00       		.byte	0
 4083 013e 00       		.byte	0
 4084 013f 16       		.uleb128 0x16
 4085 0140 2E       		.uleb128 0x2e
 4086 0141 01       		.byte	0x1
 4087 0142 3F       		.uleb128 0x3f
 4088 0143 19       		.uleb128 0x19
 4089 0144 03       		.uleb128 0x3
 4090 0145 0E       		.uleb128 0xe
 4091 0146 3A       		.uleb128 0x3a
 4092 0147 0B       		.uleb128 0xb
 4093 0148 3B       		.uleb128 0x3b
 4094 0149 05       		.uleb128 0x5
 4095 014a 27       		.uleb128 0x27
 4096 014b 19       		.uleb128 0x19
 4097 014c 11       		.uleb128 0x11
 4098 014d 01       		.uleb128 0x1
 4099 014e 12       		.uleb128 0x12
 4100 014f 06       		.uleb128 0x6
 4101 0150 40       		.uleb128 0x40
 4102 0151 18       		.uleb128 0x18
 4103 0152 9742     		.uleb128 0x2117
 4104 0154 19       		.uleb128 0x19
 4105 0155 01       		.uleb128 0x1
 4106 0156 13       		.uleb128 0x13
 4107 0157 00       		.byte	0
 4108 0158 00       		.byte	0
 4109 0159 17       		.uleb128 0x17
 4110 015a 2E       		.uleb128 0x2e
 4111 015b 01       		.byte	0x1
 4112 015c 3F       		.uleb128 0x3f
 4113 015d 19       		.uleb128 0x19
 4114 015e 03       		.uleb128 0x3
 4115 015f 0E       		.uleb128 0xe
 4116 0160 3A       		.uleb128 0x3a
 4117 0161 0B       		.uleb128 0xb
 4118 0162 3B       		.uleb128 0x3b
 4119 0163 05       		.uleb128 0x5
 4120 0164 27       		.uleb128 0x27
 4121 0165 19       		.uleb128 0x19
 4122 0166 49       		.uleb128 0x49
 4123 0167 13       		.uleb128 0x13
 4124 0168 11       		.uleb128 0x11
 4125 0169 01       		.uleb128 0x1
 4126 016a 12       		.uleb128 0x12
 4127 016b 06       		.uleb128 0x6
 4128 016c 40       		.uleb128 0x40
 4129 016d 18       		.uleb128 0x18
 4130 016e 9642     		.uleb128 0x2116
 4131 0170 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 124


 4132 0171 01       		.uleb128 0x1
 4133 0172 13       		.uleb128 0x13
 4134 0173 00       		.byte	0
 4135 0174 00       		.byte	0
 4136 0175 18       		.uleb128 0x18
 4137 0176 05       		.uleb128 0x5
 4138 0177 00       		.byte	0
 4139 0178 03       		.uleb128 0x3
 4140 0179 08       		.uleb128 0x8
 4141 017a 3A       		.uleb128 0x3a
 4142 017b 0B       		.uleb128 0xb
 4143 017c 3B       		.uleb128 0x3b
 4144 017d 05       		.uleb128 0x5
 4145 017e 49       		.uleb128 0x49
 4146 017f 13       		.uleb128 0x13
 4147 0180 02       		.uleb128 0x2
 4148 0181 18       		.uleb128 0x18
 4149 0182 00       		.byte	0
 4150 0183 00       		.byte	0
 4151 0184 19       		.uleb128 0x19
 4152 0185 2E       		.uleb128 0x2e
 4153 0186 00       		.byte	0
 4154 0187 3F       		.uleb128 0x3f
 4155 0188 19       		.uleb128 0x19
 4156 0189 03       		.uleb128 0x3
 4157 018a 0E       		.uleb128 0xe
 4158 018b 3A       		.uleb128 0x3a
 4159 018c 0B       		.uleb128 0xb
 4160 018d 3B       		.uleb128 0x3b
 4161 018e 05       		.uleb128 0x5
 4162 018f 27       		.uleb128 0x27
 4163 0190 19       		.uleb128 0x19
 4164 0191 11       		.uleb128 0x11
 4165 0192 01       		.uleb128 0x1
 4166 0193 12       		.uleb128 0x12
 4167 0194 06       		.uleb128 0x6
 4168 0195 40       		.uleb128 0x40
 4169 0196 18       		.uleb128 0x18
 4170 0197 9742     		.uleb128 0x2117
 4171 0199 19       		.uleb128 0x19
 4172 019a 00       		.byte	0
 4173 019b 00       		.byte	0
 4174 019c 1A       		.uleb128 0x1a
 4175 019d 01       		.uleb128 0x1
 4176 019e 01       		.byte	0x1
 4177 019f 49       		.uleb128 0x49
 4178 01a0 13       		.uleb128 0x13
 4179 01a1 01       		.uleb128 0x1
 4180 01a2 13       		.uleb128 0x13
 4181 01a3 00       		.byte	0
 4182 01a4 00       		.byte	0
 4183 01a5 1B       		.uleb128 0x1b
 4184 01a6 21       		.uleb128 0x21
 4185 01a7 00       		.byte	0
 4186 01a8 49       		.uleb128 0x49
 4187 01a9 13       		.uleb128 0x13
 4188 01aa 2F       		.uleb128 0x2f
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 125


 4189 01ab 0B       		.uleb128 0xb
 4190 01ac 00       		.byte	0
 4191 01ad 00       		.byte	0
 4192 01ae 1C       		.uleb128 0x1c
 4193 01af 34       		.uleb128 0x34
 4194 01b0 00       		.byte	0
 4195 01b1 03       		.uleb128 0x3
 4196 01b2 0E       		.uleb128 0xe
 4197 01b3 3A       		.uleb128 0x3a
 4198 01b4 0B       		.uleb128 0xb
 4199 01b5 3B       		.uleb128 0x3b
 4200 01b6 0B       		.uleb128 0xb
 4201 01b7 49       		.uleb128 0x49
 4202 01b8 13       		.uleb128 0x13
 4203 01b9 3F       		.uleb128 0x3f
 4204 01ba 19       		.uleb128 0x19
 4205 01bb 3C       		.uleb128 0x3c
 4206 01bc 19       		.uleb128 0x19
 4207 01bd 00       		.byte	0
 4208 01be 00       		.byte	0
 4209 01bf 1D       		.uleb128 0x1d
 4210 01c0 34       		.uleb128 0x34
 4211 01c1 00       		.byte	0
 4212 01c2 03       		.uleb128 0x3
 4213 01c3 0E       		.uleb128 0xe
 4214 01c4 3A       		.uleb128 0x3a
 4215 01c5 0B       		.uleb128 0xb
 4216 01c6 3B       		.uleb128 0x3b
 4217 01c7 0B       		.uleb128 0xb
 4218 01c8 49       		.uleb128 0x49
 4219 01c9 13       		.uleb128 0x13
 4220 01ca 3F       		.uleb128 0x3f
 4221 01cb 19       		.uleb128 0x19
 4222 01cc 02       		.uleb128 0x2
 4223 01cd 18       		.uleb128 0x18
 4224 01ce 00       		.byte	0
 4225 01cf 00       		.byte	0
 4226 01d0 00       		.byte	0
 4227              		.section	.debug_aranges,"",%progbits
 4228 0000 24010000 		.4byte	0x124
 4229 0004 0200     		.2byte	0x2
 4230 0006 00000000 		.4byte	.Ldebug_info0
 4231 000a 04       		.byte	0x4
 4232 000b 00       		.byte	0
 4233 000c 0000     		.2byte	0
 4234 000e 0000     		.2byte	0
 4235 0010 00000000 		.4byte	.LFB32
 4236 0014 88000000 		.4byte	.LFE32-.LFB32
 4237 0018 00000000 		.4byte	.LFB33
 4238 001c 2A000000 		.4byte	.LFE33-.LFB33
 4239 0020 00000000 		.4byte	.LFB34
 4240 0024 28000000 		.4byte	.LFE34-.LFB34
 4241 0028 00000000 		.4byte	.LFB35
 4242 002c 50000000 		.4byte	.LFE35-.LFB35
 4243 0030 00000000 		.4byte	.LFB36
 4244 0034 08020000 		.4byte	.LFE36-.LFB36
 4245 0038 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 126


 4246 003c 20000000 		.4byte	.LFE37-.LFB37
 4247 0040 00000000 		.4byte	.LFB38
 4248 0044 44000000 		.4byte	.LFE38-.LFB38
 4249 0048 00000000 		.4byte	.LFB39
 4250 004c 74000000 		.4byte	.LFE39-.LFB39
 4251 0050 00000000 		.4byte	.LFB40
 4252 0054 1C000000 		.4byte	.LFE40-.LFB40
 4253 0058 00000000 		.4byte	.LFB41
 4254 005c 28000000 		.4byte	.LFE41-.LFB41
 4255 0060 00000000 		.4byte	.LFB42
 4256 0064 1C000000 		.4byte	.LFE42-.LFB42
 4257 0068 00000000 		.4byte	.LFB43
 4258 006c 28000000 		.4byte	.LFE43-.LFB43
 4259 0070 00000000 		.4byte	.LFB44
 4260 0074 1C000000 		.4byte	.LFE44-.LFB44
 4261 0078 00000000 		.4byte	.LFB45
 4262 007c 1C000000 		.4byte	.LFE45-.LFB45
 4263 0080 00000000 		.4byte	.LFB46
 4264 0084 1C000000 		.4byte	.LFE46-.LFB46
 4265 0088 00000000 		.4byte	.LFB47
 4266 008c 1C000000 		.4byte	.LFE47-.LFB47
 4267 0090 00000000 		.4byte	.LFB48
 4268 0094 28000000 		.4byte	.LFE48-.LFB48
 4269 0098 00000000 		.4byte	.LFB49
 4270 009c 28000000 		.4byte	.LFE49-.LFB49
 4271 00a0 00000000 		.4byte	.LFB50
 4272 00a4 28000000 		.4byte	.LFE50-.LFB50
 4273 00a8 00000000 		.4byte	.LFB51
 4274 00ac 28000000 		.4byte	.LFE51-.LFB51
 4275 00b0 00000000 		.4byte	.LFB52
 4276 00b4 28000000 		.4byte	.LFE52-.LFB52
 4277 00b8 00000000 		.4byte	.LFB53
 4278 00bc 28000000 		.4byte	.LFE53-.LFB53
 4279 00c0 00000000 		.4byte	.LFB54
 4280 00c4 30010000 		.4byte	.LFE54-.LFB54
 4281 00c8 00000000 		.4byte	.LFB55
 4282 00cc 58000000 		.4byte	.LFE55-.LFB55
 4283 00d0 00000000 		.4byte	.LFB56
 4284 00d4 36000000 		.4byte	.LFE56-.LFB56
 4285 00d8 00000000 		.4byte	.LFB57
 4286 00dc 70000000 		.4byte	.LFE57-.LFB57
 4287 00e0 00000000 		.4byte	.LFB58
 4288 00e4 70000000 		.4byte	.LFE58-.LFB58
 4289 00e8 00000000 		.4byte	.LFB59
 4290 00ec 76000000 		.4byte	.LFE59-.LFB59
 4291 00f0 00000000 		.4byte	.LFB60
 4292 00f4 3C000000 		.4byte	.LFE60-.LFB60
 4293 00f8 00000000 		.4byte	.LFB61
 4294 00fc 1C000000 		.4byte	.LFE61-.LFB61
 4295 0100 00000000 		.4byte	.LFB62
 4296 0104 1C000000 		.4byte	.LFE62-.LFB62
 4297 0108 00000000 		.4byte	.LFB63
 4298 010c 1C000000 		.4byte	.LFE63-.LFB63
 4299 0110 00000000 		.4byte	.LFB64
 4300 0114 14000000 		.4byte	.LFE64-.LFB64
 4301 0118 00000000 		.4byte	.LFB65
 4302 011c 14000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 127


 4303 0120 00000000 		.4byte	0
 4304 0124 00000000 		.4byte	0
 4305              		.section	.debug_ranges,"",%progbits
 4306              	.Ldebug_ranges0:
 4307 0000 00000000 		.4byte	.LFB32
 4308 0004 88000000 		.4byte	.LFE32
 4309 0008 00000000 		.4byte	.LFB33
 4310 000c 2A000000 		.4byte	.LFE33
 4311 0010 00000000 		.4byte	.LFB34
 4312 0014 28000000 		.4byte	.LFE34
 4313 0018 00000000 		.4byte	.LFB35
 4314 001c 50000000 		.4byte	.LFE35
 4315 0020 00000000 		.4byte	.LFB36
 4316 0024 08020000 		.4byte	.LFE36
 4317 0028 00000000 		.4byte	.LFB37
 4318 002c 20000000 		.4byte	.LFE37
 4319 0030 00000000 		.4byte	.LFB38
 4320 0034 44000000 		.4byte	.LFE38
 4321 0038 00000000 		.4byte	.LFB39
 4322 003c 74000000 		.4byte	.LFE39
 4323 0040 00000000 		.4byte	.LFB40
 4324 0044 1C000000 		.4byte	.LFE40
 4325 0048 00000000 		.4byte	.LFB41
 4326 004c 28000000 		.4byte	.LFE41
 4327 0050 00000000 		.4byte	.LFB42
 4328 0054 1C000000 		.4byte	.LFE42
 4329 0058 00000000 		.4byte	.LFB43
 4330 005c 28000000 		.4byte	.LFE43
 4331 0060 00000000 		.4byte	.LFB44
 4332 0064 1C000000 		.4byte	.LFE44
 4333 0068 00000000 		.4byte	.LFB45
 4334 006c 1C000000 		.4byte	.LFE45
 4335 0070 00000000 		.4byte	.LFB46
 4336 0074 1C000000 		.4byte	.LFE46
 4337 0078 00000000 		.4byte	.LFB47
 4338 007c 1C000000 		.4byte	.LFE47
 4339 0080 00000000 		.4byte	.LFB48
 4340 0084 28000000 		.4byte	.LFE48
 4341 0088 00000000 		.4byte	.LFB49
 4342 008c 28000000 		.4byte	.LFE49
 4343 0090 00000000 		.4byte	.LFB50
 4344 0094 28000000 		.4byte	.LFE50
 4345 0098 00000000 		.4byte	.LFB51
 4346 009c 28000000 		.4byte	.LFE51
 4347 00a0 00000000 		.4byte	.LFB52
 4348 00a4 28000000 		.4byte	.LFE52
 4349 00a8 00000000 		.4byte	.LFB53
 4350 00ac 28000000 		.4byte	.LFE53
 4351 00b0 00000000 		.4byte	.LFB54
 4352 00b4 30010000 		.4byte	.LFE54
 4353 00b8 00000000 		.4byte	.LFB55
 4354 00bc 58000000 		.4byte	.LFE55
 4355 00c0 00000000 		.4byte	.LFB56
 4356 00c4 36000000 		.4byte	.LFE56
 4357 00c8 00000000 		.4byte	.LFB57
 4358 00cc 70000000 		.4byte	.LFE57
 4359 00d0 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 128


 4360 00d4 70000000 		.4byte	.LFE58
 4361 00d8 00000000 		.4byte	.LFB59
 4362 00dc 76000000 		.4byte	.LFE59
 4363 00e0 00000000 		.4byte	.LFB60
 4364 00e4 3C000000 		.4byte	.LFE60
 4365 00e8 00000000 		.4byte	.LFB61
 4366 00ec 1C000000 		.4byte	.LFE61
 4367 00f0 00000000 		.4byte	.LFB62
 4368 00f4 1C000000 		.4byte	.LFE62
 4369 00f8 00000000 		.4byte	.LFB63
 4370 00fc 1C000000 		.4byte	.LFE63
 4371 0100 00000000 		.4byte	.LFB64
 4372 0104 14000000 		.4byte	.LFE64
 4373 0108 00000000 		.4byte	.LFB65
 4374 010c 14000000 		.4byte	.LFE65
 4375 0110 00000000 		.4byte	0
 4376 0114 00000000 		.4byte	0
 4377              		.section	.debug_line,"",%progbits
 4378              	.Ldebug_line0:
 4379 0000 DA030000 		.section	.debug_str,"MS",%progbits,1
 4379      02006400 
 4379      00000201 
 4379      FB0E0D00 
 4379      01010101 
 4380              	.LASF31:
 4381 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 4381      53706565 
 4381      6454626C 
 4381      00
 4382              	.LASF34:
 4383 000d 6E756D62 		.ascii	"numberOfSensors\000"
 4383      65724F66 
 4383      53656E73 
 4383      6F727300 
 4384              	.LASF124:
 4385 001d 433A5C55 		.ascii	"C:\\Users\\SHOZO\\Documents\\PSoC Creator\\CHIGASAK"
 4385      73657273 
 4385      5C53484F 
 4385      5A4F5C44 
 4385      6F63756D 
 4386 004b 495F5753 		.ascii	"I_WS_Kit\\CHIGASAKI_Utsushiomi_2020_kit.cydsn\000"
 4386      5F4B6974 
 4386      5C434849 
 4386      47415341 
 4386      4B495F55 
 4387              	.LASF38:
 4388 0078 70747247 		.ascii	"ptrGetBitValue\000"
 4388      65744269 
 4388      7456616C 
 4388      756500
 4389              	.LASF48:
 4390 0087 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 4390      656E7365 
 4390      5F435344 
 4390      5F426173 
 4390      65496E69 
 4391              	.LASF111:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 129


 4392 009d 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 4392      656E7365 
 4392      5F435344 
 4392      5F6C6F77 
 4392      42617365 
 4393              	.LASF54:
 4394 00bb 69735365 		.ascii	"isSensorEnabled\000"
 4394      6E736F72 
 4394      456E6162 
 4394      6C656400 
 4395              	.LASF90:
 4396 00cb 6E756D4F 		.ascii	"numOfSensors\000"
 4396      6653656E 
 4396      736F7273 
 4396      00
 4397              	.LASF8:
 4398 00d8 756E7369 		.ascii	"unsigned int\000"
 4398      676E6564 
 4398      20696E74 
 4398      00
 4399              	.LASF43:
 4400 00e5 746F7461 		.ascii	"totalSensorsNum\000"
 4400      6C53656E 
 4400      736F7273 
 4400      4E756D00 
 4401              	.LASF53:
 4402 00f5 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 4402      656E7365 
 4402      5F435344 
 4402      5F496E69 
 4402      7469616C 
 4403              	.LASF67:
 4404 011d 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 4404      656E7365 
 4404      5F435344 
 4404      5F536574 
 4404      42617365 
 4405              	.LASF122:
 4406 013a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4406      43313120 
 4406      352E342E 
 4406      31203230 
 4406      31363036 
 4407 016d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4407      20726576 
 4407      6973696F 
 4407      6E203233 
 4407      37373135 
 4408 01a0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4408      66756E63 
 4408      74696F6E 
 4408      2D736563 
 4408      74696F6E 
 4409              	.LASF28:
 4410 01c8 73616D70 		.ascii	"sampleMaxTbl\000"
 4410      6C654D61 
 4410      7854626C 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 130


 4410      00
 4411              	.LASF26:
 4412 01d5 7369676E 		.ascii	"signRegisterTbl\000"
 4412      52656769 
 4412      73746572 
 4412      54626C00 
 4413              	.LASF103:
 4414 01e5 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4414      656E7365 
 4414      5F435344 
 4414      5F73656E 
 4414      736F7252 
 4415              	.LASF33:
 4416 01fc 72617744 		.ascii	"rawDataIndex\000"
 4416      61746149 
 4416      6E646578 
 4416      00
 4417              	.LASF42:
 4418 0209 746F7461 		.ascii	"totalWidgetsNum\000"
 4418      6C576964 
 4418      67657473 
 4418      4E756D00 
 4419              	.LASF88:
 4420 0219 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 4420      656E7365 
 4420      5F435344 
 4420      5F436865 
 4420      636B4973 
 4421              	.LASF77:
 4422 023a 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 4422      656E7365 
 4422      5F435344 
 4422      5F536574 
 4422      46696E67 
 4423              	.LASF99:
 4424 025a 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 4424      656E7365 
 4424      5F435344 
 4424      5F476574 
 4424      4465626F 
 4425              	.LASF121:
 4426 0273 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 4426      656E7365 
 4426      5F435344 
 4426      5F656E61 
 4426      626C6552 
 4427              	.LASF112:
 4428 0291 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 4428      656E7365 
 4428      5F435344 
 4428      5F66696E 
 4428      67657254 
 4429              	.LASF123:
 4430 02ae 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 4430      72617465 
 4430      645F536F 
 4430      75726365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 131


 4430      5C50536F 
 4431              	.LASF102:
 4432 02d9 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 4432      656E7365 
 4432      5F435344 
 4432      5F646562 
 4432      6F756E63 
 4433              	.LASF74:
 4434 02f6 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 4434      656E7365 
 4434      5F435344 
 4434      5F476574 
 4434      4E6F6973 
 4435              	.LASF12:
 4436 0315 666C6F61 		.ascii	"float\000"
 4436      7400
 4437              	.LASF23:
 4438 031b 7265736F 		.ascii	"resolutionsTbl\000"
 4438      6C757469 
 4438      6F6E7354 
 4438      626C00
 4439              	.LASF25:
 4440 032a 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4440      696E6744 
 4440      69666665 
 4440      72656E63 
 4440      6554626C 
 4441              	.LASF110:
 4442 033f 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 4442      656E7365 
 4442      5F435344 
 4442      5F6C6F77 
 4442      42617365 
 4443              	.LASF7:
 4444 0360 6C6F6E67 		.ascii	"long long unsigned int\000"
 4444      206C6F6E 
 4444      6720756E 
 4444      7369676E 
 4444      65642069 
 4445              	.LASF52:
 4446 0377 77696467 		.ascii	"widget\000"
 4446      657400
 4447              	.LASF78:
 4448 037e 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 4448      656E7365 
 4448      5F435344 
 4448      5F536574 
 4448      4E6F6973 
 4449              	.LASF63:
 4450 039d 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 4450      656E7365 
 4450      5F435344 
 4450      5F557064 
 4450      61746557 
 4451              	.LASF72:
 4452 03bf 76616C75 		.ascii	"value\000"
 4452      6500
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 132


 4453              	.LASF80:
 4454 03c5 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 4454      656E7365 
 4454      5F435344 
 4454      5F536574 
 4454      4E656761 
 4455              	.LASF55:
 4456 03ec 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 4456      656E7365 
 4456      5F435344 
 4456      5F557064 
 4456      61746542 
 4457              	.LASF106:
 4458 0413 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 4458      656E7365 
 4458      5F435344 
 4458      5F73656E 
 4458      736F7242 
 4459              	.LASF57:
 4460 042f 7369676E 		.ascii	"sign\000"
 4460      00
 4461              	.LASF24:
 4462 0434 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4462      65456E76 
 4462      656C6F70 
 4462      6554626C 
 4462      00
 4463              	.LASF56:
 4464 0445 63616C63 		.ascii	"calc\000"
 4464      00
 4465              	.LASF37:
 4466 044a 70747252 		.ascii	"ptrReadSensorRaw\000"
 4466      65616453 
 4466      656E736F 
 4466      72526177 
 4466      00
 4467              	.LASF47:
 4468 045b 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_60\000"
 4468      656E7365 
 4468      5F435344 
 4468      5F434F4E 
 4468      4649475F 
 4469              	.LASF87:
 4470 047d 68797374 		.ascii	"hysteresis\000"
 4470      65726573 
 4470      697300
 4471              	.LASF81:
 4472 0488 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 4472      656E7365 
 4472      5F435344 
 4472      5F536574 
 4472      4465626F 
 4473              	.LASF59:
 4474 04a1 66696C74 		.ascii	"filteredRawData\000"
 4474      65726564 
 4474      52617744 
 4474      61746100 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 133


 4475              	.LASF64:
 4476 04b1 73656E73 		.ascii	"sensorsPerWidget\000"
 4476      6F727350 
 4476      65725769 
 4476      64676574 
 4476      00
 4477              	.LASF41:
 4478 04c2 746F7461 		.ascii	"totalScanslotsNum\000"
 4478      6C536361 
 4478      6E736C6F 
 4478      74734E75 
 4478      6D00
 4479              	.LASF101:
 4480 04d4 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 4480      656E7365 
 4480      5F435344 
 4480      5F446973 
 4480      61626C65 
 4481              	.LASF50:
 4482 04f7 73656E73 		.ascii	"sensor\000"
 4482      6F7200
 4483              	.LASF44:
 4484 04fe 73656E73 		.ascii	"sensetivitySeed\000"
 4484      65746976 
 4484      69747953 
 4484      65656400 
 4485              	.LASF118:
 4486 050e 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4486      656E7365 
 4486      5F435344 
 4486      5F6E756D 
 4486      6265724F 
 4487              	.LASF14:
 4488 052b 63686172 		.ascii	"char\000"
 4488      00
 4489              	.LASF94:
 4490 0530 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 4490      656E7365 
 4490      5F435344 
 4490      5F446973 
 4490      61626C65 
 4491              	.LASF32:
 4492 054b 70726573 		.ascii	"prescalerTable\000"
 4492      63616C65 
 4492      72546162 
 4492      6C6500
 4493              	.LASF10:
 4494 055a 75696E74 		.ascii	"uint16\000"
 4494      313600
 4495              	.LASF68:
 4496 0561 64617461 		.ascii	"data\000"
 4496      00
 4497              	.LASF17:
 4498 0566 69646163 		.ascii	"idac1LevelsTbl\000"
 4498      314C6576 
 4498      656C7354 
 4498      626C00
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 134


 4499              	.LASF76:
 4500 0575 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 4500      656E7365 
 4500      5F435344 
 4500      5F476574 
 4500      4E656761 
 4501              	.LASF89:
 4502 059c 72617749 		.ascii	"rawIndex\000"
 4502      6E646578 
 4502      00
 4503              	.LASF95:
 4504 05a5 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 4504      656E7365 
 4504      5F435344 
 4504      5F4D6564 
 4504      69616E46 
 4505              	.LASF113:
 4506 05bf 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 4506      656E7365 
 4506      5F435344 
 4506      5F6E6F69 
 4506      73655468 
 4507              	.LASF6:
 4508 05db 6C6F6E67 		.ascii	"long long int\000"
 4508      206C6F6E 
 4508      6720696E 
 4508      7400
 4509              	.LASF73:
 4510 05e9 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 4510      656E7365 
 4510      5F435344 
 4510      5F476574 
 4510      46696E67 
 4511              	.LASF84:
 4512 0609 6465626F 		.ascii	"debounce\000"
 4512      756E6365 
 4512      00
 4513              	.LASF36:
 4514 0612 70747250 		.ascii	"ptrPreScan\000"
 4514      72655363 
 4514      616E00
 4515              	.LASF75:
 4516 061d 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 4516      656E7365 
 4516      5F435344 
 4516      5F476574 
 4516      46696E67 
 4517              	.LASF35:
 4518 063e 70747247 		.ascii	"ptrGetRaw\000"
 4518      65745261 
 4518      7700
 4519              	.LASF97:
 4520 0648 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 4520      656E7365 
 4520      5F435344 
 4520      5F476574 
 4520      57696467 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 135


 4521              	.LASF62:
 4522 0665 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 4522      656E7365 
 4522      5F435344 
 4522      5F557064 
 4522      61746545 
 4523              	.LASF109:
 4524 0689 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 4524      656E7365 
 4524      5F435344 
 4524      5F73656E 
 4524      736F724F 
 4525              	.LASF27:
 4526 06a3 73616D70 		.ascii	"sampleMinTbl\000"
 4526      6C654D69 
 4526      6E54626C 
 4526      00
 4527              	.LASF11:
 4528 06b0 75696E74 		.ascii	"uint32\000"
 4528      333200
 4529              	.LASF114:
 4530 06b7 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 4530      656E7365 
 4530      5F435344 
 4530      5F6E6567 
 4530      61746976 
 4531              	.LASF40:
 4532 06db 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4532      656E7365 
 4532      5F435344 
 4532      5F434F4E 
 4532      4649475F 
 4533              	.LASF71:
 4534 0706 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 4534      656E7365 
 4534      5F435344 
 4534      5F536574 
 4534      44696666 
 4535              	.LASF61:
 4536 0724 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 4536      656E7365 
 4536      5F435344 
 4536      5F557064 
 4536      61746553 
 4537              	.LASF119:
 4538 0746 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 4538      656E7365 
 4538      5F435344 
 4538      5F726177 
 4538      46696C74 
 4539              	.LASF108:
 4540 0762 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 4540      656E7365 
 4540      5F435344 
 4540      5F73656E 
 4540      736F7253 
 4541              	.LASF82:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 136


 4542 077c 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 4542      656E7365 
 4542      5F435344 
 4542      5F536574 
 4542      4C6F7742 
 4543              	.LASF117:
 4544 079d 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 4544      656E7365 
 4544      5F435344 
 4544      5F726177 
 4544      44617461 
 4545              	.LASF16:
 4546 07b7 6C6F6E67 		.ascii	"long double\000"
 4546      20646F75 
 4546      626C6500 
 4547              	.LASF66:
 4548 07c3 6C617374 		.ascii	"lastSensor\000"
 4548      53656E73 
 4548      6F7200
 4549              	.LASF120:
 4550 07ce 43617053 		.ascii	"CapSense_CSD_config\000"
 4550      656E7365 
 4550      5F435344 
 4550      5F636F6E 
 4550      66696700 
 4551              	.LASF45:
 4552 07e2 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4552      6B467265 
 4552      715F4D48 
 4552      7A00
 4553              	.LASF104:
 4554 07f0 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 4554      656E7365 
 4554      5F435344 
 4554      5F73656E 
 4554      736F7245 
 4555              	.LASF18:
 4556 080e 69646163 		.ascii	"idac2LevelsTbl\000"
 4556      324C6576 
 4556      656C7354 
 4556      626C00
 4557              	.LASF2:
 4558 081d 73686F72 		.ascii	"short int\000"
 4558      7420696E 
 4558      7400
 4559              	.LASF4:
 4560 0827 6C6F6E67 		.ascii	"long int\000"
 4560      20696E74 
 4560      00
 4561              	.LASF65:
 4562 0830 66697273 		.ascii	"firstSensor\000"
 4562      7453656E 
 4562      736F7200 
 4563              	.LASF115:
 4564 083c 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 4564      656E7365 
 4564      5F435344 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 137


 4564      5F687973 
 4564      74657265 
 4565              	.LASF70:
 4566 0854 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 4566      656E7365 
 4566      5F435344 
 4566      5F476574 
 4566      44696666 
 4567              	.LASF22:
 4568 0872 77696467 		.ascii	"widgetNubmersTbl\000"
 4568      65744E75 
 4568      626D6572 
 4568      7354626C 
 4568      00
 4569              	.LASF92:
 4570 0883 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 4570      656E7365 
 4570      5F435344 
 4570      5F436865 
 4570      636B4973 
 4571              	.LASF83:
 4572 08a7 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 4572      656E7365 
 4572      5F435344 
 4572      5F436865 
 4572      636B4973 
 4573              	.LASF30:
 4574 08c8 6B56616C 		.ascii	"kValueTbl\000"
 4574      75655462 
 4574      6C00
 4575              	.LASF69:
 4576 08d2 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 4576      656E7365 
 4576      5F435344 
 4576      5F476574 
 4576      42617365 
 4577              	.LASF15:
 4578 08ef 73697A65 		.ascii	"sizetype\000"
 4578      74797065 
 4578      00
 4579              	.LASF5:
 4580 08f8 6C6F6E67 		.ascii	"long unsigned int\000"
 4580      20756E73 
 4580      69676E65 
 4580      6420696E 
 4580      7400
 4581              	.LASF46:
 4582 090a 706F696E 		.ascii	"pointers\000"
 4582      74657273 
 4582      00
 4583              	.LASF98:
 4584 0913 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 4584      656E7365 
 4584      5F435344 
 4584      5F476574 
 4584      4C6F7742 
 4585              	.LASF116:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 138


 4586 0934 43617053 		.ascii	"CapSense_CSD_debounce\000"
 4586      656E7365 
 4586      5F435344 
 4586      5F646562 
 4586      6F756E63 
 4587              	.LASF60:
 4588 094a 6E6F6973 		.ascii	"noiseThreshold\000"
 4588      65546872 
 4588      6573686F 
 4588      6C6400
 4589              	.LASF100:
 4590 0959 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 4590      656E7365 
 4590      5F435344 
 4590      5F456E61 
 4590      626C6552 
 4591              	.LASF79:
 4592 097b 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 4592      656E7365 
 4592      5F435344 
 4592      5F536574 
 4592      46696E67 
 4593              	.LASF29:
 4594 099c 70726576 		.ascii	"previousSampleTbl\000"
 4594      696F7573 
 4594      53616D70 
 4594      6C655462 
 4594      6C00
 4595              	.LASF86:
 4596 09ae 66696E67 		.ascii	"fingerThreshold\000"
 4596      65725468 
 4596      72657368 
 4596      6F6C6400 
 4597              	.LASF20:
 4598 09be 63686172 		.ascii	"chargeDivTbl\000"
 4598      67654469 
 4598      7654626C 
 4598      00
 4599              	.LASF105:
 4600 09cb 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 4600      656E7365 
 4600      5F435344 
 4600      5F776964 
 4600      6765744E 
 4601              	.LASF1:
 4602 09e5 756E7369 		.ascii	"unsigned char\000"
 4602      676E6564 
 4602      20636861 
 4602      7200
 4603              	.LASF85:
 4604 09f3 6465626F 		.ascii	"debounceIndex\000"
 4604      756E6365 
 4604      496E6465 
 4604      7800
 4605              	.LASF96:
 4606 0a01 43617053 		.ascii	"CapSense_CSD_IIR16Filter\000"
 4606      656E7365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 139


 4606      5F435344 
 4606      5F494952 
 4606      31364669 
 4607              	.LASF49:
 4608 0a1a 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 4608      656E7365 
 4608      5F435344 
 4608      5F496E69 
 4608      7469616C 
 4609              	.LASF93:
 4610 0a40 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 4610      656E7365 
 4610      5F435344 
 4610      5F456E61 
 4610      626C6557 
 4611              	.LASF19:
 4612 0a5a 73656E73 		.ascii	"sensetivityTbl\000"
 4612      65746976 
 4612      69747954 
 4612      626C00
 4613              	.LASF91:
 4614 0a69 73746174 		.ascii	"state\000"
 4614      6500
 4615              	.LASF21:
 4616 0a6f 6D6F6444 		.ascii	"modDivTbl\000"
 4616      69765462 
 4616      6C00
 4617              	.LASF0:
 4618 0a79 7369676E 		.ascii	"signed char\000"
 4618      65642063 
 4618      68617200 
 4619              	.LASF3:
 4620 0a85 73686F72 		.ascii	"short unsigned int\000"
 4620      7420756E 
 4620      7369676E 
 4620      65642069 
 4620      6E7400
 4621              	.LASF39:
 4622 0a98 70747253 		.ascii	"ptrSetBitValue\000"
 4622      65744269 
 4622      7456616C 
 4622      756500
 4623              	.LASF51:
 4624 0aa7 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 4624      656E7365 
 4624      5F435344 
 4624      5F496E69 
 4624      7469616C 
 4625              	.LASF58:
 4626 0acb 74656D70 		.ascii	"tempRaw\000"
 4626      52617700 
 4627              	.LASF9:
 4628 0ad3 75696E74 		.ascii	"uint8\000"
 4628      3800
 4629              	.LASF13:
 4630 0ad9 646F7562 		.ascii	"double\000"
 4630      6C6500
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\cct0xbdr.s 			page 140


 4631              	.LASF107:
 4632 0ae0 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 4632      656E7365 
 4632      5F435344 
 4632      5F73656E 
 4632      736F7242 
 4633              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
