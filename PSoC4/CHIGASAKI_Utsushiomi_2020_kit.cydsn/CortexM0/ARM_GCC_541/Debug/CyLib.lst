ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB0:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.90
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 99 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 5


 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 100 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 115 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE0:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
 157              	CySysClkImoStop:
 158              	.LFB1:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 6


 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also 
 126:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 132:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 132 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 133:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 134:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 135:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 136:Generated_Source\PSoC4/CyLib.c **** 
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 138:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 139:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 140:Generated_Source\PSoC4/CyLib.c **** 
 141:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 141 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 142:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 142 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE1:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB2:
 143:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 7


 144:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 149:Generated_Source\PSoC4/CyLib.c ****     *
 150:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 151:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 152:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 153:Generated_Source\PSoC4/CyLib.c ****     *
 154:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 155:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 156:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 157:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 158:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 159:Generated_Source\PSoC4/CyLib.c ****     *
 160:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 161:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 164:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 165:Generated_Source\PSoC4/CyLib.c ****     *
 166:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 167:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 168:Generated_Source\PSoC4/CyLib.c ****     {
 169:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 170:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 171:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 172:Generated_Source\PSoC4/CyLib.c **** 
 173:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 174:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 176:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 177:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 178:Generated_Source\PSoC4/CyLib.c **** 
 179:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 180:Generated_Source\PSoC4/CyLib.c ****         {
 181:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/CyLib.c **** 
 183:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 184:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 186:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 188:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 191:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 192:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 193:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 194:Generated_Source\PSoC4/CyLib.c ****                 {
 195:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 196:Generated_Source\PSoC4/CyLib.c ****                     {
 197:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 198:Generated_Source\PSoC4/CyLib.c ****                         break;
 199:Generated_Source\PSoC4/CyLib.c ****                     }
 200:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****             #else
 202:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 203:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 204:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 205:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 206:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 207:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 208:Generated_Source\PSoC4/CyLib.c ****                 #else
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 210:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 211:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 212:Generated_Source\PSoC4/CyLib.c **** 
 213:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 214:Generated_Source\PSoC4/CyLib.c ****             
 215:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 216:Generated_Source\PSoC4/CyLib.c ****             
 217:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 218:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 220:Generated_Source\PSoC4/CyLib.c ****                 {
 221:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 222:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 223:Generated_Source\PSoC4/CyLib.c ****                 }
 224:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 225:Generated_Source\PSoC4/CyLib.c **** 
 226:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 230:Generated_Source\PSoC4/CyLib.c **** 
 231:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 238:Generated_Source\PSoC4/CyLib.c ****             
 239:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 240:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 244:Generated_Source\PSoC4/CyLib.c ****             
 245:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 248:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 249:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 250:Generated_Source\PSoC4/CyLib.c ****             }
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 254:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 257:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 259:Generated_Source\PSoC4/CyLib.c ****         }
 260:Generated_Source\PSoC4/CyLib.c ****     }
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 266:Generated_Source\PSoC4/CyLib.c ****     *
 267:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 268:Generated_Source\PSoC4/CyLib.c ****     *
 269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 270:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 273:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 277:Generated_Source\PSoC4/CyLib.c ****     {
 278:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 279:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 280:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 281:Generated_Source\PSoC4/CyLib.c **** 
 282:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 283:Generated_Source\PSoC4/CyLib.c ****         
 284:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 287:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 288:Generated_Source\PSoC4/CyLib.c ****             {
 289:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 290:Generated_Source\PSoC4/CyLib.c ****                 {
 291:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 292:Generated_Source\PSoC4/CyLib.c ****                     break;
 293:Generated_Source\PSoC4/CyLib.c ****                 }
 294:Generated_Source\PSoC4/CyLib.c ****             }
 295:Generated_Source\PSoC4/CyLib.c ****         #else
 296:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 297:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 298:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 299:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 300:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 301:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 302:Generated_Source\PSoC4/CyLib.c ****             #else
 303:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 304:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 305:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 308:Generated_Source\PSoC4/CyLib.c **** 
 309:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 310:Generated_Source\PSoC4/CyLib.c ****         
 311:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 312:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 313:Generated_Source\PSoC4/CyLib.c ****         #else
 314:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c ****         #endif
 316:Generated_Source\PSoC4/CyLib.c ****     }
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c **** 
 319:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 321:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 326:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 329:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 336:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 337:Generated_Source\PSoC4/CyLib.c ****     }
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 346:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/CyLib.c ****     *
 348:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 349:Generated_Source\PSoC4/CyLib.c ****     *
 350:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 351:Generated_Source\PSoC4/CyLib.c ****     *
 352:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 353:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 356:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 357:Generated_Source\PSoC4/CyLib.c ****     *
 358:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 360:Generated_Source\PSoC4/CyLib.c ****     {
 361:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 362:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 363:Generated_Source\PSoC4/CyLib.c ****             
 364:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 365:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 366:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 367:Generated_Source\PSoC4/CyLib.c **** 
 368:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 369:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****             {
 373:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 374:Generated_Source\PSoC4/CyLib.c ****                 {
 375:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 376:Generated_Source\PSoC4/CyLib.c ****                     break;
 377:Generated_Source\PSoC4/CyLib.c ****                 }
 378:Generated_Source\PSoC4/CyLib.c ****             }
 379:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 380:Generated_Source\PSoC4/CyLib.c ****         
 381:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 382:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 383:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 384:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 385:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 386:Generated_Source\PSoC4/CyLib.c **** 
 387:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 388:Generated_Source\PSoC4/CyLib.c ****            
 389:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 390:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 391:Generated_Source\PSoC4/CyLib.c ****             
 392:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 393:Generated_Source\PSoC4/CyLib.c ****             {
 394:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 395:Generated_Source\PSoC4/CyLib.c ****                 
 396:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 397:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 399:Generated_Source\PSoC4/CyLib.c ****                 
 400:Generated_Source\PSoC4/CyLib.c ****             }
 401:Generated_Source\PSoC4/CyLib.c ****             else
 402:Generated_Source\PSoC4/CyLib.c ****             {
 403:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 404:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 405:Generated_Source\PSoC4/CyLib.c **** 
 406:Generated_Source\PSoC4/CyLib.c ****             }
 407:Generated_Source\PSoC4/CyLib.c **** 
 408:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 409:Generated_Source\PSoC4/CyLib.c ****             {
 410:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 412:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 413:Generated_Source\PSoC4/CyLib.c ****             }
 414:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 415:Generated_Source\PSoC4/CyLib.c ****             {
 416:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 418:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 419:Generated_Source\PSoC4/CyLib.c ****             }
 420:Generated_Source\PSoC4/CyLib.c ****             else
 421:Generated_Source\PSoC4/CyLib.c ****             {
 422:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 423:Generated_Source\PSoC4/CyLib.c ****             }
 424:Generated_Source\PSoC4/CyLib.c ****             
 425:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 428:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 432:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 433:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 434:Generated_Source\PSoC4/CyLib.c ****     *
 435:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 436:Generated_Source\PSoC4/CyLib.c ****     *
 437:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 438:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 444:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 445:Generated_Source\PSoC4/CyLib.c ****     {
 446:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 447:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 448:Generated_Source\PSoC4/CyLib.c ****             
 449:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 450:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 451:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 454:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 459:Generated_Source\PSoC4/CyLib.c ****                 {
 460:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 461:Generated_Source\PSoC4/CyLib.c ****                     break;
 462:Generated_Source\PSoC4/CyLib.c ****                 }
 463:Generated_Source\PSoC4/CyLib.c ****             }           
 464:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 465:Generated_Source\PSoC4/CyLib.c ****         
 466:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 469:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 470:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 471:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 474:Generated_Source\PSoC4/CyLib.c ****             {
 475:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 476:Generated_Source\PSoC4/CyLib.c ****             }
 477:Generated_Source\PSoC4/CyLib.c ****             
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 479:Generated_Source\PSoC4/CyLib.c ****             
 480:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 481:Generated_Source\PSoC4/CyLib.c ****     }
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 485:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 13


 486:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 487:Generated_Source\PSoC4/CyLib.c ****     *
 488:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 489:Generated_Source\PSoC4/CyLib.c ****     *
 490:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 491:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 492:Generated_Source\PSoC4/CyLib.c ****     *
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 494:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 495:Generated_Source\PSoC4/CyLib.c ****     *
 496:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 498:Generated_Source\PSoC4/CyLib.c ****     {
 499:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 501:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 502:Generated_Source\PSoC4/CyLib.c ****     }
 503:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 508:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 509:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 512:Generated_Source\PSoC4/CyLib.c **** *
 513:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 514:Generated_Source\PSoC4/CyLib.c **** *
 515:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 516:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 517:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 518:Generated_Source\PSoC4/CyLib.c **** *
 519:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 520:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 521:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 522:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 524:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 525:Generated_Source\PSoC4/CyLib.c **** *
 526:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 527:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 528:Generated_Source\PSoC4/CyLib.c **** *
 529:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 532:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 533:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 534:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 535:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 536:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 537:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 540:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 541:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 541 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 14


 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 542:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 543:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 544:Generated_Source\PSoC4/CyLib.c ****     
 545:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 546:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 547:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 549 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 552:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 556:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 557:Generated_Source\PSoC4/CyLib.c ****         
 558:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 561:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 562:Generated_Source\PSoC4/CyLib.c ****         
 563:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 564:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 565:Generated_Source\PSoC4/CyLib.c ****         
 566:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 567:Generated_Source\PSoC4/CyLib.c ****         {
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 570:Generated_Source\PSoC4/CyLib.c ****         }
 571:Generated_Source\PSoC4/CyLib.c ****         
 572:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 573:Generated_Source\PSoC4/CyLib.c ****     }
 574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 576 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 15


 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 577:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 580:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 581:Generated_Source\PSoC4/CyLib.c ****     {
 582:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 583:Generated_Source\PSoC4/CyLib.c ****     }
 584:Generated_Source\PSoC4/CyLib.c ****     else
 585:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 586:Generated_Source\PSoC4/CyLib.c ****     {
 587:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 587 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 588:Generated_Source\PSoC4/CyLib.c ****     }   
 589:Generated_Source\PSoC4/CyLib.c ****     
 590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 590 0
 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
 232 002e 1A60     		str	r2, [r3]
 591:Generated_Source\PSoC4/CyLib.c ****     
 592:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 592 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 593:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 593 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE2:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 16


 259              	.LFB3:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** 
 596:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 598:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 604:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 605:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 606:Generated_Source\PSoC4/CyLib.c **** *
 607:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 608:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 609:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 610:Generated_Source\PSoC4/CyLib.c **** *
 611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 612:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 613:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 613 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 614:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 615:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 615 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 617 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 618:Generated_Source\PSoC4/CyLib.c ****         }
 619:Generated_Source\PSoC4/CyLib.c ****         else
 620:Generated_Source\PSoC4/CyLib.c ****         {
 621:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 622:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 17


 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 624:Generated_Source\PSoC4/CyLib.c ****         }
 625:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 626:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 627:Generated_Source\PSoC4/CyLib.c ****         {
 628:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 629:Generated_Source\PSoC4/CyLib.c ****         }
 630:Generated_Source\PSoC4/CyLib.c ****         else
 631:Generated_Source\PSoC4/CyLib.c ****         {
 632:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 633:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 634:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 635:Generated_Source\PSoC4/CyLib.c ****         }
 636:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 637:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 637 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 621 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
 623:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 623 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 637 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE3:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 18


 327              	CySysClkGetSysclkSource:
 328              	.LFB4:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 643:Generated_Source\PSoC4/CyLib.c **** *
 644:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 645:Generated_Source\PSoC4/CyLib.c **** *
 646:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 647:Generated_Source\PSoC4/CyLib.c **** *
 648:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 650:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 650 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 651:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 652:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 653:Generated_Source\PSoC4/CyLib.c **** 
 654:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 654 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 657:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 658:Generated_Source\PSoC4/CyLib.c ****     {
 659:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 660:Generated_Source\PSoC4/CyLib.c ****     }
 661:Generated_Source\PSoC4/CyLib.c ****     else
 662:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 663:Generated_Source\PSoC4/CyLib.c ****     {
 664:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 664 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 667:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 668:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 19


 669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 670:Generated_Source\PSoC4/CyLib.c ****         
 671:Generated_Source\PSoC4/CyLib.c ****     }
 672:Generated_Source\PSoC4/CyLib.c **** 
 673:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 673 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 675 0
 359 0024 3B68     		ldr	r3, [r7]
 676:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 676 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE4:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB5:
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 680:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 681:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 682:Generated_Source\PSoC4/CyLib.c **** *
 683:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 684:Generated_Source\PSoC4/CyLib.c **** *
 685:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 686:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 689:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 690:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 693:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 694:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 695:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 697:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 20


 698:Generated_Source\PSoC4/CyLib.c **** *
 699:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 708:Generated_Source\PSoC4/CyLib.c **** *
 709:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 711:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 711 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 712:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 713:Generated_Source\PSoC4/CyLib.c **** 
 714:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 395              		.loc 1 714 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 715:Generated_Source\PSoC4/CyLib.c **** 
 716:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 716 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 718:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 718 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 717 0
 414 0028 0A43     		orrs	r2, r1
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 21


 415              		.loc 1 716 0
 416 002a 1A60     		str	r2, [r3]
 719:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 721 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 722:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 722 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE5:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB6:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 727:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 730:Generated_Source\PSoC4/CyLib.c **** *
 731:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 732:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 735:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 736:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 737:Generated_Source\PSoC4/CyLib.c **** *
 738:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 739:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 740:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 741:Generated_Source\PSoC4/CyLib.c **** *
 742:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 743:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 744:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 745:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 22


 746:Generated_Source\PSoC4/CyLib.c **** *
 747:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 748:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 749:Generated_Source\PSoC4/CyLib.c **** *
 750:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 751:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 752:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 753:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 755:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 756:Generated_Source\PSoC4/CyLib.c **** *
 757:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 758:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 759:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 760:Generated_Source\PSoC4/CyLib.c **** *
 761:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 762:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 763:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 764:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 765:Generated_Source\PSoC4/CyLib.c **** *
 766:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 768:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 769:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 769 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 770:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 772:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 773:Generated_Source\PSoC4/CyLib.c ****         #else
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 778:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 781:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 782:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 786:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 23


 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 791 0
 460 0008 0C23     		movs	r3, #12
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 794:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c **** 
 802:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 810:Generated_Source\PSoC4/CyLib.c ****                 {
 811:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 812:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 813:Generated_Source\PSoC4/CyLib.c ****                 }
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 816:Generated_Source\PSoC4/CyLib.c ****                 }
 817:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 823:Generated_Source\PSoC4/CyLib.c **** 
 824:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 828:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 829:Generated_Source\PSoC4/CyLib.c **** 
 830:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 831:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 832:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 833:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 836:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 837:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 24


 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 465              		.loc 1 841 0
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 022B     		cmp	r3, #2
 468 0018 00D8     		bhi	.LCB302
 469 001a AFE0     		b	.L24	@long jump
 470              	.LCB302:
 471              		.loc 1 841 0 is_stmt 0 discriminator 1
 472 001c 7B68     		ldr	r3, [r7, #4]
 473 001e 302B     		cmp	r3, #48
 474 0020 00D9     		bls	.LCB305
 475 0022 ABE0     		b	.L24	@long jump
 476              	.LCB305:
 842:Generated_Source\PSoC4/CyLib.c ****         {
 843:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 477              		.loc 1 843 0 is_stmt 1
 478 0024 5C4B     		ldr	r3, .L35
 479 0026 1B78     		ldrb	r3, [r3]
 480 0028 DBB2     		uxtb	r3, r3
 481 002a 1A00     		movs	r2, r3
 482 002c 7B68     		ldr	r3, [r7, #4]
 483 002e 9A42     		cmp	r2, r3
 484 0030 0AD3     		bcc	.L25
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 485              		.loc 1 845 0
 486 0032 5A4A     		ldr	r2, .L35+4
 487 0034 0F23     		movs	r3, #15
 488 0036 FB18     		adds	r3, r7, r3
 489 0038 1278     		ldrb	r2, [r2]
 490 003a 1A70     		strb	r2, [r3]
 846:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 491              		.loc 1 846 0
 492 003c 584A     		ldr	r2, .L35+8
 493 003e 0E23     		movs	r3, #14
 494 0040 FB18     		adds	r3, r7, r3
 495 0042 1278     		ldrb	r2, [r2]
 496 0044 1A70     		strb	r2, [r3]
 497 0046 3FE0     		b	.L26
 498              	.L25:
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 499              		.loc 1 848 0
 500 0048 564B     		ldr	r3, .L35+12
 501 004a 1B78     		ldrb	r3, [r3]
 502 004c DBB2     		uxtb	r3, r3
 503 004e 1A00     		movs	r2, r3
 504 0050 7B68     		ldr	r3, [r7, #4]
 505 0052 9A42     		cmp	r2, r3
 506 0054 0AD3     		bcc	.L27
 849:Generated_Source\PSoC4/CyLib.c ****             {
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 507              		.loc 1 850 0
 508 0056 544A     		ldr	r2, .L35+16
 509 0058 0F23     		movs	r3, #15
 510 005a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 25


 511 005c 1278     		ldrb	r2, [r2]
 512 005e 1A70     		strb	r2, [r3]
 851:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 513              		.loc 1 851 0
 514 0060 524A     		ldr	r2, .L35+20
 515 0062 0E23     		movs	r3, #14
 516 0064 FB18     		adds	r3, r7, r3
 517 0066 1278     		ldrb	r2, [r2]
 518 0068 1A70     		strb	r2, [r3]
 519 006a 2DE0     		b	.L26
 520              	.L27:
 852:Generated_Source\PSoC4/CyLib.c ****             }
 853:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 521              		.loc 1 853 0
 522 006c 504B     		ldr	r3, .L35+24
 523 006e 1B78     		ldrb	r3, [r3]
 524 0070 DBB2     		uxtb	r3, r3
 525 0072 1A00     		movs	r2, r3
 526 0074 7B68     		ldr	r3, [r7, #4]
 527 0076 9A42     		cmp	r2, r3
 528 0078 0AD3     		bcc	.L28
 854:Generated_Source\PSoC4/CyLib.c ****             {
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 529              		.loc 1 855 0
 530 007a 4E4A     		ldr	r2, .L35+28
 531 007c 0F23     		movs	r3, #15
 532 007e FB18     		adds	r3, r7, r3
 533 0080 1278     		ldrb	r2, [r2]
 534 0082 1A70     		strb	r2, [r3]
 856:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 535              		.loc 1 856 0
 536 0084 4C4A     		ldr	r2, .L35+32
 537 0086 0E23     		movs	r3, #14
 538 0088 FB18     		adds	r3, r7, r3
 539 008a 1278     		ldrb	r2, [r2]
 540 008c 1A70     		strb	r2, [r3]
 541 008e 1BE0     		b	.L26
 542              	.L28:
 857:Generated_Source\PSoC4/CyLib.c ****             }
 858:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 543              		.loc 1 858 0
 544 0090 4A4B     		ldr	r3, .L35+36
 545 0092 1B78     		ldrb	r3, [r3]
 546 0094 DBB2     		uxtb	r3, r3
 547 0096 1A00     		movs	r2, r3
 548 0098 7B68     		ldr	r3, [r7, #4]
 549 009a 9A42     		cmp	r2, r3
 550 009c 0AD3     		bcc	.L29
 859:Generated_Source\PSoC4/CyLib.c ****             {
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 551              		.loc 1 860 0
 552 009e 484A     		ldr	r2, .L35+40
 553 00a0 0F23     		movs	r3, #15
 554 00a2 FB18     		adds	r3, r7, r3
 555 00a4 1278     		ldrb	r2, [r2]
 556 00a6 1A70     		strb	r2, [r3]
 861:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 26


 557              		.loc 1 861 0
 558 00a8 464A     		ldr	r2, .L35+44
 559 00aa 0E23     		movs	r3, #14
 560 00ac FB18     		adds	r3, r7, r3
 561 00ae 1278     		ldrb	r2, [r2]
 562 00b0 1A70     		strb	r2, [r3]
 563 00b2 09E0     		b	.L26
 564              	.L29:
 862:Generated_Source\PSoC4/CyLib.c ****             }
 863:Generated_Source\PSoC4/CyLib.c ****             else
 864:Generated_Source\PSoC4/CyLib.c ****             {
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 565              		.loc 1 865 0
 566 00b4 444A     		ldr	r2, .L35+48
 567 00b6 0F23     		movs	r3, #15
 568 00b8 FB18     		adds	r3, r7, r3
 569 00ba 1278     		ldrb	r2, [r2]
 570 00bc 1A70     		strb	r2, [r3]
 866:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 571              		.loc 1 866 0
 572 00be 434A     		ldr	r2, .L35+52
 573 00c0 0E23     		movs	r3, #14
 574 00c2 FB18     		adds	r3, r7, r3
 575 00c4 1278     		ldrb	r2, [r2]
 576 00c6 1A70     		strb	r2, [r3]
 577              	.L26:
 867:Generated_Source\PSoC4/CyLib.c ****             }
 868:Generated_Source\PSoC4/CyLib.c **** 
 869:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 870:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 578              		.loc 1 870 0
 579 00c8 7B68     		ldr	r3, [r7, #4]
 580 00ca DA1E     		subs	r2, r3, #3
 581 00cc 0B23     		movs	r3, #11
 582 00ce FB18     		adds	r3, r7, r3
 583 00d0 3F49     		ldr	r1, .L35+56
 584 00d2 8A5C     		ldrb	r2, [r1, r2]
 585 00d4 1A70     		strb	r2, [r3]
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 874:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 875:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 876:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 877:Generated_Source\PSoC4/CyLib.c ****             *
 878:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 879:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 880:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 881:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 882:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 586              		.loc 1 882 0
 587 00d6 0B23     		movs	r3, #11
 588 00d8 FB18     		adds	r3, r7, r3
 589 00da 1B78     		ldrb	r3, [r3]
 590 00dc 2F2B     		cmp	r3, #47
 591 00de 0DD9     		bls	.L30
 592              		.loc 1 882 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 27


 593 00e0 7B68     		ldr	r3, [r7, #4]
 594 00e2 2A2B     		cmp	r3, #42
 595 00e4 0AD9     		bls	.L30
 883:Generated_Source\PSoC4/CyLib.c ****             {
 884:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 885:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 596              		.loc 1 885 0 is_stmt 1
 597 00e6 3B4B     		ldr	r3, .L35+60
 598 00e8 1922     		movs	r2, #25
 599 00ea 1A60     		str	r2, [r3]
 886:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 600              		.loc 1 888 0
 601 00ec 0520     		movs	r0, #5
 602 00ee FFF7FEFF 		bl	CyDelayCycles
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 603              		.loc 1 890 0
 604 00f2 0D23     		movs	r3, #13
 605 00f4 FB18     		adds	r3, r7, r3
 606 00f6 1922     		movs	r2, #25
 607 00f8 1A70     		strb	r2, [r3]
 608 00fa 07E0     		b	.L31
 609              	.L30:
 891:Generated_Source\PSoC4/CyLib.c ****             }
 892:Generated_Source\PSoC4/CyLib.c ****             else
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 610              		.loc 1 894 0
 611 00fc 354B     		ldr	r3, .L35+60
 612 00fe 1B68     		ldr	r3, [r3]
 613 0100 DAB2     		uxtb	r2, r3
 614 0102 0D23     		movs	r3, #13
 615 0104 FB18     		adds	r3, r7, r3
 616 0106 3F21     		movs	r1, #63
 617 0108 0A40     		ands	r2, r1
 618 010a 1A70     		strb	r2, [r3]
 619              	.L31:
 895:Generated_Source\PSoC4/CyLib.c ****             }
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 899:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 900:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 901:Generated_Source\PSoC4/CyLib.c ****             *
 902:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 903:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 904:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 905:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 906:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 620              		.loc 1 906 0
 621 010c 0B23     		movs	r3, #11
 622 010e FA18     		adds	r2, r7, r3
 623 0110 0D23     		movs	r3, #13
 624 0112 FB18     		adds	r3, r7, r3
 625 0114 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 28


 626 0116 1B78     		ldrb	r3, [r3]
 627 0118 9A42     		cmp	r2, r3
 628 011a 08D2     		bcs	.L32
 907:Generated_Source\PSoC4/CyLib.c ****             {
 908:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 909:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 629              		.loc 1 909 0
 630 011c 2D4B     		ldr	r3, .L35+60
 631 011e 7A68     		ldr	r2, [r7, #4]
 632 0120 033A     		subs	r2, r2, #3
 633 0122 2B49     		ldr	r1, .L35+56
 634 0124 8A5C     		ldrb	r2, [r1, r2]
 635 0126 1A60     		str	r2, [r3]
 910:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 636              		.loc 1 910 0
 637 0128 0520     		movs	r0, #5
 638 012a FFF7FEFF 		bl	CyDelayCycles
 639              	.L32:
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 914:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 640              		.loc 1 914 0
 641 012e 2A4B     		ldr	r3, .L35+64
 642 0130 7A68     		ldr	r2, [r7, #4]
 643 0132 2649     		ldr	r1, .L35+52
 644 0134 8C46     		mov	ip, r1
 645 0136 6244     		add	r2, r2, ip
 646 0138 1278     		ldrb	r2, [r2]
 647 013a D2B2     		uxtb	r2, r2
 648 013c 1A60     		str	r2, [r3]
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 649              		.loc 1 915 0
 650 013e 274B     		ldr	r3, .L35+68
 651 0140 0F22     		movs	r2, #15
 652 0142 BA18     		adds	r2, r7, r2
 653 0144 1278     		ldrb	r2, [r2]
 654 0146 1A60     		str	r2, [r3]
 916:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 655              		.loc 1 916 0
 656 0148 254B     		ldr	r3, .L35+72
 657 014a 0E22     		movs	r2, #14
 658 014c BA18     		adds	r2, r7, r2
 659 014e 1278     		ldrb	r2, [r2]
 660 0150 1A60     		str	r2, [r3]
 917:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 661              		.loc 1 917 0
 662 0152 0520     		movs	r0, #5
 663 0154 FFF7FEFF 		bl	CyDelayUs
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 664              		.loc 1 919 0
 665 0158 0B23     		movs	r3, #11
 666 015a FA18     		adds	r2, r7, r3
 667 015c 0D23     		movs	r3, #13
 668 015e FB18     		adds	r3, r7, r3
 669 0160 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 29


 670 0162 1B78     		ldrb	r3, [r3]
 671 0164 9A42     		cmp	r2, r3
 672 0166 0CD9     		bls	.L34
 920:Generated_Source\PSoC4/CyLib.c ****             {
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 673              		.loc 1 922 0
 674 0168 1A4B     		ldr	r3, .L35+60
 675 016a 7A68     		ldr	r2, [r7, #4]
 676 016c 033A     		subs	r2, r2, #3
 677 016e 1849     		ldr	r1, .L35+56
 678 0170 8A5C     		ldrb	r2, [r1, r2]
 679 0172 1A60     		str	r2, [r3]
 923:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 680              		.loc 1 923 0
 681 0174 0520     		movs	r0, #5
 682 0176 FFF7FEFF 		bl	CyDelayCycles
 919:Generated_Source\PSoC4/CyLib.c ****             {
 683              		.loc 1 919 0
 684 017a 02E0     		b	.L34
 685              	.L24:
 924:Generated_Source\PSoC4/CyLib.c ****             }
 925:Generated_Source\PSoC4/CyLib.c ****         }
 926:Generated_Source\PSoC4/CyLib.c ****         else
 927:Generated_Source\PSoC4/CyLib.c ****         {
 928:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 929:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 686              		.loc 1 929 0 discriminator 1
 687 017c 0020     		movs	r0, #0
 688 017e FFF7FEFF 		bl	CyHalt
 689              	.L34:
 930:Generated_Source\PSoC4/CyLib.c ****         }
 931:Generated_Source\PSoC4/CyLib.c **** 
 932:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 933:Generated_Source\PSoC4/CyLib.c **** 
 934:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 935:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 936:Generated_Source\PSoC4/CyLib.c ****             {
 937:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 938:Generated_Source\PSoC4/CyLib.c ****             }
 939:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 942:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 943:Generated_Source\PSoC4/CyLib.c ****             {
 944:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 945:Generated_Source\PSoC4/CyLib.c ****             }
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 690              		.loc 1 948 0
 691 0182 0C23     		movs	r3, #12
 692 0184 FB18     		adds	r3, r7, r3
 693 0186 1B78     		ldrb	r3, [r3]
 694 0188 1800     		movs	r0, r3
 695 018a FFF7FEFF 		bl	CyExitCriticalSection
 949:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 30


 696              		.loc 1 949 0
 697 018e C046     		nop
 698 0190 BD46     		mov	sp, r7
 699 0192 05B0     		add	sp, sp, #20
 700              		@ sp needed
 701 0194 90BD     		pop	{r4, r7, pc}
 702              	.L36:
 703 0196 C046     		.align	2
 704              	.L35:
 705 0198 C0F1FF0F 		.word	268431808
 706 019c C1F1FF0F 		.word	268431809
 707 01a0 C2F1FF0F 		.word	268431810
 708 01a4 C3F1FF0F 		.word	268431811
 709 01a8 C4F1FF0F 		.word	268431812
 710 01ac C5F1FF0F 		.word	268431813
 711 01b0 C6F1FF0F 		.word	268431814
 712 01b4 C7F1FF0F 		.word	268431815
 713 01b8 C8F1FF0F 		.word	268431816
 714 01bc C9F1FF0F 		.word	268431817
 715 01c0 CAF1FF0F 		.word	268431818
 716 01c4 CBF1FF0F 		.word	268431819
 717 01c8 CCF1FF0F 		.word	268431820
 718 01cc CDF1FF0F 		.word	268431821
 719 01d0 00000000 		.word	cyImoFreqMhz2Reg
 720 01d4 2CFF0B40 		.word	1074528044
 721 01d8 28FF0B40 		.word	1074528040
 722 01dc 1CFF0B40 		.word	1074528028
 723 01e0 20FF0B40 		.word	1074528032
 724              		.cfi_endproc
 725              	.LFE6:
 726              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 727              		.section	.text.CySysLvdEnable,"ax",%progbits
 728              		.align	2
 729              		.global	CySysLvdEnable
 730              		.code	16
 731              		.thumb_func
 732              		.type	CySysLvdEnable, %function
 733              	CySysLvdEnable:
 734              	.LFB7:
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #else
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 954:Generated_Source\PSoC4/CyLib.c ****     {
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 956:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 957:Generated_Source\PSoC4/CyLib.c **** 
 958:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 959:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 960:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 961:Generated_Source\PSoC4/CyLib.c ****         
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 963:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 964:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 967:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 31


 968:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 969:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 970:Generated_Source\PSoC4/CyLib.c ****         #else
 971:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 973:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 974:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 975:Generated_Source\PSoC4/CyLib.c ****         {
 976:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 979:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 980:Generated_Source\PSoC4/CyLib.c ****                 {
 981:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 982:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 983:Generated_Source\PSoC4/CyLib.c ****                 }
 984:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 989:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 990:Generated_Source\PSoC4/CyLib.c ****                     {
 991:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 992:Generated_Source\PSoC4/CyLib.c **** 
 993:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 994:Generated_Source\PSoC4/CyLib.c ****                     {
 995:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 996:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 997:Generated_Source\PSoC4/CyLib.c ****                     }
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1000:Generated_Source\PSoC4/CyLib.c ****                     }
1001:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1002:Generated_Source\PSoC4/CyLib.c **** 
1003:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c **** 
1006:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1007:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c **** 
1010:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1011:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1013:Generated_Source\PSoC4/CyLib.c ****                 {
1014:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1015:Generated_Source\PSoC4/CyLib.c ****                 }
1016:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1017:Generated_Source\PSoC4/CyLib.c ****                 {
1018:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1019:Generated_Source\PSoC4/CyLib.c ****                 }
1020:Generated_Source\PSoC4/CyLib.c ****                 else
1021:Generated_Source\PSoC4/CyLib.c ****                 {
1022:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1023:Generated_Source\PSoC4/CyLib.c ****                 }
1024:Generated_Source\PSoC4/CyLib.c ****             #else
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 32


1025:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1026:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1027:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1030:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1031:Generated_Source\PSoC4/CyLib.c **** 
1032:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1034:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1035:Generated_Source\PSoC4/CyLib.c **** 
1036:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1039:Generated_Source\PSoC4/CyLib.c ****             {
1040:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1041:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1042:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1043:Generated_Source\PSoC4/CyLib.c **** 
1044:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1045:Generated_Source\PSoC4/CyLib.c **** 
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1048:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1049:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1050:Generated_Source\PSoC4/CyLib.c ****             }
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1053:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1054:Generated_Source\PSoC4/CyLib.c ****                 {
1055:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1056:Generated_Source\PSoC4/CyLib.c ****                 }
1057:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****         
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1066:Generated_Source\PSoC4/CyLib.c **** 
1067:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1068:Generated_Source\PSoC4/CyLib.c ****         }
1069:Generated_Source\PSoC4/CyLib.c ****         else
1070:Generated_Source\PSoC4/CyLib.c ****         {
1071:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1072:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1073:Generated_Source\PSoC4/CyLib.c ****         }
1074:Generated_Source\PSoC4/CyLib.c ****     }
1075:Generated_Source\PSoC4/CyLib.c **** 
1076:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1080:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1081:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 33


1082:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1083:Generated_Source\PSoC4/CyLib.c ****     *
1084:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1085:Generated_Source\PSoC4/CyLib.c ****     *
1086:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1087:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1088:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1089:Generated_Source\PSoC4/CyLib.c ****     *
1090:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1091:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1092:Generated_Source\PSoC4/CyLib.c ****     *
1093:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1094:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1095:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1096:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1098:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1103:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1104:Generated_Source\PSoC4/CyLib.c ****     *
1105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1106:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1107:Generated_Source\PSoC4/CyLib.c ****     {
1108:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1114:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****     }
1118:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1125:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1128:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1129:Generated_Source\PSoC4/CyLib.c ****     *
1130:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1131:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1132:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1133:Generated_Source\PSoC4/CyLib.c ****     * called.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1138:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 34


1139:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1140:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1143:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1144:Generated_Source\PSoC4/CyLib.c ****     *
1145:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1146:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1147:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1150:Generated_Source\PSoC4/CyLib.c ****     *
1151:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1152:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1153:Generated_Source\PSoC4/CyLib.c ****     {
1154:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1155:Generated_Source\PSoC4/CyLib.c **** 
1156:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1157:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1159:Generated_Source\PSoC4/CyLib.c **** 
1160:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1161:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1162:Generated_Source\PSoC4/CyLib.c **** 
1163:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1164:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1165:Generated_Source\PSoC4/CyLib.c ****         
1166:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1169:Generated_Source\PSoC4/CyLib.c ****             
1170:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1171:Generated_Source\PSoC4/CyLib.c ****             {
1172:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1173:Generated_Source\PSoC4/CyLib.c ****             }
1174:Generated_Source\PSoC4/CyLib.c ****             else
1175:Generated_Source\PSoC4/CyLib.c ****             {
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1180:Generated_Source\PSoC4/CyLib.c ****             
1181:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1184:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1188:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1189:Generated_Source\PSoC4/CyLib.c ****                 {
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1191:Generated_Source\PSoC4/CyLib.c ****                 }
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 35


1196:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1197:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1198:Generated_Source\PSoC4/CyLib.c **** 
1199:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1200:Generated_Source\PSoC4/CyLib.c ****                 {
1201:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1202:Generated_Source\PSoC4/CyLib.c ****                 }
1203:Generated_Source\PSoC4/CyLib.c **** 
1204:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1205:Generated_Source\PSoC4/CyLib.c ****                 {
1206:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1207:Generated_Source\PSoC4/CyLib.c ****                 }
1208:Generated_Source\PSoC4/CyLib.c ****                 
1209:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1212:Generated_Source\PSoC4/CyLib.c ****                 
1213:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1215:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1216:Generated_Source\PSoC4/CyLib.c ****                 #else
1217:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1218:Generated_Source\PSoC4/CyLib.c ****                 #endif
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1221:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1222:Generated_Source\PSoC4/CyLib.c ****                 {
1223:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****                 
1226:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1228:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1229:Generated_Source\PSoC4/CyLib.c ****                                             
1230:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1231:Generated_Source\PSoC4/CyLib.c ****                 {
1232:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1233:Generated_Source\PSoC4/CyLib.c ****                 }
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1238:Generated_Source\PSoC4/CyLib.c ****                 
1239:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1240:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1241:Generated_Source\PSoC4/CyLib.c ****                 
1242:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1243:Generated_Source\PSoC4/CyLib.c ****                 {
1244:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1245:Generated_Source\PSoC4/CyLib.c ****                 }
1246:Generated_Source\PSoC4/CyLib.c ****                 
1247:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1249:Generated_Source\PSoC4/CyLib.c ****                 
1250:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1251:Generated_Source\PSoC4/CyLib.c ****                 {
1252:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 36


1253:Generated_Source\PSoC4/CyLib.c ****                 }
1254:Generated_Source\PSoC4/CyLib.c ****                 
1255:Generated_Source\PSoC4/CyLib.c ****             }
1256:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1258:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1259:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1260:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1261:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1263:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1266:Generated_Source\PSoC4/CyLib.c ****         {
1267:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1270:Generated_Source\PSoC4/CyLib.c ****             {
1271:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1274:Generated_Source\PSoC4/CyLib.c ****                 {
1275:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1276:Generated_Source\PSoC4/CyLib.c ****                     break;
1277:Generated_Source\PSoC4/CyLib.c ****                 }
1278:Generated_Source\PSoC4/CyLib.c ****             }
1279:Generated_Source\PSoC4/CyLib.c **** 
1280:Generated_Source\PSoC4/CyLib.c ****         }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1283:Generated_Source\PSoC4/CyLib.c ****     }
1284:Generated_Source\PSoC4/CyLib.c **** 
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1289:Generated_Source\PSoC4/CyLib.c ****     *
1290:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1293:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1294:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1297:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1298:Generated_Source\PSoC4/CyLib.c ****     {
1299:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1300:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1301:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1302:Generated_Source\PSoC4/CyLib.c **** 
1303:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1305:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1307:Generated_Source\PSoC4/CyLib.c ****         #else
1308:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1309:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 37


1310:Generated_Source\PSoC4/CyLib.c ****     }
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1316:Generated_Source\PSoC4/CyLib.c ****     *
1317:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1318:Generated_Source\PSoC4/CyLib.c ****     *
1319:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1320:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is 
1323:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1324:Generated_Source\PSoC4/CyLib.c ****     *
1325:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1326:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1327:Generated_Source\PSoC4/CyLib.c ****     *
1328:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO 
1329:Generated_Source\PSoC4/CyLib.c ****     * is running.
1330:Generated_Source\PSoC4/CyLib.c ****     *
1331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1333:Generated_Source\PSoC4/CyLib.c ****     {
1334:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1337:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1338:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1339:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1340:Generated_Source\PSoC4/CyLib.c **** 
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1342:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1343:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1344:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1345:Generated_Source\PSoC4/CyLib.c ****         #else
1346:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1347:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1350:Generated_Source\PSoC4/CyLib.c ****     }
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1353:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1354:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1355:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1358:Generated_Source\PSoC4/CyLib.c ****         *
1359:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1360:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1362:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1363:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1364:Generated_Source\PSoC4/CyLib.c ****         *
1365:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1366:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 38


1367:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1368:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1369:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1370:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1373:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1374:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1375:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1376:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1377:Generated_Source\PSoC4/CyLib.c ****         *
1378:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1379:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1380:Generated_Source\PSoC4/CyLib.c ****         {
1381:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1382:Generated_Source\PSoC4/CyLib.c **** 
1383:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1384:Generated_Source\PSoC4/CyLib.c ****             {
1385:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1386:Generated_Source\PSoC4/CyLib.c **** 
1387:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1388:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****             else
1393:Generated_Source\PSoC4/CyLib.c ****             {
1394:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1395:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1396:Generated_Source\PSoC4/CyLib.c ****             }
1397:Generated_Source\PSoC4/CyLib.c ****         }
1398:Generated_Source\PSoC4/CyLib.c **** 
1399:Generated_Source\PSoC4/CyLib.c ****     #else
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1402:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1403:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1406:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1409:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1410:Generated_Source\PSoC4/CyLib.c ****         *
1411:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1412:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1415:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1416:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1417:Generated_Source\PSoC4/CyLib.c ****         *
1418:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1419:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1422:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1423:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 39


1424:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1425:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1428:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1445:Generated_Source\PSoC4/CyLib.c ****         *
1446:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1447:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         *
1452:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1453:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1454:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1455:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1456:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1457:Generated_Source\PSoC4/CyLib.c ****         *
1458:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1459:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1460:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1461:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1462:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1463:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1464:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1465:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1468:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1469:Generated_Source\PSoC4/CyLib.c ****         {
1470:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1472:Generated_Source\PSoC4/CyLib.c **** 
1473:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1476:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1477:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 40


1481:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1482:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1483:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1484:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1485:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1488:Generated_Source\PSoC4/CyLib.c **** 
1489:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1490:Generated_Source\PSoC4/CyLib.c ****         }
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c **** 
1493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1496:Generated_Source\PSoC4/CyLib.c ****         *
1497:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1498:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1499:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO 
1502:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1505:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1506:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1507:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1508:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1511:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1512:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1513:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1514:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1517:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1518:Generated_Source\PSoC4/CyLib.c ****         *
1519:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1520:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1521:Generated_Source\PSoC4/CyLib.c ****         {
1522:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1525:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1526:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1527:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1528:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c **** 
1533:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1534:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1535:Generated_Source\PSoC4/CyLib.c ****             {
1536:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1537:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 41


1538:Generated_Source\PSoC4/CyLib.c ****             else
1539:Generated_Source\PSoC4/CyLib.c ****             {
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1542:Generated_Source\PSoC4/CyLib.c **** 
1543:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1544:Generated_Source\PSoC4/CyLib.c ****                 {
1545:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1546:Generated_Source\PSoC4/CyLib.c ****                 }
1547:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1548:Generated_Source\PSoC4/CyLib.c ****                 {
1549:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1550:Generated_Source\PSoC4/CyLib.c ****                 }
1551:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1552:Generated_Source\PSoC4/CyLib.c ****                 {
1553:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1554:Generated_Source\PSoC4/CyLib.c ****                 }
1555:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1556:Generated_Source\PSoC4/CyLib.c ****                 {
1557:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1558:Generated_Source\PSoC4/CyLib.c ****                 }
1559:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1560:Generated_Source\PSoC4/CyLib.c ****                 {
1561:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
1563:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c ****                 else
1572:Generated_Source\PSoC4/CyLib.c ****                 {
1573:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1574:Generated_Source\PSoC4/CyLib.c ****                 }
1575:Generated_Source\PSoC4/CyLib.c **** 
1576:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1577:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1580:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1581:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1584:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1585:Generated_Source\PSoC4/CyLib.c ****                 }
1586:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1587:Generated_Source\PSoC4/CyLib.c ****                 {
1588:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1589:Generated_Source\PSoC4/CyLib.c ****                 }
1590:Generated_Source\PSoC4/CyLib.c ****                 else
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 42


1595:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1614:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1619:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1620:Generated_Source\PSoC4/CyLib.c ****                 {
1621:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1622:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c ****                 else
1625:Generated_Source\PSoC4/CyLib.c ****                 {
1626:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1627:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1628:Generated_Source\PSoC4/CyLib.c ****                     */
1629:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1630:Generated_Source\PSoC4/CyLib.c ****                 }
1631:Generated_Source\PSoC4/CyLib.c ****             }
1632:Generated_Source\PSoC4/CyLib.c **** 
1633:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1634:Generated_Source\PSoC4/CyLib.c ****         }
1635:Generated_Source\PSoC4/CyLib.c **** 
1636:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1637:Generated_Source\PSoC4/CyLib.c **** 
1638:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1642:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1643:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1644:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1647:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1648:Generated_Source\PSoC4/CyLib.c ****     *
1649:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1650:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1651:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 43


1652:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1653:Generated_Source\PSoC4/CyLib.c ****     *
1654:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1655:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1656:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1659:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1660:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1661:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1662:Generated_Source\PSoC4/CyLib.c ****     *
1663:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1664:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1665:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1666:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1667:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1668:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1671:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1672:Generated_Source\PSoC4/CyLib.c ****     {
1673:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1674:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1675:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1678:Generated_Source\PSoC4/CyLib.c ****         {
1679:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1682:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1685:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1690:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1691:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1692:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1693:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1694:Generated_Source\PSoC4/CyLib.c **** 
1695:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1696:Generated_Source\PSoC4/CyLib.c ****             {
1697:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1700:Generated_Source\PSoC4/CyLib.c ****                 {
1701:Generated_Source\PSoC4/CyLib.c **** 
1702:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1703:Generated_Source\PSoC4/CyLib.c ****                     {
1704:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1705:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1706:Generated_Source\PSoC4/CyLib.c ****                         break;
1707:Generated_Source\PSoC4/CyLib.c ****                     }
1708:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 44


1709:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1710:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1711:Generated_Source\PSoC4/CyLib.c ****                 }
1712:Generated_Source\PSoC4/CyLib.c ****             }
1713:Generated_Source\PSoC4/CyLib.c ****         }
1714:Generated_Source\PSoC4/CyLib.c ****         else
1715:Generated_Source\PSoC4/CyLib.c ****         {
1716:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1717:Generated_Source\PSoC4/CyLib.c ****         }
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1720:Generated_Source\PSoC4/CyLib.c ****     }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1724:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1725:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1726:Generated_Source\PSoC4/CyLib.c ****     *
1727:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1732:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1733:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1739:Generated_Source\PSoC4/CyLib.c ****     {
1740:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1741:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1742:Generated_Source\PSoC4/CyLib.c **** 
1743:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1744:Generated_Source\PSoC4/CyLib.c **** 
1745:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1748:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1749:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1750:Generated_Source\PSoC4/CyLib.c ****         {
1751:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c **** 
1754:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1757:Generated_Source\PSoC4/CyLib.c ****     }
1758:Generated_Source\PSoC4/CyLib.c **** 
1759:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1760:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1761:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 45


1766:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1775:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1776:Generated_Source\PSoC4/CyLib.c ****     {
1777:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1778:Generated_Source\PSoC4/CyLib.c **** 
1779:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1780:Generated_Source\PSoC4/CyLib.c ****         {
1781:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1782:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1783:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1784:Generated_Source\PSoC4/CyLib.c ****         }
1785:Generated_Source\PSoC4/CyLib.c ****     }
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c **** 
1788:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1789:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1790:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1793:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1794:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1795:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1796:Generated_Source\PSoC4/CyLib.c ****     *
1797:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1798:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1803:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1804:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1807:Generated_Source\PSoC4/CyLib.c ****     * divider.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1812:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1813:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1816:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1817:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1820:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1821:Generated_Source\PSoC4/CyLib.c ****     {
1822:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 46


1823:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1824:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1828:Generated_Source\PSoC4/CyLib.c **** 
1829:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1830:Generated_Source\PSoC4/CyLib.c **** 
1831:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1832:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1833:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1834:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1835:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1836:Generated_Source\PSoC4/CyLib.c ****         {
1837:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1839:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1840:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1844:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1847:Generated_Source\PSoC4/CyLib.c **** 
1848:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1849:Generated_Source\PSoC4/CyLib.c ****         }
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1852:Generated_Source\PSoC4/CyLib.c **** 
1853:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1854:Generated_Source\PSoC4/CyLib.c ****     }
1855:Generated_Source\PSoC4/CyLib.c **** 
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1858:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1859:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1864:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1865:Generated_Source\PSoC4/CyLib.c ****     *
1866:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1867:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1868:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1869:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1874:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1875:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1876:Generated_Source\PSoC4/CyLib.c ****     *
1877:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1878:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1879:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 47


1880:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1881:Generated_Source\PSoC4/CyLib.c ****     *
1882:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1883:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1888:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1889:Generated_Source\PSoC4/CyLib.c ****     {
1890:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1891:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1892:Generated_Source\PSoC4/CyLib.c **** 
1893:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1896:Generated_Source\PSoC4/CyLib.c ****         {
1897:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1898:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1899:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1900:Generated_Source\PSoC4/CyLib.c ****         }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1914:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1918:Generated_Source\PSoC4/CyLib.c ****     {
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1920:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1927:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1932:Generated_Source\PSoC4/CyLib.c ****     }
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c **** 
1935:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 48


1937:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1940:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1945:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1946:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1949:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1952:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1953:Generated_Source\PSoC4/CyLib.c ****     {
1954:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1955:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1956:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1959:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1960:Generated_Source\PSoC4/CyLib.c **** 
1961:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1962:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1964:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1965:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1966:Generated_Source\PSoC4/CyLib.c ****             )
1967:Generated_Source\PSoC4/CyLib.c ****         {
1968:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1969:Generated_Source\PSoC4/CyLib.c ****         }
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1972:Generated_Source\PSoC4/CyLib.c ****     }
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1977:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1978:Generated_Source\PSoC4/CyLib.c ****     *
1979:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1980:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1981:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1982:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1985:Generated_Source\PSoC4/CyLib.c ****     *
1986:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1987:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1988:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1993:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 49


1994:Generated_Source\PSoC4/CyLib.c ****     {
1995:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1996:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1999:Generated_Source\PSoC4/CyLib.c **** 
2000:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2001:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2006:Generated_Source\PSoC4/CyLib.c ****     }
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c **** 
2009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2014:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2015:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2018:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2023:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2024:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2029:Generated_Source\PSoC4/CyLib.c ****     *
2030:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2033:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2034:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2039:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2042:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2043:Generated_Source\PSoC4/CyLib.c ****     *
2044:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2045:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2046:Generated_Source\PSoC4/CyLib.c ****     {
2047:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2049:Generated_Source\PSoC4/CyLib.c **** 
2050:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 50


2051:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2055:Generated_Source\PSoC4/CyLib.c **** 
2056:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2057:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2058:Generated_Source\PSoC4/CyLib.c **** 
2059:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2060:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2066:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2067:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2068:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2069:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2070:Generated_Source\PSoC4/CyLib.c ****         {
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2073:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2074:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2077:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2078:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2081:Generated_Source\PSoC4/CyLib.c ****             {
2082:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2083:Generated_Source\PSoC4/CyLib.c ****                 {
2084:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2087:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2090:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2093:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2096:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2097:Generated_Source\PSoC4/CyLib.c ****                     {
2098:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2099:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2100:Generated_Source\PSoC4/CyLib.c ****                         break;
2101:Generated_Source\PSoC4/CyLib.c ****                     }
2102:Generated_Source\PSoC4/CyLib.c ****                 }
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2106:Generated_Source\PSoC4/CyLib.c ****                 {
2107:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 51


2108:Generated_Source\PSoC4/CyLib.c ****                     {
2109:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2110:Generated_Source\PSoC4/CyLib.c ****                     }
2111:Generated_Source\PSoC4/CyLib.c ****                 }
2112:Generated_Source\PSoC4/CyLib.c ****             }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         }
2115:Generated_Source\PSoC4/CyLib.c **** 
2116:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2117:Generated_Source\PSoC4/CyLib.c ****     }
2118:Generated_Source\PSoC4/CyLib.c **** 
2119:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2120:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2121:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2122:Generated_Source\PSoC4/CyLib.c ****     *
2123:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2124:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2127:Generated_Source\PSoC4/CyLib.c ****     *
2128:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2129:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2130:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2131:Generated_Source\PSoC4/CyLib.c ****     *
2132:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L 
2135:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2139:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2140:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2141:Generated_Source\PSoC4/CyLib.c ****     *
2142:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2143:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2144:Generated_Source\PSoC4/CyLib.c ****     {
2145:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2146:Generated_Source\PSoC4/CyLib.c ****         
2147:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2148:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2149:Generated_Source\PSoC4/CyLib.c ****         #else
2150:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2151:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2156:Generated_Source\PSoC4/CyLib.c ****         {
2157:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****             #else
2162:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2163:Generated_Source\PSoC4/CyLib.c ****                 
2164:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 52


2165:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2166:Generated_Source\PSoC4/CyLib.c ****                 
2167:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2168:Generated_Source\PSoC4/CyLib.c ****                 {
2169:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2170:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2171:Generated_Source\PSoC4/CyLib.c ****                 }
2172:Generated_Source\PSoC4/CyLib.c ****                 
2173:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2174:Generated_Source\PSoC4/CyLib.c **** 
2175:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2176:Generated_Source\PSoC4/CyLib.c ****         }
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2179:Generated_Source\PSoC4/CyLib.c ****     }
2180:Generated_Source\PSoC4/CyLib.c **** 
2181:Generated_Source\PSoC4/CyLib.c ****     
2182:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2183:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2184:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2189:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2192:Generated_Source\PSoC4/CyLib.c ****     *
2193:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2194:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2195:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2196:Generated_Source\PSoC4/CyLib.c ****     *
2197:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2200:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2201:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2202:Generated_Source\PSoC4/CyLib.c ****     *
2203:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2204:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2205:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2206:Generated_Source\PSoC4/CyLib.c ****     *
2207:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2209:Generated_Source\PSoC4/CyLib.c ****     {
2210:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2211:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2212:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2213:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2214:Generated_Source\PSoC4/CyLib.c **** 
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2221:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 53


2222:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2223:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2226:Generated_Source\PSoC4/CyLib.c **** 
2227:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2228:Generated_Source\PSoC4/CyLib.c ****         }
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c ****     
2235:Generated_Source\PSoC4/CyLib.c ****     
2236:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2237:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2239:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****         *
2241:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt 
2242:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of 
2243:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2244:Generated_Source\PSoC4/CyLib.c ****         *
2245:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****         *
2247:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2248:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2249:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2250:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2251:Generated_Source\PSoC4/CyLib.c ****         *
2252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2254:Generated_Source\PSoC4/CyLib.c ****         {
2255:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2256:Generated_Source\PSoC4/CyLib.c ****         }
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         
2259:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2260:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2261:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2262:Generated_Source\PSoC4/CyLib.c ****         *
2263:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2264:Generated_Source\PSoC4/CyLib.c ****         *
2265:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2266:Generated_Source\PSoC4/CyLib.c ****         *
2267:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2268:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2269:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2270:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2271:Generated_Source\PSoC4/CyLib.c ****         *
2272:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2273:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2274:Generated_Source\PSoC4/CyLib.c ****         {
2275:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2276:Generated_Source\PSoC4/CyLib.c ****         }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 54


2279:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2281:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c ****         *
2283:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt. 
2284:Generated_Source\PSoC4/CyLib.c ****         *
2285:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2286:Generated_Source\PSoC4/CyLib.c ****         *
2287:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2288:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2289:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2290:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2291:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2292:Generated_Source\PSoC4/CyLib.c ****         *
2293:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2294:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2295:Generated_Source\PSoC4/CyLib.c ****         {
2296:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2297:Generated_Source\PSoC4/CyLib.c ****         }
2298:Generated_Source\PSoC4/CyLib.c ****         
2299:Generated_Source\PSoC4/CyLib.c ****         
2300:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2301:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2302:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLib.c ****         *
2304:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2307:Generated_Source\PSoC4/CyLib.c ****         *
2308:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2309:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2310:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2311:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2312:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2313:Generated_Source\PSoC4/CyLib.c ****         *
2314:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2315:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2316:Generated_Source\PSoC4/CyLib.c ****         {
2317:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2318:Generated_Source\PSoC4/CyLib.c ****         }
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****         
2321:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2323:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c ****         *
2325:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2326:Generated_Source\PSoC4/CyLib.c ****         *
2327:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2328:Generated_Source\PSoC4/CyLib.c ****         *
2329:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2330:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2331:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2332:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2333:Generated_Source\PSoC4/CyLib.c ****         *
2334:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2335:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 55


2336:Generated_Source\PSoC4/CyLib.c ****         {
2337:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2338:Generated_Source\PSoC4/CyLib.c ****         }
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****         
2341:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2342:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2343:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2344:Generated_Source\PSoC4/CyLib.c ****         *
2345:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2348:Generated_Source\PSoC4/CyLib.c ****         *
2349:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2350:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2351:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2352:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2353:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2354:Generated_Source\PSoC4/CyLib.c ****         *
2355:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2356:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2357:Generated_Source\PSoC4/CyLib.c ****         {
2358:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2359:Generated_Source\PSoC4/CyLib.c ****         }
2360:Generated_Source\PSoC4/CyLib.c **** 
2361:Generated_Source\PSoC4/CyLib.c ****         
2362:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2363:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2364:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2365:Generated_Source\PSoC4/CyLib.c ****         *
2366:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2369:Generated_Source\PSoC4/CyLib.c ****         *
2370:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/          
2371:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2372:Generated_Source\PSoC4/CyLib.c ****         {
2373:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2374:Generated_Source\PSoC4/CyLib.c ****         }
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c ****         
2377:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2378:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2379:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2384:Generated_Source\PSoC4/CyLib.c ****         *
2385:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2386:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2387:Generated_Source\PSoC4/CyLib.c ****         {
2388:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2389:Generated_Source\PSoC4/CyLib.c ****         }
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****         
2392:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 56


2393:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2394:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2395:Generated_Source\PSoC4/CyLib.c ****         *
2396:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2397:Generated_Source\PSoC4/CyLib.c ****         *
2398:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2399:Generated_Source\PSoC4/CyLib.c ****         *
2400:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2401:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable 
2402:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2403:Generated_Source\PSoC4/CyLib.c ****         *
2404:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2405:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2406:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2407:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2413:Generated_Source\PSoC4/CyLib.c ****             
2414:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2415:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2416:Generated_Source\PSoC4/CyLib.c ****             
2417:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2418:Generated_Source\PSoC4/CyLib.c ****         }
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****         
2421:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2422:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2423:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2424:Generated_Source\PSoC4/CyLib.c ****         *
2425:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2426:Generated_Source\PSoC4/CyLib.c ****         *
2427:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2428:Generated_Source\PSoC4/CyLib.c ****         *
2429:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2430:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles, 
2431:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored 
2432:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2433:Generated_Source\PSoC4/CyLib.c ****         *
2434:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2435:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time) 
2436:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event 
2437:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all 
2438:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2439:Generated_Source\PSoC4/CyLib.c ****         *
2440:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/ 
2441:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2442:Generated_Source\PSoC4/CyLib.c ****         {
2443:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2444:Generated_Source\PSoC4/CyLib.c ****             
2445:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2446:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2447:Generated_Source\PSoC4/CyLib.c ****             
2448:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2449:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 57


2450:Generated_Source\PSoC4/CyLib.c **** 
2451:Generated_Source\PSoC4/CyLib.c ****         
2452:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2453:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2454:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2455:Generated_Source\PSoC4/CyLib.c ****         *
2456:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2459:Generated_Source\PSoC4/CyLib.c ****         *
2460:Generated_Source\PSoC4/CyLib.c ****         * \return 
2461:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2462:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2463:Generated_Source\PSoC4/CyLib.c ****         *
2464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2465:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2466:Generated_Source\PSoC4/CyLib.c ****         {
2467:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2468:Generated_Source\PSoC4/CyLib.c ****         }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****         
2471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c ****         *
2475:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2476:Generated_Source\PSoC4/CyLib.c ****         *
2477:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2480:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored 
2481:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2482:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with 
2483:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2484:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2485:Generated_Source\PSoC4/CyLib.c ****         *
2486:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2487:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2488:Generated_Source\PSoC4/CyLib.c ****         {
2489:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2490:Generated_Source\PSoC4/CyLib.c ****         }
2491:Generated_Source\PSoC4/CyLib.c **** 
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2496:Generated_Source\PSoC4/CyLib.c ****         *
2497:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2498:Generated_Source\PSoC4/CyLib.c ****         *
2499:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2500:Generated_Source\PSoC4/CyLib.c ****         *
2501:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2502:Generated_Source\PSoC4/CyLib.c ****         *
2503:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2504:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2505:Generated_Source\PSoC4/CyLib.c ****         {
2506:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 58


2507:Generated_Source\PSoC4/CyLib.c ****         }
2508:Generated_Source\PSoC4/CyLib.c **** 
2509:Generated_Source\PSoC4/CyLib.c ****         
2510:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2511:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2512:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches 
2515:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count 
2516:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down. 
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless 
2519:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using 
2520:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2521:Generated_Source\PSoC4/CyLib.c ****         *
2522:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2523:Generated_Source\PSoC4/CyLib.c ****         *
2524:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2525:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay 
2526:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using 
2527:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2530:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2531:Generated_Source\PSoC4/CyLib.c ****         {
2532:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2533:Generated_Source\PSoC4/CyLib.c ****         }
2534:Generated_Source\PSoC4/CyLib.c ****         
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2537:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2538:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor 
2541:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO. 
2542:Generated_Source\PSoC4/CyLib.c ****         *
2543:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2544:Generated_Source\PSoC4/CyLib.c ****         *
2545:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2546:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2547:Generated_Source\PSoC4/CyLib.c ****         {
2548:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2549:Generated_Source\PSoC4/CyLib.c ****         }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****         
2552:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2554:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c ****         *
2556:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value. 
2557:Generated_Source\PSoC4/CyLib.c ****         *
2558:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2559:Generated_Source\PSoC4/CyLib.c ****         *
2560:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2561:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256. 
2562:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2563:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 59


2564:Generated_Source\PSoC4/CyLib.c ****         *
2565:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2566:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2567:Generated_Source\PSoC4/CyLib.c ****         {
2568:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2569:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2570:Generated_Source\PSoC4/CyLib.c ****         }
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2573:Generated_Source\PSoC4/CyLib.c ****     
2574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2580:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2581:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2582:Generated_Source\PSoC4/CyLib.c ****     *
2583:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2584:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2585:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2586:Generated_Source\PSoC4/CyLib.c ****     *
2587:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2588:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2589:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2590:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2591:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2592:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2593:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2594:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2595:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2596:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2597:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2598:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2599:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2600:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2601:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2602:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2603:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2604:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2605:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2606:Generated_Source\PSoC4/CyLib.c ****     *
2607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2609:Generated_Source\PSoC4/CyLib.c ****     {
 735              		.loc 1 2609 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 82B0     		sub	sp, sp, #8
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 60


 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
2610:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2611:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 748              		.loc 1 2611 0
 749 0008 144B     		ldr	r3, .L38
 750 000a 144A     		ldr	r2, .L38
 751 000c 1268     		ldr	r2, [r2]
 752 000e 0221     		movs	r1, #2
 753 0010 8A43     		bics	r2, r1
 754 0012 1A60     		str	r2, [r3]
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2614:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 755              		.loc 1 2614 0
 756 0014 124B     		ldr	r3, .L38+4
 757 0016 124A     		ldr	r2, .L38+4
 758 0018 1268     		ldr	r2, [r2]
 759 001a 1E21     		movs	r1, #30
 760 001c 8A43     		bics	r2, r1
 761 001e 1100     		movs	r1, r2
2615:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 762              		.loc 1 2615 0
 763 0020 7A68     		ldr	r2, [r7, #4]
 764 0022 5200     		lsls	r2, r2, #1
 765 0024 1E20     		movs	r0, #30
 766 0026 0240     		ands	r2, r0
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 767              		.loc 1 2614 0
 768 0028 0A43     		orrs	r2, r1
 769 002a 1A60     		str	r2, [r3]
2616:Generated_Source\PSoC4/CyLib.c **** 
2617:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2618:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 770              		.loc 1 2618 0
 771 002c 0C4B     		ldr	r3, .L38+4
 772 002e 0C4A     		ldr	r2, .L38+4
 773 0030 1268     		ldr	r2, [r2]
 774 0032 0121     		movs	r1, #1
 775 0034 0A43     		orrs	r2, r1
 776 0036 1A60     		str	r2, [r3]
2619:Generated_Source\PSoC4/CyLib.c **** 
2620:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2621:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 777              		.loc 1 2621 0
 778 0038 FA23     		movs	r3, #250
 779 003a 9B00     		lsls	r3, r3, #2
 780 003c 1800     		movs	r0, r3
 781 003e FFF7FEFF 		bl	CyDelayUs
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2624:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 782              		.loc 1 2624 0
 783 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2627:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 61


 784              		.loc 1 2627 0
 785 0046 054B     		ldr	r3, .L38
 786 0048 044A     		ldr	r2, .L38
 787 004a 1268     		ldr	r2, [r2]
 788 004c 0221     		movs	r1, #2
 789 004e 0A43     		orrs	r2, r1
 790 0050 1A60     		str	r2, [r3]
2628:Generated_Source\PSoC4/CyLib.c ****     }
 791              		.loc 1 2628 0
 792 0052 C046     		nop
 793 0054 BD46     		mov	sp, r7
 794 0056 02B0     		add	sp, sp, #8
 795              		@ sp needed
 796 0058 80BD     		pop	{r7, pc}
 797              	.L39:
 798 005a C046     		.align	2
 799              	.L38:
 800 005c 08000B40 		.word	1074462728
 801 0060 18000B40 		.word	1074462744
 802              		.cfi_endproc
 803              	.LFE7:
 804              		.size	CySysLvdEnable, .-CySysLvdEnable
 805              		.section	.text.CySysLvdDisable,"ax",%progbits
 806              		.align	2
 807              		.global	CySysLvdDisable
 808              		.code	16
 809              		.thumb_func
 810              		.type	CySysLvdDisable, %function
 811              	CySysLvdDisable:
 812              	.LFB8:
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2632:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2633:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2634:Generated_Source\PSoC4/CyLib.c ****     *
2635:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2638:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2639:Generated_Source\PSoC4/CyLib.c ****     {
 813              		.loc 1 2639 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 823              		.loc 1 2640 0
 824 0004 074B     		ldr	r3, .L41
 825 0006 074A     		ldr	r2, .L41
 826 0008 1268     		ldr	r2, [r2]
 827 000a 0221     		movs	r1, #2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 62


 828 000c 8A43     		bics	r2, r1
 829 000e 1A60     		str	r2, [r3]
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 830              		.loc 1 2641 0
 831 0010 054B     		ldr	r3, .L41+4
 832 0012 054A     		ldr	r2, .L41+4
 833 0014 1268     		ldr	r2, [r2]
 834 0016 0121     		movs	r1, #1
 835 0018 8A43     		bics	r2, r1
 836 001a 1A60     		str	r2, [r3]
2642:Generated_Source\PSoC4/CyLib.c ****     }
 837              		.loc 1 2642 0
 838 001c C046     		nop
 839 001e BD46     		mov	sp, r7
 840              		@ sp needed
 841 0020 80BD     		pop	{r7, pc}
 842              	.L42:
 843 0022 C046     		.align	2
 844              	.L41:
 845 0024 08000B40 		.word	1074462728
 846 0028 18000B40 		.word	1074462744
 847              		.cfi_endproc
 848              	.LFE8:
 849              		.size	CySysLvdDisable, .-CySysLvdDisable
 850              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 851              		.align	2
 852              		.global	CySysLvdGetInterruptSource
 853              		.code	16
 854              		.thumb_func
 855              		.type	CySysLvdGetInterruptSource, %function
 856              	CySysLvdGetInterruptSource:
 857              	.LFB9:
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2647:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2648:Generated_Source\PSoC4/CyLib.c ****     *
2649:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2650:Generated_Source\PSoC4/CyLib.c ****     *
2651:Generated_Source\PSoC4/CyLib.c ****     * \return
2652:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2657:Generated_Source\PSoC4/CyLib.c ****     {
 858              		.loc 1 2657 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 63


2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 868              		.loc 1 2658 0
 869 0004 034B     		ldr	r3, .L45
 870 0006 1B68     		ldr	r3, [r3]
 871 0008 0222     		movs	r2, #2
 872 000a 1340     		ands	r3, r2
2659:Generated_Source\PSoC4/CyLib.c ****     }
 873              		.loc 1 2659 0
 874 000c 1800     		movs	r0, r3
 875 000e BD46     		mov	sp, r7
 876              		@ sp needed
 877 0010 80BD     		pop	{r7, pc}
 878              	.L46:
 879 0012 C046     		.align	2
 880              	.L45:
 881 0014 04000B40 		.word	1074462724
 882              		.cfi_endproc
 883              	.LFE9:
 884              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 885              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 886              		.align	2
 887              		.global	CySysLvdClearInterrupt
 888              		.code	16
 889              		.thumb_func
 890              		.type	CySysLvdClearInterrupt, %function
 891              	CySysLvdClearInterrupt:
 892              	.LFB10:
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2663:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2664:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2665:Generated_Source\PSoC4/CyLib.c ****     *
2666:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     * \return
2669:Generated_Source\PSoC4/CyLib.c ****     *  None
2670:Generated_Source\PSoC4/CyLib.c ****     *
2671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2672:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2673:Generated_Source\PSoC4/CyLib.c ****     {
 893              		.loc 1 2673 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 903              		.loc 1 2674 0
 904 0004 024B     		ldr	r3, .L48
 905 0006 0222     		movs	r2, #2
 906 0008 1A60     		str	r2, [r3]
2675:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 64


 907              		.loc 1 2675 0
 908 000a C046     		nop
 909 000c BD46     		mov	sp, r7
 910              		@ sp needed
 911 000e 80BD     		pop	{r7, pc}
 912              	.L49:
 913              		.align	2
 914              	.L48:
 915 0010 04000B40 		.word	1074462724
 916              		.cfi_endproc
 917              	.LFE10:
 918              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 919              		.section	.text.CySysGetResetReason,"ax",%progbits
 920              		.align	2
 921              		.global	CySysGetResetReason
 922              		.code	16
 923              		.thumb_func
 924              		.type	CySysGetResetReason, %function
 925              	CySysGetResetReason:
 926              	.LFB11:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2685:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2686:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2687:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2690:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2691:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2692:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \return
2695:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2699:Generated_Source\PSoC4/CyLib.c **** {
 927              		.loc 1 2699 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 16
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 84B0     		sub	sp, sp, #16
 936              		.cfi_def_cfa_offset 24
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 65


2700:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 940              		.loc 1 2702 0
 941 0008 7B68     		ldr	r3, [r7, #4]
 942 000a 1922     		movs	r2, #25
 943 000c 1340     		ands	r3, r2
 944 000e 7B60     		str	r3, [r7, #4]
2703:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 945              		.loc 1 2703 0
 946 0010 064B     		ldr	r3, .L52
 947 0012 1B68     		ldr	r3, [r3]
 948 0014 1922     		movs	r2, #25
 949 0016 1340     		ands	r3, r2
 950 0018 FB60     		str	r3, [r7, #12]
2704:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 951              		.loc 1 2705 0
 952 001a 044B     		ldr	r3, .L52
 953 001c 7A68     		ldr	r2, [r7, #4]
 954 001e 1A60     		str	r2, [r3]
2706:Generated_Source\PSoC4/CyLib.c **** 
2707:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 955              		.loc 1 2707 0
 956 0020 FB68     		ldr	r3, [r7, #12]
2708:Generated_Source\PSoC4/CyLib.c **** }
 957              		.loc 1 2708 0
 958 0022 1800     		movs	r0, r3
 959 0024 BD46     		mov	sp, r7
 960 0026 04B0     		add	sp, sp, #16
 961              		@ sp needed
 962 0028 80BD     		pop	{r7, pc}
 963              	.L53:
 964 002a C046     		.align	2
 965              	.L52:
 966 002c 00030B40 		.word	1074463488
 967              		.cfi_endproc
 968              	.LFE11:
 969              		.size	CySysGetResetReason, .-CySysGetResetReason
 970              		.section	.text.CyDisableInts,"ax",%progbits
 971              		.align	2
 972              		.global	CyDisableInts
 973              		.code	16
 974              		.thumb_func
 975              		.type	CyDisableInts, %function
 976              	CyDisableInts:
 977              	.LFB12:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \return
2718:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 66


2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 978              		.loc 1 2722 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 82B0     		sub	sp, sp, #8
 987              		.cfi_def_cfa_offset 16
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2726:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 990              		.loc 1 2726 0
 991 0006 064B     		ldr	r3, .L56
 992 0008 1B68     		ldr	r3, [r3]
 993 000a 7B60     		str	r3, [r7, #4]
2727:Generated_Source\PSoC4/CyLib.c **** 
2728:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2729:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 994              		.loc 1 2729 0
 995 000c 044B     		ldr	r3, .L56
 996 000e 0122     		movs	r2, #1
 997 0010 5242     		rsbs	r2, r2, #0
 998 0012 1A60     		str	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 999              		.loc 1 2731 0
 1000 0014 7B68     		ldr	r3, [r7, #4]
2732:Generated_Source\PSoC4/CyLib.c **** }
 1001              		.loc 1 2732 0
 1002 0016 1800     		movs	r0, r3
 1003 0018 BD46     		mov	sp, r7
 1004 001a 02B0     		add	sp, sp, #8
 1005              		@ sp needed
 1006 001c 80BD     		pop	{r7, pc}
 1007              	.L57:
 1008 001e C046     		.align	2
 1009              	.L56:
 1010 0020 80E100E0 		.word	-536813184
 1011              		.cfi_endproc
 1012              	.LFE12:
 1013              		.size	CyDisableInts, .-CyDisableInts
 1014              		.section	.text.CyEnableInts,"ax",%progbits
 1015              		.align	2
 1016              		.global	CyEnableInts
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CyEnableInts, %function
 1020              	CyEnableInts:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 67


 1021              	.LFB13:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1022              		.loc 1 2745 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 8
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 82B0     		sub	sp, sp, #8
 1031              		.cfi_def_cfa_offset 16
 1032 0004 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
 1034 0006 7860     		str	r0, [r7, #4]
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1035              		.loc 1 2746 0
 1036 0008 034B     		ldr	r3, .L59
 1037 000a 7A68     		ldr	r2, [r7, #4]
 1038 000c 1A60     		str	r2, [r3]
2747:Generated_Source\PSoC4/CyLib.c **** }
 1039              		.loc 1 2747 0
 1040 000e C046     		nop
 1041 0010 BD46     		mov	sp, r7
 1042 0012 02B0     		add	sp, sp, #8
 1043              		@ sp needed
 1044 0014 80BD     		pop	{r7, pc}
 1045              	.L60:
 1046 0016 C046     		.align	2
 1047              	.L59:
 1048 0018 00E100E0 		.word	-536813312
 1049              		.cfi_endproc
 1050              	.LFE13:
 1051              		.size	CyEnableInts, .-CyEnableInts
 1052              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1053              		.align	2
 1054              		.global	CyIntSetSysVector
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CyIntSetSysVector, %function
 1058              	CyIntSetSysVector:
 1059              	.LFB14:
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 68


2751:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2752:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2753:Generated_Source\PSoC4/CyLib.c **** *
2754:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2755:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2756:Generated_Source\PSoC4/CyLib.c **** *
2757:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2758:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2759:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2760:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2761:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2762:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2770:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 2770 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 16
 1063              		@ frame_needed = 1, uses_anonymous_args = 0
 1064 0000 80B5     		push	{r7, lr}
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 7, -8
 1067              		.cfi_offset 14, -4
 1068 0002 84B0     		sub	sp, sp, #16
 1069              		.cfi_def_cfa_offset 24
 1070 0004 00AF     		add	r7, sp, #0
 1071              		.cfi_def_cfa_register 7
 1072 0006 0200     		movs	r2, r0
 1073 0008 3960     		str	r1, [r7]
 1074 000a FB1D     		adds	r3, r7, #7
 1075 000c 1A70     		strb	r2, [r3]
2771:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2772:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1076              		.loc 1 2772 0
 1077 000e 8023     		movs	r3, #128
 1078 0010 9B05     		lsls	r3, r3, #22
 1079 0012 FB60     		str	r3, [r7, #12]
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1080              		.loc 1 2774 0
 1081 0014 FB1D     		adds	r3, r7, #7
 1082 0016 1B78     		ldrb	r3, [r3]
 1083 0018 0F2B     		cmp	r3, #15
 1084 001a 02D9     		bls	.L62
 1085              		.loc 1 2774 0 is_stmt 0 discriminator 1
 1086 001c 0020     		movs	r0, #0
 1087 001e FFF7FEFF 		bl	CyHalt
 1088              	.L62:
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2777:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1089              		.loc 1 2777 0 is_stmt 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 69


 1090 0022 FB1D     		adds	r3, r7, #7
 1091 0024 1B78     		ldrb	r3, [r3]
 1092 0026 9B00     		lsls	r3, r3, #2
 1093 0028 FA68     		ldr	r2, [r7, #12]
 1094 002a D318     		adds	r3, r2, r3
 1095 002c 1B68     		ldr	r3, [r3]
 1096 002e BB60     		str	r3, [r7, #8]
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2780:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1097              		.loc 1 2780 0
 1098 0030 FB1D     		adds	r3, r7, #7
 1099 0032 1B78     		ldrb	r3, [r3]
 1100 0034 9B00     		lsls	r3, r3, #2
 1101 0036 FA68     		ldr	r2, [r7, #12]
 1102 0038 D318     		adds	r3, r2, r3
 1103 003a 3A68     		ldr	r2, [r7]
 1104 003c 1A60     		str	r2, [r3]
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1105              		.loc 1 2782 0
 1106 003e BB68     		ldr	r3, [r7, #8]
2783:Generated_Source\PSoC4/CyLib.c **** }
 1107              		.loc 1 2783 0
 1108 0040 1800     		movs	r0, r3
 1109 0042 BD46     		mov	sp, r7
 1110 0044 04B0     		add	sp, sp, #16
 1111              		@ sp needed
 1112 0046 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE14:
 1115              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1116              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1117              		.align	2
 1118              		.global	CyIntGetSysVector
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CyIntGetSysVector, %function
 1122              	CyIntGetSysVector:
 1123              	.LFB15:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c **** 
2786:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2787:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2788:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLib.c **** *
2790:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2791:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2794:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2796:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2797:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2798:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2799:Generated_Source\PSoC4/CyLib.c **** *
2800:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 70


2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2804:Generated_Source\PSoC4/CyLib.c **** {
 1124              		.loc 1 2804 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 16
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 80B5     		push	{r7, lr}
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 84B0     		sub	sp, sp, #16
 1133              		.cfi_def_cfa_offset 24
 1134 0004 00AF     		add	r7, sp, #0
 1135              		.cfi_def_cfa_register 7
 1136 0006 0200     		movs	r2, r0
 1137 0008 FB1D     		adds	r3, r7, #7
 1138 000a 1A70     		strb	r2, [r3]
2805:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1139              		.loc 1 2805 0
 1140 000c 8023     		movs	r3, #128
 1141 000e 9B05     		lsls	r3, r3, #22
 1142 0010 FB60     		str	r3, [r7, #12]
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1143              		.loc 1 2807 0
 1144 0012 FB1D     		adds	r3, r7, #7
 1145 0014 1B78     		ldrb	r3, [r3]
 1146 0016 0F2B     		cmp	r3, #15
 1147 0018 02D9     		bls	.L65
 1148              		.loc 1 2807 0 is_stmt 0 discriminator 1
 1149 001a 0020     		movs	r0, #0
 1150 001c FFF7FEFF 		bl	CyHalt
 1151              	.L65:
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1152              		.loc 1 2809 0 is_stmt 1
 1153 0020 FB1D     		adds	r3, r7, #7
 1154 0022 1B78     		ldrb	r3, [r3]
 1155 0024 9B00     		lsls	r3, r3, #2
 1156 0026 FA68     		ldr	r2, [r7, #12]
 1157 0028 D318     		adds	r3, r2, r3
 1158 002a 1B68     		ldr	r3, [r3]
2810:Generated_Source\PSoC4/CyLib.c **** }
 1159              		.loc 1 2810 0
 1160 002c 1800     		movs	r0, r3
 1161 002e BD46     		mov	sp, r7
 1162 0030 04B0     		add	sp, sp, #16
 1163              		@ sp needed
 1164 0032 80BD     		pop	{r7, pc}
 1165              		.cfi_endproc
 1166              	.LFE15:
 1167              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1168              		.section	.text.CyIntSetVector,"ax",%progbits
 1169              		.align	2
 1170              		.global	CyIntSetVector
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 71


 1171              		.code	16
 1172              		.thumb_func
 1173              		.type	CyIntSetVector, %function
 1174              	CyIntSetVector:
 1175              	.LFB16:
2811:Generated_Source\PSoC4/CyLib.c **** 
2812:Generated_Source\PSoC4/CyLib.c **** 
2813:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2814:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2815:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2818:Generated_Source\PSoC4/CyLib.c **** *
2819:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2820:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2825:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2826:Generated_Source\PSoC4/CyLib.c **** {
 1176              		.loc 1 2826 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 16
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180 0000 80B5     		push	{r7, lr}
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 84B0     		sub	sp, sp, #16
 1185              		.cfi_def_cfa_offset 24
 1186 0004 00AF     		add	r7, sp, #0
 1187              		.cfi_def_cfa_register 7
 1188 0006 0200     		movs	r2, r0
 1189 0008 3960     		str	r1, [r7]
 1190 000a FB1D     		adds	r3, r7, #7
 1191 000c 1A70     		strb	r2, [r3]
2827:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2828:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1192              		.loc 1 2828 0
 1193 000e 8023     		movs	r3, #128
 1194 0010 9B05     		lsls	r3, r3, #22
 1195 0012 FB60     		str	r3, [r7, #12]
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1196              		.loc 1 2830 0
 1197 0014 FB1D     		adds	r3, r7, #7
 1198 0016 1B78     		ldrb	r3, [r3]
 1199 0018 1F2B     		cmp	r3, #31
 1200 001a 02D9     		bls	.L68
 1201              		.loc 1 2830 0 is_stmt 0 discriminator 1
 1202 001c 0020     		movs	r0, #0
 1203 001e FFF7FEFF 		bl	CyHalt
 1204              	.L68:
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2833:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 72


 1205              		.loc 1 2833 0 is_stmt 1
 1206 0022 FB1D     		adds	r3, r7, #7
 1207 0024 1B78     		ldrb	r3, [r3]
 1208 0026 1033     		adds	r3, r3, #16
 1209 0028 9B00     		lsls	r3, r3, #2
 1210 002a FA68     		ldr	r2, [r7, #12]
 1211 002c D318     		adds	r3, r2, r3
 1212 002e 1B68     		ldr	r3, [r3]
 1213 0030 BB60     		str	r3, [r7, #8]
2834:Generated_Source\PSoC4/CyLib.c **** 
2835:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2836:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1214              		.loc 1 2836 0
 1215 0032 FB1D     		adds	r3, r7, #7
 1216 0034 1B78     		ldrb	r3, [r3]
 1217 0036 1033     		adds	r3, r3, #16
 1218 0038 9B00     		lsls	r3, r3, #2
 1219 003a FA68     		ldr	r2, [r7, #12]
 1220 003c D318     		adds	r3, r2, r3
 1221 003e 3A68     		ldr	r2, [r7]
 1222 0040 1A60     		str	r2, [r3]
2837:Generated_Source\PSoC4/CyLib.c **** 
2838:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1223              		.loc 1 2838 0
 1224 0042 BB68     		ldr	r3, [r7, #8]
2839:Generated_Source\PSoC4/CyLib.c **** }
 1225              		.loc 1 2839 0
 1226 0044 1800     		movs	r0, r3
 1227 0046 BD46     		mov	sp, r7
 1228 0048 04B0     		add	sp, sp, #16
 1229              		@ sp needed
 1230 004a 80BD     		pop	{r7, pc}
 1231              		.cfi_endproc
 1232              	.LFE16:
 1233              		.size	CyIntSetVector, .-CyIntSetVector
 1234              		.section	.text.CyIntGetVector,"ax",%progbits
 1235              		.align	2
 1236              		.global	CyIntGetVector
 1237              		.code	16
 1238              		.thumb_func
 1239              		.type	CyIntGetVector, %function
 1240              	CyIntGetVector:
 1241              	.LFB17:
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2853:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 73


2854:Generated_Source\PSoC4/CyLib.c **** {
 1242              		.loc 1 2854 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 84B0     		sub	sp, sp, #16
 1251              		.cfi_def_cfa_offset 24
 1252 0004 00AF     		add	r7, sp, #0
 1253              		.cfi_def_cfa_register 7
 1254 0006 0200     		movs	r2, r0
 1255 0008 FB1D     		adds	r3, r7, #7
 1256 000a 1A70     		strb	r2, [r3]
2855:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1257              		.loc 1 2855 0
 1258 000c 8023     		movs	r3, #128
 1259 000e 9B05     		lsls	r3, r3, #22
 1260 0010 FB60     		str	r3, [r7, #12]
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1261              		.loc 1 2857 0
 1262 0012 FB1D     		adds	r3, r7, #7
 1263 0014 1B78     		ldrb	r3, [r3]
 1264 0016 1F2B     		cmp	r3, #31
 1265 0018 02D9     		bls	.L71
 1266              		.loc 1 2857 0 is_stmt 0 discriminator 1
 1267 001a 0020     		movs	r0, #0
 1268 001c FFF7FEFF 		bl	CyHalt
 1269              	.L71:
2858:Generated_Source\PSoC4/CyLib.c **** 
2859:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1270              		.loc 1 2859 0 is_stmt 1
 1271 0020 FB1D     		adds	r3, r7, #7
 1272 0022 1B78     		ldrb	r3, [r3]
 1273 0024 1033     		adds	r3, r3, #16
 1274 0026 9B00     		lsls	r3, r3, #2
 1275 0028 FA68     		ldr	r2, [r7, #12]
 1276 002a D318     		adds	r3, r2, r3
 1277 002c 1B68     		ldr	r3, [r3]
2860:Generated_Source\PSoC4/CyLib.c **** }
 1278              		.loc 1 2860 0
 1279 002e 1800     		movs	r0, r3
 1280 0030 BD46     		mov	sp, r7
 1281 0032 04B0     		add	sp, sp, #16
 1282              		@ sp needed
 1283 0034 80BD     		pop	{r7, pc}
 1284              		.cfi_endproc
 1285              	.LFE17:
 1286              		.size	CyIntGetVector, .-CyIntGetVector
 1287 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1288              		.align	2
 1289              		.global	CyIntSetPriority
 1290              		.code	16
 1291              		.thumb_func
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 74


 1292              		.type	CyIntSetPriority, %function
 1293              	CyIntSetPriority:
 1294              	.LFB18:
2861:Generated_Source\PSoC4/CyLib.c **** 
2862:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2863:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2864:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2869:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2872:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2873:Generated_Source\PSoC4/CyLib.c **** {
 1295              		.loc 1 2873 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 24
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 90B5     		push	{r4, r7, lr}
 1300              		.cfi_def_cfa_offset 12
 1301              		.cfi_offset 4, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 87B0     		sub	sp, sp, #28
 1305              		.cfi_def_cfa_offset 40
 1306 0004 00AF     		add	r7, sp, #0
 1307              		.cfi_def_cfa_register 7
 1308 0006 0200     		movs	r2, r0
 1309 0008 FB1D     		adds	r3, r7, #7
 1310 000a 1A70     		strb	r2, [r3]
 1311 000c BB1D     		adds	r3, r7, #6
 1312 000e 0A1C     		adds	r2, r1, #0
 1313 0010 1A70     		strb	r2, [r3]
2874:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2875:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2876:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2877:Generated_Source\PSoC4/CyLib.c **** 
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1314              		.loc 1 2878 0
 1315 0012 BB1D     		adds	r3, r7, #6
 1316 0014 1B78     		ldrb	r3, [r3]
 1317 0016 032B     		cmp	r3, #3
 1318 0018 02D9     		bls	.L74
 1319              		.loc 1 2878 0 is_stmt 0 discriminator 1
 1320 001a 0020     		movs	r0, #0
 1321 001c FFF7FEFF 		bl	CyHalt
 1322              	.L74:
2879:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1323              		.loc 1 2879 0 is_stmt 1
 1324 0020 FB1D     		adds	r3, r7, #7
 1325 0022 1B78     		ldrb	r3, [r3]
 1326 0024 1F2B     		cmp	r3, #31
 1327 0026 02D9     		bls	.L75
 1328              		.loc 1 2879 0 is_stmt 0 discriminator 1
 1329 0028 0020     		movs	r0, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 75


 1330 002a FFF7FEFF 		bl	CyHalt
 1331              	.L75:
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1332              		.loc 1 2881 0 is_stmt 1
 1333 002e FB1D     		adds	r3, r7, #7
 1334 0030 1B78     		ldrb	r3, [r3]
 1335 0032 0322     		movs	r2, #3
 1336 0034 1340     		ands	r3, r2
 1337 0036 DB00     		lsls	r3, r3, #3
 1338 0038 0633     		adds	r3, r3, #6
 1339 003a 7B61     		str	r3, [r7, #20]
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1340              		.loc 1 2883 0
 1341 003c 1323     		movs	r3, #19
 1342 003e FC18     		adds	r4, r7, r3
 1343 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1344 0044 0300     		movs	r3, r0
 1345 0046 2370     		strb	r3, [r4]
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1346              		.loc 1 2885 0
 1347 0048 FB1D     		adds	r3, r7, #7
 1348 004a 1B78     		ldrb	r3, [r3]
 1349 004c 9B08     		lsrs	r3, r3, #2
 1350 004e DBB2     		uxtb	r3, r3
 1351 0050 9B00     		lsls	r3, r3, #2
 1352 0052 144A     		ldr	r2, .L76
 1353 0054 9446     		mov	ip, r2
 1354 0056 6344     		add	r3, r3, ip
 1355 0058 1B68     		ldr	r3, [r3]
 1356 005a FB60     		str	r3, [r7, #12]
2886:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1357              		.loc 1 2886 0
 1358 005c 0322     		movs	r2, #3
 1359 005e 7B69     		ldr	r3, [r7, #20]
 1360 0060 9A40     		lsls	r2, r2, r3
 1361 0062 1300     		movs	r3, r2
 1362 0064 DA43     		mvns	r2, r3
 1363 0066 FB68     		ldr	r3, [r7, #12]
 1364 0068 1340     		ands	r3, r2
 1365 006a FB60     		str	r3, [r7, #12]
2887:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1366              		.loc 1 2887 0
 1367 006c BB1D     		adds	r3, r7, #6
 1368 006e 1A78     		ldrb	r2, [r3]
 1369 0070 7B69     		ldr	r3, [r7, #20]
 1370 0072 9A40     		lsls	r2, r2, r3
 1371 0074 1300     		movs	r3, r2
 1372 0076 FA68     		ldr	r2, [r7, #12]
 1373 0078 1343     		orrs	r3, r2
 1374 007a FB60     		str	r3, [r7, #12]
2888:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1375              		.loc 1 2888 0
 1376 007c FB1D     		adds	r3, r7, #7
 1377 007e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 76


 1378 0080 9B08     		lsrs	r3, r3, #2
 1379 0082 DBB2     		uxtb	r3, r3
 1380 0084 9B00     		lsls	r3, r3, #2
 1381 0086 074A     		ldr	r2, .L76
 1382 0088 9446     		mov	ip, r2
 1383 008a 6344     		add	r3, r3, ip
 1384 008c FA68     		ldr	r2, [r7, #12]
 1385 008e 1A60     		str	r2, [r3]
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1386              		.loc 1 2890 0
 1387 0090 1323     		movs	r3, #19
 1388 0092 FB18     		adds	r3, r7, r3
 1389 0094 1B78     		ldrb	r3, [r3]
 1390 0096 1800     		movs	r0, r3
 1391 0098 FFF7FEFF 		bl	CyExitCriticalSection
2891:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 2891 0
 1393 009c C046     		nop
 1394 009e BD46     		mov	sp, r7
 1395 00a0 07B0     		add	sp, sp, #28
 1396              		@ sp needed
 1397 00a2 90BD     		pop	{r4, r7, pc}
 1398              	.L77:
 1399              		.align	2
 1400              	.L76:
 1401 00a4 00E400E0 		.word	-536812544
 1402              		.cfi_endproc
 1403              	.LFE18:
 1404              		.size	CyIntSetPriority, .-CyIntSetPriority
 1405              		.section	.text.CyIntGetPriority,"ax",%progbits
 1406              		.align	2
 1407              		.global	CyIntGetPriority
 1408              		.code	16
 1409              		.thumb_func
 1410              		.type	CyIntGetPriority, %function
 1411              	CyIntGetPriority:
 1412              	.LFB19:
2892:Generated_Source\PSoC4/CyLib.c **** 
2893:Generated_Source\PSoC4/CyLib.c **** 
2894:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2895:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2896:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * \return
2903:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2907:Generated_Source\PSoC4/CyLib.c **** {
 1413              		.loc 1 2907 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 77


 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 80B5     		push	{r7, lr}
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 84B0     		sub	sp, sp, #16
 1422              		.cfi_def_cfa_offset 24
 1423 0004 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 1425 0006 0200     		movs	r2, r0
 1426 0008 FB1D     		adds	r3, r7, #7
 1427 000a 1A70     		strb	r2, [r3]
2908:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2909:Generated_Source\PSoC4/CyLib.c **** 
2910:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1428              		.loc 1 2910 0
 1429 000c FB1D     		adds	r3, r7, #7
 1430 000e 1B78     		ldrb	r3, [r3]
 1431 0010 1F2B     		cmp	r3, #31
 1432 0012 02D9     		bls	.L79
 1433              		.loc 1 2910 0 is_stmt 0 discriminator 1
 1434 0014 0020     		movs	r0, #0
 1435 0016 FFF7FEFF 		bl	CyHalt
 1436              	.L79:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1437              		.loc 1 2912 0 is_stmt 1
 1438 001a FB1D     		adds	r3, r7, #7
 1439 001c 1B78     		ldrb	r3, [r3]
 1440 001e 9B08     		lsrs	r3, r3, #2
 1441 0020 DBB2     		uxtb	r3, r3
 1442 0022 9B00     		lsls	r3, r3, #2
 1443 0024 0B4A     		ldr	r2, .L81
 1444 0026 9446     		mov	ip, r2
 1445 0028 6344     		add	r3, r3, ip
 1446 002a 1A68     		ldr	r2, [r3]
 1447 002c FB1D     		adds	r3, r7, #7
 1448 002e 1B78     		ldrb	r3, [r3]
 1449 0030 0321     		movs	r1, #3
 1450 0032 0B40     		ands	r3, r1
 1451 0034 DB00     		lsls	r3, r3, #3
 1452 0036 0633     		adds	r3, r3, #6
 1453 0038 DA40     		lsrs	r2, r2, r3
 1454 003a 0F23     		movs	r3, #15
 1455 003c FB18     		adds	r3, r7, r3
 1456 003e 1A70     		strb	r2, [r3]
2913:Generated_Source\PSoC4/CyLib.c **** 
2914:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1457              		.loc 1 2914 0
 1458 0040 0F23     		movs	r3, #15
 1459 0042 FB18     		adds	r3, r7, r3
 1460 0044 1B78     		ldrb	r3, [r3]
 1461 0046 0322     		movs	r2, #3
 1462 0048 1340     		ands	r3, r2
 1463 004a DBB2     		uxtb	r3, r3
2915:Generated_Source\PSoC4/CyLib.c **** }
 1464              		.loc 1 2915 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 78


 1465 004c 1800     		movs	r0, r3
 1466 004e BD46     		mov	sp, r7
 1467 0050 04B0     		add	sp, sp, #16
 1468              		@ sp needed
 1469 0052 80BD     		pop	{r7, pc}
 1470              	.L82:
 1471              		.align	2
 1472              	.L81:
 1473 0054 00E400E0 		.word	-536812544
 1474              		.cfi_endproc
 1475              	.LFE19:
 1476              		.size	CyIntGetPriority, .-CyIntGetPriority
 1477              		.section	.text.CyIntEnable,"ax",%progbits
 1478              		.align	2
 1479              		.global	CyIntEnable
 1480              		.code	16
 1481              		.thumb_func
 1482              		.type	CyIntEnable, %function
 1483              	CyIntEnable:
 1484              	.LFB20:
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2919:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2920:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2923:Generated_Source\PSoC4/CyLib.c **** *
2924:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2925:Generated_Source\PSoC4/CyLib.c **** *
2926:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2927:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2928:Generated_Source\PSoC4/CyLib.c **** {
 1485              		.loc 1 2928 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 8
 1488              		@ frame_needed = 1, uses_anonymous_args = 0
 1489 0000 80B5     		push	{r7, lr}
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 82B0     		sub	sp, sp, #8
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              		.cfi_def_cfa_register 7
 1497 0006 0200     		movs	r2, r0
 1498 0008 FB1D     		adds	r3, r7, #7
 1499 000a 1A70     		strb	r2, [r3]
2929:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1500              		.loc 1 2929 0
 1501 000c 064B     		ldr	r3, .L84
 1502 000e FA1D     		adds	r2, r7, #7
 1503 0010 1278     		ldrb	r2, [r2]
 1504 0012 1F21     		movs	r1, #31
 1505 0014 0A40     		ands	r2, r1
 1506 0016 0121     		movs	r1, #1
 1507 0018 9140     		lsls	r1, r1, r2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 79


 1508 001a 0A00     		movs	r2, r1
 1509 001c 1A60     		str	r2, [r3]
2930:Generated_Source\PSoC4/CyLib.c **** }
 1510              		.loc 1 2930 0
 1511 001e C046     		nop
 1512 0020 BD46     		mov	sp, r7
 1513 0022 02B0     		add	sp, sp, #8
 1514              		@ sp needed
 1515 0024 80BD     		pop	{r7, pc}
 1516              	.L85:
 1517 0026 C046     		.align	2
 1518              	.L84:
 1519 0028 00E100E0 		.word	-536813312
 1520              		.cfi_endproc
 1521              	.LFE20:
 1522              		.size	CyIntEnable, .-CyIntEnable
 1523              		.section	.text.CyIntGetState,"ax",%progbits
 1524              		.align	2
 1525              		.global	CyIntGetState
 1526              		.code	16
 1527              		.thumb_func
 1528              		.type	CyIntGetState, %function
 1529              	CyIntGetState:
 1530              	.LFB21:
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2938:Generated_Source\PSoC4/CyLib.c **** *
2939:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** * \return
2942:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2945:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2946:Generated_Source\PSoC4/CyLib.c **** {
 1531              		.loc 1 2946 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 8
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 82B0     		sub	sp, sp, #8
 1540              		.cfi_def_cfa_offset 16
 1541 0004 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 1543 0006 0200     		movs	r2, r0
 1544 0008 FB1D     		adds	r3, r7, #7
 1545 000a 1A70     		strb	r2, [r3]
2947:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2948:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 80


 1546              		.loc 1 2948 0
 1547 000c 074B     		ldr	r3, .L88
 1548 000e 1A68     		ldr	r2, [r3]
 1549 0010 FB1D     		adds	r3, r7, #7
 1550 0012 1B78     		ldrb	r3, [r3]
 1551 0014 1F21     		movs	r1, #31
 1552 0016 0B40     		ands	r3, r1
 1553 0018 DA40     		lsrs	r2, r2, r3
 1554 001a 1300     		movs	r3, r2
 1555 001c DBB2     		uxtb	r3, r3
 1556 001e 0122     		movs	r2, #1
 1557 0020 1340     		ands	r3, r2
 1558 0022 DBB2     		uxtb	r3, r3
2949:Generated_Source\PSoC4/CyLib.c **** }
 1559              		.loc 1 2949 0
 1560 0024 1800     		movs	r0, r3
 1561 0026 BD46     		mov	sp, r7
 1562 0028 02B0     		add	sp, sp, #8
 1563              		@ sp needed
 1564 002a 80BD     		pop	{r7, pc}
 1565              	.L89:
 1566              		.align	2
 1567              	.L88:
 1568 002c 00E100E0 		.word	-536813312
 1569              		.cfi_endproc
 1570              	.LFE21:
 1571              		.size	CyIntGetState, .-CyIntGetState
 1572              		.section	.text.CyIntDisable,"ax",%progbits
 1573              		.align	2
 1574              		.global	CyIntDisable
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	CyIntDisable, %function
 1578              	CyIntDisable:
 1579              	.LFB22:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c **** 
2952:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2954:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2962:Generated_Source\PSoC4/CyLib.c **** {
 1580              		.loc 1 2962 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 8
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 81


 1589              		.cfi_def_cfa_offset 16
 1590 0004 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 1592 0006 0200     		movs	r2, r0
 1593 0008 FB1D     		adds	r3, r7, #7
 1594 000a 1A70     		strb	r2, [r3]
2963:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1595              		.loc 1 2963 0
 1596 000c 064B     		ldr	r3, .L91
 1597 000e FA1D     		adds	r2, r7, #7
 1598 0010 1278     		ldrb	r2, [r2]
 1599 0012 1F21     		movs	r1, #31
 1600 0014 0A40     		ands	r2, r1
 1601 0016 0121     		movs	r1, #1
 1602 0018 9140     		lsls	r1, r1, r2
 1603 001a 0A00     		movs	r2, r1
 1604 001c 1A60     		str	r2, [r3]
2964:Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2964 0
 1606 001e C046     		nop
 1607 0020 BD46     		mov	sp, r7
 1608 0022 02B0     		add	sp, sp, #8
 1609              		@ sp needed
 1610 0024 80BD     		pop	{r7, pc}
 1611              	.L92:
 1612 0026 C046     		.align	2
 1613              	.L91:
 1614 0028 80E100E0 		.word	-536813184
 1615              		.cfi_endproc
 1616              	.LFE22:
 1617              		.size	CyIntDisable, .-CyIntDisable
 1618              		.section	.text.CyIntSetPending,"ax",%progbits
 1619              		.align	2
 1620              		.global	CyIntSetPending
 1621              		.code	16
 1622              		.thumb_func
 1623              		.type	CyIntSetPending, %function
 1624              	CyIntSetPending:
 1625              	.LFB23:
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2967:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2968:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2969:Generated_Source\PSoC4/CyLib.c **** *
2970:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2973:Generated_Source\PSoC4/CyLib.c **** *
2974:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2975:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2976:Generated_Source\PSoC4/CyLib.c **** {
 1626              		.loc 1 2976 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 8
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 82


 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 82B0     		sub	sp, sp, #8
 1635              		.cfi_def_cfa_offset 16
 1636 0004 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
 1638 0006 0200     		movs	r2, r0
 1639 0008 FB1D     		adds	r3, r7, #7
 1640 000a 1A70     		strb	r2, [r3]
2977:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1641              		.loc 1 2977 0
 1642 000c 064B     		ldr	r3, .L94
 1643 000e FA1D     		adds	r2, r7, #7
 1644 0010 1278     		ldrb	r2, [r2]
 1645 0012 1F21     		movs	r1, #31
 1646 0014 0A40     		ands	r2, r1
 1647 0016 0121     		movs	r1, #1
 1648 0018 9140     		lsls	r1, r1, r2
 1649 001a 0A00     		movs	r2, r1
 1650 001c 1A60     		str	r2, [r3]
2978:Generated_Source\PSoC4/CyLib.c **** }
 1651              		.loc 1 2978 0
 1652 001e C046     		nop
 1653 0020 BD46     		mov	sp, r7
 1654 0022 02B0     		add	sp, sp, #8
 1655              		@ sp needed
 1656 0024 80BD     		pop	{r7, pc}
 1657              	.L95:
 1658 0026 C046     		.align	2
 1659              	.L94:
 1660 0028 00E200E0 		.word	-536813056
 1661              		.cfi_endproc
 1662              	.LFE23:
 1663              		.size	CyIntSetPending, .-CyIntSetPending
 1664              		.section	.text.CyIntClearPending,"ax",%progbits
 1665              		.align	2
 1666              		.global	CyIntClearPending
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CyIntClearPending, %function
 1670              	CyIntClearPending:
 1671              	.LFB24:
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2986:Generated_Source\PSoC4/CyLib.c **** *
2987:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2988:Generated_Source\PSoC4/CyLib.c **** *
2989:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2991:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 2991 0
 1673              		.cfi_startproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 83


 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676 0000 80B5     		push	{r7, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 82B0     		sub	sp, sp, #8
 1681              		.cfi_def_cfa_offset 16
 1682 0004 00AF     		add	r7, sp, #0
 1683              		.cfi_def_cfa_register 7
 1684 0006 0200     		movs	r2, r0
 1685 0008 FB1D     		adds	r3, r7, #7
 1686 000a 1A70     		strb	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1687              		.loc 1 2992 0
 1688 000c 064B     		ldr	r3, .L97
 1689 000e FA1D     		adds	r2, r7, #7
 1690 0010 1278     		ldrb	r2, [r2]
 1691 0012 1F21     		movs	r1, #31
 1692 0014 0A40     		ands	r2, r1
 1693 0016 0121     		movs	r1, #1
 1694 0018 9140     		lsls	r1, r1, r2
 1695 001a 0A00     		movs	r2, r1
 1696 001c 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 2993 0
 1698 001e C046     		nop
 1699 0020 BD46     		mov	sp, r7
 1700 0022 02B0     		add	sp, sp, #8
 1701              		@ sp needed
 1702 0024 80BD     		pop	{r7, pc}
 1703              	.L98:
 1704 0026 C046     		.align	2
 1705              	.L97:
 1706 0028 80E200E0 		.word	-536812928
 1707              		.cfi_endproc
 1708              	.LFE24:
 1709              		.size	CyIntClearPending, .-CyIntClearPending
 1710              		.section	.text.CyHalt,"ax",%progbits
 1711              		.align	2
 1712              		.global	CyHalt
 1713              		.code	16
 1714              		.thumb_func
 1715              		.type	CyHalt, %function
 1716              	CyHalt:
 1717              	.LFB25:
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** 
2996:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2997:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2998:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2999:Generated_Source\PSoC4/CyLib.c **** *
3000:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3003:Generated_Source\PSoC4/CyLib.c **** *
3004:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 84


3005:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3006:Generated_Source\PSoC4/CyLib.c **** {
 1718              		.loc 1 3006 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 0200     		movs	r2, r0
 1731 0008 FB1D     		adds	r3, r7, #7
 1732 000a 1A70     		strb	r2, [r3]
3007:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3008:Generated_Source\PSoC4/CyLib.c ****     {
3009:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3010:Generated_Source\PSoC4/CyLib.c ****     }
3011:Generated_Source\PSoC4/CyLib.c **** 
3012:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3013:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3014:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3015:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1733              		.loc 1 3015 0
 1734              		.syntax divided
 1735              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 1736 000c 01BE     		    bkpt    1
 1737              	@ 0 "" 2
3016:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3017:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3018:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3019:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 3019 0
 1739              		.thumb
 1740              		.syntax unified
 1741 000e C046     		nop
 1742 0010 BD46     		mov	sp, r7
 1743 0012 02B0     		add	sp, sp, #8
 1744              		@ sp needed
 1745 0014 80BD     		pop	{r7, pc}
 1746              		.cfi_endproc
 1747              	.LFE25:
 1748              		.size	CyHalt, .-CyHalt
 1749 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1750              		.align	2
 1751              		.global	CySoftwareReset
 1752              		.code	16
 1753              		.thumb_func
 1754              		.type	CySoftwareReset, %function
 1755              	CySoftwareReset:
 1756              	.LFB26:
3020:Generated_Source\PSoC4/CyLib.c **** 
3021:Generated_Source\PSoC4/CyLib.c **** 
3022:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 85


3023:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3024:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3030:Generated_Source\PSoC4/CyLib.c **** {
 1757              		.loc 1 3030 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
3031:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3032:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3033:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3034:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1767              		.loc 1 3035 0
 1768 0004 054B     		ldr	r3, .L101
 1769 0006 054A     		ldr	r2, .L101
 1770 0008 1268     		ldr	r2, [r2]
 1771 000a 1204     		lsls	r2, r2, #16
 1772 000c 120C     		lsrs	r2, r2, #16
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1773              		.loc 1 3036 0
 1774 000e 0449     		ldr	r1, .L101+4
 1775 0010 0A43     		orrs	r2, r1
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1776              		.loc 1 3035 0
 1777 0012 1A60     		str	r2, [r3]
3037:Generated_Source\PSoC4/CyLib.c **** }
 1778              		.loc 1 3037 0
 1779 0014 C046     		nop
 1780 0016 BD46     		mov	sp, r7
 1781              		@ sp needed
 1782 0018 80BD     		pop	{r7, pc}
 1783              	.L102:
 1784 001a C046     		.align	2
 1785              	.L101:
 1786 001c 0CED00E0 		.word	-536810228
 1787 0020 0400FA05 		.word	100270084
 1788              		.cfi_endproc
 1789              	.LFE26:
 1790              		.size	CySoftwareReset, .-CySoftwareReset
 1791              		.section	.text.CyDelay,"ax",%progbits
 1792              		.align	2
 1793              		.global	CyDelay
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CyDelay, %function
 1797              	CyDelay:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 86


 1798              	.LFB27:
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c **** 
3040:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3041:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3042:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3043:Generated_Source\PSoC4/CyLib.c **** *
3044:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3047:Generated_Source\PSoC4/CyLib.c **** *
3048:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3049:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3050:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 3050 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 8
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 7860     		str	r0, [r7, #4]
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1812              		.loc 1 3051 0
 1813 0008 09E0     		b	.L104
 1814              	.L105:
3052:Generated_Source\PSoC4/CyLib.c ****     {
3053:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3054:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3055:Generated_Source\PSoC4/CyLib.c ****          */
3056:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1815              		.loc 1 3056 0
 1816 000a 0D4B     		ldr	r3, .L106
 1817 000c 1B68     		ldr	r3, [r3]
 1818 000e 1800     		movs	r0, r3
 1819 0010 FFF7FEFF 		bl	CyDelayCycles
3057:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1820              		.loc 1 3057 0
 1821 0014 7B68     		ldr	r3, [r7, #4]
 1822 0016 0B4A     		ldr	r2, .L106+4
 1823 0018 9446     		mov	ip, r2
 1824 001a 6344     		add	r3, r3, ip
 1825 001c 7B60     		str	r3, [r7, #4]
 1826              	.L104:
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1827              		.loc 1 3051 0
 1828 001e 7A68     		ldr	r2, [r7, #4]
 1829 0020 8023     		movs	r3, #128
 1830 0022 1B02     		lsls	r3, r3, #8
 1831 0024 9A42     		cmp	r2, r3
 1832 0026 F0D8     		bhi	.L105
3058:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 87


3059:Generated_Source\PSoC4/CyLib.c **** 
3060:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1833              		.loc 1 3060 0
 1834 0028 074B     		ldr	r3, .L106+8
 1835 002a 1B68     		ldr	r3, [r3]
 1836 002c 7A68     		ldr	r2, [r7, #4]
 1837 002e 5343     		muls	r3, r2
 1838 0030 1800     		movs	r0, r3
 1839 0032 FFF7FEFF 		bl	CyDelayCycles
3061:Generated_Source\PSoC4/CyLib.c **** }
 1840              		.loc 1 3061 0
 1841 0036 C046     		nop
 1842 0038 BD46     		mov	sp, r7
 1843 003a 02B0     		add	sp, sp, #8
 1844              		@ sp needed
 1845 003c 80BD     		pop	{r7, pc}
 1846              	.L107:
 1847 003e C046     		.align	2
 1848              	.L106:
 1849 0040 00000000 		.word	cydelay32kMs
 1850 0044 0080FFFF 		.word	-32768
 1851 0048 00000000 		.word	cydelayFreqKhz
 1852              		.cfi_endproc
 1853              	.LFE27:
 1854              		.size	CyDelay, .-CyDelay
 1855              		.section	.text.CyDelayUs,"ax",%progbits
 1856              		.align	2
 1857              		.global	CyDelayUs
 1858              		.code	16
 1859              		.thumb_func
 1860              		.type	CyDelayUs, %function
 1861              	CyDelayUs:
 1862              	.LFB28:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3066:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1863              		.loc 1 3073 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 8
 1866              		@ frame_needed = 1, uses_anonymous_args = 0
 1867 0000 80B5     		push	{r7, lr}
 1868              		.cfi_def_cfa_offset 8
 1869              		.cfi_offset 7, -8
 1870              		.cfi_offset 14, -4
 1871 0002 82B0     		sub	sp, sp, #8
 1872              		.cfi_def_cfa_offset 16
 1873 0004 00AF     		add	r7, sp, #0
 1874              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 88


 1875 0006 0200     		movs	r2, r0
 1876 0008 BB1D     		adds	r3, r7, #6
 1877 000a 1A80     		strh	r2, [r3]
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1878              		.loc 1 3074 0
 1879 000c BB1D     		adds	r3, r7, #6
 1880 000e 1B88     		ldrh	r3, [r3]
 1881 0010 044A     		ldr	r2, .L109
 1882 0012 1278     		ldrb	r2, [r2]
 1883 0014 5343     		muls	r3, r2
 1884 0016 1800     		movs	r0, r3
 1885 0018 FFF7FEFF 		bl	CyDelayCycles
3075:Generated_Source\PSoC4/CyLib.c **** }
 1886              		.loc 1 3075 0
 1887 001c C046     		nop
 1888 001e BD46     		mov	sp, r7
 1889 0020 02B0     		add	sp, sp, #8
 1890              		@ sp needed
 1891 0022 80BD     		pop	{r7, pc}
 1892              	.L110:
 1893              		.align	2
 1894              	.L109:
 1895 0024 00000000 		.word	cydelayFreqMhz
 1896              		.cfi_endproc
 1897              	.LFE28:
 1898              		.size	CyDelayUs, .-CyDelayUs
 1899              		.global	__aeabi_uidiv
 1900              		.section	.text.CyDelayFreq,"ax",%progbits
 1901              		.align	2
 1902              		.global	CyDelayFreq
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	CyDelayFreq, %function
 1906              	CyDelayFreq:
 1907              	.LFB29:
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3080:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3082:Generated_Source\PSoC4/CyLib.c **** *
3083:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3084:Generated_Source\PSoC4/CyLib.c **** *
3085:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3086:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3087:Generated_Source\PSoC4/CyLib.c **** {
 1908              		.loc 1 3087 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 8
 1911              		@ frame_needed = 1, uses_anonymous_args = 0
 1912 0000 80B5     		push	{r7, lr}
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 82B0     		sub	sp, sp, #8
 1917              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 89


 1918 0004 00AF     		add	r7, sp, #0
 1919              		.cfi_def_cfa_register 7
 1920 0006 7860     		str	r0, [r7, #4]
3088:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1921              		.loc 1 3088 0
 1922 0008 7B68     		ldr	r3, [r7, #4]
 1923 000a 002B     		cmp	r3, #0
 1924 000c 03D0     		beq	.L112
3089:Generated_Source\PSoC4/CyLib.c ****     {
3090:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1925              		.loc 1 3090 0
 1926 000e 154B     		ldr	r3, .L114
 1927 0010 7A68     		ldr	r2, [r7, #4]
 1928 0012 1A60     		str	r2, [r3]
 1929 0014 02E0     		b	.L113
 1930              	.L112:
3091:Generated_Source\PSoC4/CyLib.c ****     }
3092:Generated_Source\PSoC4/CyLib.c ****     else
3093:Generated_Source\PSoC4/CyLib.c ****     {
3094:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1931              		.loc 1 3094 0
 1932 0016 134B     		ldr	r3, .L114
 1933 0018 134A     		ldr	r2, .L114+4
 1934 001a 1A60     		str	r2, [r3]
 1935              	.L113:
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** 
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1936              		.loc 1 3097 0
 1937 001c 114B     		ldr	r3, .L114
 1938 001e 1B68     		ldr	r3, [r3]
 1939 0020 124A     		ldr	r2, .L114+8
 1940 0022 9446     		mov	ip, r2
 1941 0024 6344     		add	r3, r3, ip
 1942 0026 1249     		ldr	r1, .L114+12
 1943 0028 1800     		movs	r0, r3
 1944 002a FFF7FEFF 		bl	__aeabi_uidiv
 1945 002e 0300     		movs	r3, r0
 1946 0030 DAB2     		uxtb	r2, r3
 1947 0032 104B     		ldr	r3, .L114+16
 1948 0034 1A70     		strb	r2, [r3]
3098:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1949              		.loc 1 3098 0
 1950 0036 0B4B     		ldr	r3, .L114
 1951 0038 1B68     		ldr	r3, [r3]
 1952 003a 0F4A     		ldr	r2, .L114+20
 1953 003c 9A18     		adds	r2, r3, r2
 1954 003e FA23     		movs	r3, #250
 1955 0040 9900     		lsls	r1, r3, #2
 1956 0042 1000     		movs	r0, r2
 1957 0044 FFF7FEFF 		bl	__aeabi_uidiv
 1958 0048 0300     		movs	r3, r0
 1959 004a 1A00     		movs	r2, r3
 1960 004c 0B4B     		ldr	r3, .L114+24
 1961 004e 1A60     		str	r2, [r3]
3099:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1962              		.loc 1 3099 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 90


 1963 0050 0A4B     		ldr	r3, .L114+24
 1964 0052 1B68     		ldr	r3, [r3]
 1965 0054 DA03     		lsls	r2, r3, #15
 1966 0056 0A4B     		ldr	r3, .L114+28
 1967 0058 1A60     		str	r2, [r3]
3100:Generated_Source\PSoC4/CyLib.c **** }
 1968              		.loc 1 3100 0
 1969 005a C046     		nop
 1970 005c BD46     		mov	sp, r7
 1971 005e 02B0     		add	sp, sp, #8
 1972              		@ sp needed
 1973 0060 80BD     		pop	{r7, pc}
 1974              	.L115:
 1975 0062 C046     		.align	2
 1976              	.L114:
 1977 0064 00000000 		.word	cydelayFreqHz
 1978 0068 00366E01 		.word	24000000
 1979 006c 3F420F00 		.word	999999
 1980 0070 40420F00 		.word	1000000
 1981 0074 00000000 		.word	cydelayFreqMhz
 1982 0078 E7030000 		.word	999
 1983 007c 00000000 		.word	cydelayFreqKhz
 1984 0080 00000000 		.word	cydelay32kMs
 1985              		.cfi_endproc
 1986              	.LFE29:
 1987              		.size	CyDelayFreq, .-CyDelayFreq
 1988              		.section	.text.CySysTickStart,"ax",%progbits
 1989              		.align	2
 1990              		.global	CySysTickStart
 1991              		.code	16
 1992              		.thumb_func
 1993              		.type	CySysTickStart, %function
 1994              	CySysTickStart:
 1995              	.LFB30:
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c **** 
3103:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3104:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3105:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3106:Generated_Source\PSoC4/CyLib.c **** *
3107:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3108:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3109:Generated_Source\PSoC4/CyLib.c **** *
3110:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
3111:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
3112:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3113:Generated_Source\PSoC4/CyLib.c **** *
3114:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3115:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3116:Generated_Source\PSoC4/CyLib.c **** *
3117:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3118:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3119:Generated_Source\PSoC4/CyLib.c **** {
 1996              		.loc 1 3119 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 91


 2000 0000 80B5     		push	{r7, lr}
 2001              		.cfi_def_cfa_offset 8
 2002              		.cfi_offset 7, -8
 2003              		.cfi_offset 14, -4
 2004 0002 00AF     		add	r7, sp, #0
 2005              		.cfi_def_cfa_register 7
3120:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2006              		.loc 1 3120 0
 2007 0004 064B     		ldr	r3, .L118
 2008 0006 1B68     		ldr	r3, [r3]
 2009 0008 002B     		cmp	r3, #0
 2010 000a 04D1     		bne	.L117
3121:Generated_Source\PSoC4/CyLib.c ****     {
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2011              		.loc 1 3122 0
 2012 000c FFF7FEFF 		bl	CySysTickInit
3123:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2013              		.loc 1 3123 0
 2014 0010 034B     		ldr	r3, .L118
 2015 0012 0122     		movs	r2, #1
 2016 0014 1A60     		str	r2, [r3]
 2017              	.L117:
3124:Generated_Source\PSoC4/CyLib.c ****     }
3125:Generated_Source\PSoC4/CyLib.c **** 
3126:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2018              		.loc 1 3126 0
 2019 0016 FFF7FEFF 		bl	CySysTickEnable
3127:Generated_Source\PSoC4/CyLib.c **** }
 2020              		.loc 1 3127 0
 2021 001a C046     		nop
 2022 001c BD46     		mov	sp, r7
 2023              		@ sp needed
 2024 001e 80BD     		pop	{r7, pc}
 2025              	.L119:
 2026              		.align	2
 2027              	.L118:
 2028 0020 00000000 		.word	CySysTickInitVar
 2029              		.cfi_endproc
 2030              	.LFE30:
 2031              		.size	CySysTickStart, .-CySysTickStart
 2032              		.section	.text.CySysTickInit,"ax",%progbits
 2033              		.align	2
 2034              		.global	CySysTickInit
 2035              		.code	16
 2036              		.thumb_func
 2037              		.type	CySysTickInit, %function
 2038              	CySysTickInit:
 2039              	.LFB31:
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3131:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3132:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3133:Generated_Source\PSoC4/CyLib.c **** *
3134:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3135:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3136:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 92


3137:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3140:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3141:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3142:Generated_Source\PSoC4/CyLib.c **** *
3143:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3144:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3145:Generated_Source\PSoC4/CyLib.c **** *
3146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3147:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3148:Generated_Source\PSoC4/CyLib.c **** {
 2040              		.loc 1 3148 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 8
 2043              		@ frame_needed = 1, uses_anonymous_args = 0
 2044 0000 80B5     		push	{r7, lr}
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 7, -8
 2047              		.cfi_offset 14, -4
 2048 0002 82B0     		sub	sp, sp, #8
 2049              		.cfi_def_cfa_offset 16
 2050 0004 00AF     		add	r7, sp, #0
 2051              		.cfi_def_cfa_register 7
3149:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2052              		.loc 1 3151 0
 2053 0006 0023     		movs	r3, #0
 2054 0008 7B60     		str	r3, [r7, #4]
 2055 000a 07E0     		b	.L121
 2056              	.L122:
3152:Generated_Source\PSoC4/CyLib.c ****     {
3153:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2057              		.loc 1 3153 0 discriminator 3
 2058 000c 104B     		ldr	r3, .L123
 2059 000e 7A68     		ldr	r2, [r7, #4]
 2060 0010 9200     		lsls	r2, r2, #2
 2061 0012 0021     		movs	r1, #0
 2062 0014 D150     		str	r1, [r2, r3]
3151:Generated_Source\PSoC4/CyLib.c ****     {
 2063              		.loc 1 3151 0 discriminator 3
 2064 0016 7B68     		ldr	r3, [r7, #4]
 2065 0018 0133     		adds	r3, r3, #1
 2066 001a 7B60     		str	r3, [r7, #4]
 2067              	.L121:
3151:Generated_Source\PSoC4/CyLib.c ****     {
 2068              		.loc 1 3151 0 is_stmt 0 discriminator 1
 2069 001c 7B68     		ldr	r3, [r7, #4]
 2070 001e 042B     		cmp	r3, #4
 2071 0020 F4D9     		bls	.L122
3154:Generated_Source\PSoC4/CyLib.c ****     }
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2072              		.loc 1 3156 0 is_stmt 1
 2073 0022 0C4B     		ldr	r3, .L123+4
 2074 0024 1900     		movs	r1, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 93


 2075 0026 0F20     		movs	r0, #15
 2076 0028 FFF7FEFF 		bl	CyIntSetSysVector
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3159:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3160:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3161:Generated_Source\PSoC4/CyLib.c **** 
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2077              		.loc 1 3162 0
 2078 002c 0A4B     		ldr	r3, .L123+8
 2079 002e 1A68     		ldr	r2, [r3]
 2080 0030 FA23     		movs	r3, #250
 2081 0032 9900     		lsls	r1, r3, #2
 2082 0034 1000     		movs	r0, r2
 2083 0036 FFF7FEFF 		bl	__aeabi_uidiv
 2084 003a 0300     		movs	r3, r0
 2085 003c 1800     		movs	r0, r3
 2086 003e FFF7FEFF 		bl	CySysTickSetReload
3163:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2087              		.loc 1 3163 0
 2088 0042 FFF7FEFF 		bl	CySysTickClear
3164:Generated_Source\PSoC4/CyLib.c **** }
 2089              		.loc 1 3164 0
 2090 0046 C046     		nop
 2091 0048 BD46     		mov	sp, r7
 2092 004a 02B0     		add	sp, sp, #8
 2093              		@ sp needed
 2094 004c 80BD     		pop	{r7, pc}
 2095              	.L124:
 2096 004e C046     		.align	2
 2097              	.L123:
 2098 0050 00000000 		.word	CySysTickCallbacks
 2099 0054 00000000 		.word	CySysTickServiceCallbacks
 2100 0058 00000000 		.word	cydelayFreqHz
 2101              		.cfi_endproc
 2102              	.LFE31:
 2103              		.size	CySysTickInit, .-CySysTickInit
 2104              		.section	.text.CySysTickEnable,"ax",%progbits
 2105              		.align	2
 2106              		.global	CySysTickEnable
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickEnable, %function
 2110              	CySysTickEnable:
 2111              	.LFB32:
3165:Generated_Source\PSoC4/CyLib.c **** 
3166:Generated_Source\PSoC4/CyLib.c **** 
3167:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3168:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3169:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3172:Generated_Source\PSoC4/CyLib.c **** *
3173:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3174:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3175:Generated_Source\PSoC4/CyLib.c **** *
3176:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 94


3177:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3178:Generated_Source\PSoC4/CyLib.c **** {
 2112              		.loc 1 3178 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116 0000 80B5     		push	{r7, lr}
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
 2120 0002 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
3179:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2122              		.loc 1 3179 0
 2123 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
3180:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2124              		.loc 1 3180 0
 2125 0008 044B     		ldr	r3, .L126
 2126 000a 044A     		ldr	r2, .L126
 2127 000c 1268     		ldr	r2, [r2]
 2128 000e 0121     		movs	r1, #1
 2129 0010 0A43     		orrs	r2, r1
 2130 0012 1A60     		str	r2, [r3]
3181:Generated_Source\PSoC4/CyLib.c **** }
 2131              		.loc 1 3181 0
 2132 0014 C046     		nop
 2133 0016 BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 0018 80BD     		pop	{r7, pc}
 2136              	.L127:
 2137 001a C046     		.align	2
 2138              	.L126:
 2139 001c 10E000E0 		.word	-536813552
 2140              		.cfi_endproc
 2141              	.LFE32:
 2142              		.size	CySysTickEnable, .-CySysTickEnable
 2143              		.section	.text.CySysTickStop,"ax",%progbits
 2144              		.align	2
 2145              		.global	CySysTickStop
 2146              		.code	16
 2147              		.thumb_func
 2148              		.type	CySysTickStop, %function
 2149              	CySysTickStop:
 2150              	.LFB33:
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3189:Generated_Source\PSoC4/CyLib.c **** *
3190:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3191:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3194:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 95


3195:Generated_Source\PSoC4/CyLib.c **** {
 2151              		.loc 1 3195 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
 2158              		.cfi_offset 14, -4
 2159 0002 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
3196:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2161              		.loc 1 3196 0
 2162 0004 044B     		ldr	r3, .L129
 2163 0006 044A     		ldr	r2, .L129
 2164 0008 1268     		ldr	r2, [r2]
 2165 000a 0121     		movs	r1, #1
 2166 000c 8A43     		bics	r2, r1
 2167 000e 1A60     		str	r2, [r3]
3197:Generated_Source\PSoC4/CyLib.c **** }
 2168              		.loc 1 3197 0
 2169 0010 C046     		nop
 2170 0012 BD46     		mov	sp, r7
 2171              		@ sp needed
 2172 0014 80BD     		pop	{r7, pc}
 2173              	.L130:
 2174 0016 C046     		.align	2
 2175              	.L129:
 2176 0018 10E000E0 		.word	-536813552
 2177              		.cfi_endproc
 2178              	.LFE33:
 2179              		.size	CySysTickStop, .-CySysTickStop
 2180              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2181              		.align	2
 2182              		.global	CySysTickEnableInterrupt
 2183              		.code	16
 2184              		.thumb_func
 2185              		.type	CySysTickEnableInterrupt, %function
 2186              	CySysTickEnableInterrupt:
 2187              	.LFB34:
3198:Generated_Source\PSoC4/CyLib.c **** 
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3201:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3202:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3203:Generated_Source\PSoC4/CyLib.c **** *
3204:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3205:Generated_Source\PSoC4/CyLib.c **** *
3206:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3207:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3208:Generated_Source\PSoC4/CyLib.c **** *
3209:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3210:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3211:Generated_Source\PSoC4/CyLib.c **** {
 2188              		.loc 1 3211 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 96


 2191              		@ frame_needed = 1, uses_anonymous_args = 0
 2192 0000 80B5     		push	{r7, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
3212:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2198              		.loc 1 3212 0
 2199 0004 044B     		ldr	r3, .L132
 2200 0006 044A     		ldr	r2, .L132
 2201 0008 1268     		ldr	r2, [r2]
 2202 000a 0221     		movs	r1, #2
 2203 000c 0A43     		orrs	r2, r1
 2204 000e 1A60     		str	r2, [r3]
3213:Generated_Source\PSoC4/CyLib.c **** }
 2205              		.loc 1 3213 0
 2206 0010 C046     		nop
 2207 0012 BD46     		mov	sp, r7
 2208              		@ sp needed
 2209 0014 80BD     		pop	{r7, pc}
 2210              	.L133:
 2211 0016 C046     		.align	2
 2212              	.L132:
 2213 0018 10E000E0 		.word	-536813552
 2214              		.cfi_endproc
 2215              	.LFE34:
 2216              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2217              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2218              		.align	2
 2219              		.global	CySysTickDisableInterrupt
 2220              		.code	16
 2221              		.thumb_func
 2222              		.type	CySysTickDisableInterrupt, %function
 2223              	CySysTickDisableInterrupt:
 2224              	.LFB35:
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3217:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3218:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3219:Generated_Source\PSoC4/CyLib.c **** *
3220:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3221:Generated_Source\PSoC4/CyLib.c **** *
3222:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3223:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3226:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3227:Generated_Source\PSoC4/CyLib.c **** {
 2225              		.loc 1 3227 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229 0000 80B5     		push	{r7, lr}
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 7, -8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 97


 2232              		.cfi_offset 14, -4
 2233 0002 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
3228:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2235              		.loc 1 3228 0
 2236 0004 044B     		ldr	r3, .L135
 2237 0006 044A     		ldr	r2, .L135
 2238 0008 1268     		ldr	r2, [r2]
 2239 000a 0221     		movs	r1, #2
 2240 000c 8A43     		bics	r2, r1
 2241 000e 1A60     		str	r2, [r3]
3229:Generated_Source\PSoC4/CyLib.c **** }
 2242              		.loc 1 3229 0
 2243 0010 C046     		nop
 2244 0012 BD46     		mov	sp, r7
 2245              		@ sp needed
 2246 0014 80BD     		pop	{r7, pc}
 2247              	.L136:
 2248 0016 C046     		.align	2
 2249              	.L135:
 2250 0018 10E000E0 		.word	-536813552
 2251              		.cfi_endproc
 2252              	.LFE35:
 2253              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2254              		.section	.text.CySysTickSetReload,"ax",%progbits
 2255              		.align	2
 2256              		.global	CySysTickSetReload
 2257              		.code	16
 2258              		.thumb_func
 2259              		.type	CySysTickSetReload, %function
 2260              	CySysTickSetReload:
 2261              	.LFB36:
3230:Generated_Source\PSoC4/CyLib.c **** 
3231:Generated_Source\PSoC4/CyLib.c **** 
3232:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3233:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3234:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3235:Generated_Source\PSoC4/CyLib.c **** *
3236:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3237:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3238:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3239:Generated_Source\PSoC4/CyLib.c **** *
3240:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3243:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3244:Generated_Source\PSoC4/CyLib.c **** {
 2262              		.loc 1 3244 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266 0000 80B5     		push	{r7, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 7, -8
 2269              		.cfi_offset 14, -4
 2270 0002 82B0     		sub	sp, sp, #8
 2271              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 98


 2272 0004 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
3245:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2275              		.loc 1 3245 0
 2276 0008 044B     		ldr	r3, .L138
 2277 000a 7A68     		ldr	r2, [r7, #4]
 2278 000c 1202     		lsls	r2, r2, #8
 2279 000e 120A     		lsrs	r2, r2, #8
 2280 0010 1A60     		str	r2, [r3]
3246:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 3246 0
 2282 0012 C046     		nop
 2283 0014 BD46     		mov	sp, r7
 2284 0016 02B0     		add	sp, sp, #8
 2285              		@ sp needed
 2286 0018 80BD     		pop	{r7, pc}
 2287              	.L139:
 2288 001a C046     		.align	2
 2289              	.L138:
 2290 001c 14E000E0 		.word	-536813548
 2291              		.cfi_endproc
 2292              	.LFE36:
 2293              		.size	CySysTickSetReload, .-CySysTickSetReload
 2294              		.section	.text.CySysTickGetReload,"ax",%progbits
 2295              		.align	2
 2296              		.global	CySysTickGetReload
 2297              		.code	16
 2298              		.thumb_func
 2299              		.type	CySysTickGetReload, %function
 2300              	CySysTickGetReload:
 2301              	.LFB37:
3247:Generated_Source\PSoC4/CyLib.c **** 
3248:Generated_Source\PSoC4/CyLib.c **** 
3249:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3250:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3251:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3252:Generated_Source\PSoC4/CyLib.c **** *
3253:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3254:Generated_Source\PSoC4/CyLib.c **** *
3255:Generated_Source\PSoC4/CyLib.c **** * \return
3256:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3259:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3260:Generated_Source\PSoC4/CyLib.c **** {
 2302              		.loc 1 3260 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 0000 80B5     		push	{r7, lr}
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 00AF     		add	r7, sp, #0
 2311              		.cfi_def_cfa_register 7
3261:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 99


 2312              		.loc 1 3261 0
 2313 0004 034B     		ldr	r3, .L142
 2314 0006 1B68     		ldr	r3, [r3]
 2315 0008 1B02     		lsls	r3, r3, #8
 2316 000a 1B0A     		lsrs	r3, r3, #8
3262:Generated_Source\PSoC4/CyLib.c **** }
 2317              		.loc 1 3262 0
 2318 000c 1800     		movs	r0, r3
 2319 000e BD46     		mov	sp, r7
 2320              		@ sp needed
 2321 0010 80BD     		pop	{r7, pc}
 2322              	.L143:
 2323 0012 C046     		.align	2
 2324              	.L142:
 2325 0014 14E000E0 		.word	-536813548
 2326              		.cfi_endproc
 2327              	.LFE37:
 2328              		.size	CySysTickGetReload, .-CySysTickGetReload
 2329              		.section	.text.CySysTickGetValue,"ax",%progbits
 2330              		.align	2
 2331              		.global	CySysTickGetValue
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	CySysTickGetValue, %function
 2335              	CySysTickGetValue:
 2336              	.LFB38:
3263:Generated_Source\PSoC4/CyLib.c **** 
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3266:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3267:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3268:Generated_Source\PSoC4/CyLib.c **** *
3269:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3270:Generated_Source\PSoC4/CyLib.c **** *
3271:Generated_Source\PSoC4/CyLib.c **** * \return
3272:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3275:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3276:Generated_Source\PSoC4/CyLib.c **** {
 2337              		.loc 1 3276 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
3277:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2347              		.loc 1 3277 0
 2348 0004 034B     		ldr	r3, .L146
 2349 0006 1B68     		ldr	r3, [r3]
 2350 0008 1B02     		lsls	r3, r3, #8
 2351 000a 1B0A     		lsrs	r3, r3, #8
3278:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 100


 2352              		.loc 1 3278 0
 2353 000c 1800     		movs	r0, r3
 2354 000e BD46     		mov	sp, r7
 2355              		@ sp needed
 2356 0010 80BD     		pop	{r7, pc}
 2357              	.L147:
 2358 0012 C046     		.align	2
 2359              	.L146:
 2360 0014 18E000E0 		.word	-536813544
 2361              		.cfi_endproc
 2362              	.LFE38:
 2363              		.size	CySysTickGetValue, .-CySysTickGetValue
 2364              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2365              		.align	2
 2366              		.global	CySysTickGetCountFlag
 2367              		.code	16
 2368              		.thumb_func
 2369              		.type	CySysTickGetCountFlag, %function
 2370              	CySysTickGetCountFlag:
 2371              	.LFB39:
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c **** 
3281:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3287:Generated_Source\PSoC4/CyLib.c ****     *
3288:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3289:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3290:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3291:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3292:Generated_Source\PSoC4/CyLib.c ****     *
3293:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
3294:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
3295:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
3296:Generated_Source\PSoC4/CyLib.c ****     *
3297:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3298:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3301:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3302:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3303:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3304:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3305:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3306:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3307:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3308:Generated_Source\PSoC4/CyLib.c ****     {
3309:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3310:Generated_Source\PSoC4/CyLib.c ****         {
3311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
3312:Generated_Source\PSoC4/CyLib.c ****         }
3313:Generated_Source\PSoC4/CyLib.c ****         else
3314:Generated_Source\PSoC4/CyLib.c ****         {
3315:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 101


3316:Generated_Source\PSoC4/CyLib.c ****         }
3317:Generated_Source\PSoC4/CyLib.c ****     }
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c ****     
3320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3323:Generated_Source\PSoC4/CyLib.c ****     *
3324:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3325:Generated_Source\PSoC4/CyLib.c ****     *
3326:Generated_Source\PSoC4/CyLib.c ****     *  \return 
3327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3328:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3329:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3330:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3333:Generated_Source\PSoC4/CyLib.c ****     {
3334:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3335:Generated_Source\PSoC4/CyLib.c ****     }
3336:Generated_Source\PSoC4/CyLib.c ****     
3337:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3338:Generated_Source\PSoC4/CyLib.c **** 
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3341:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3342:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3343:Generated_Source\PSoC4/CyLib.c **** *
3344:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3345:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3346:Generated_Source\PSoC4/CyLib.c **** *
3347:Generated_Source\PSoC4/CyLib.c **** * \return
3348:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3349:Generated_Source\PSoC4/CyLib.c **** *
3350:Generated_Source\PSoC4/CyLib.c **** *
3351:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3352:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3353:Generated_Source\PSoC4/CyLib.c **** *
3354:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3356:Generated_Source\PSoC4/CyLib.c **** {
 2372              		.loc 1 3356 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376 0000 80B5     		push	{r7, lr}
 2377              		.cfi_def_cfa_offset 8
 2378              		.cfi_offset 7, -8
 2379              		.cfi_offset 14, -4
 2380 0002 00AF     		add	r7, sp, #0
 2381              		.cfi_def_cfa_register 7
3357:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2382              		.loc 1 3357 0
 2383 0004 034B     		ldr	r3, .L150
 2384 0006 1B68     		ldr	r3, [r3]
 2385 0008 1B0C     		lsrs	r3, r3, #16
 2386 000a 0122     		movs	r2, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 102


 2387 000c 1340     		ands	r3, r2
3358:Generated_Source\PSoC4/CyLib.c **** }
 2388              		.loc 1 3358 0
 2389 000e 1800     		movs	r0, r3
 2390 0010 BD46     		mov	sp, r7
 2391              		@ sp needed
 2392 0012 80BD     		pop	{r7, pc}
 2393              	.L151:
 2394              		.align	2
 2395              	.L150:
 2396 0014 10E000E0 		.word	-536813552
 2397              		.cfi_endproc
 2398              	.LFE39:
 2399              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2400              		.section	.text.CySysTickClear,"ax",%progbits
 2401              		.align	2
 2402              		.global	CySysTickClear
 2403              		.code	16
 2404              		.thumb_func
 2405              		.type	CySysTickClear, %function
 2406              	CySysTickClear:
 2407              	.LFB40:
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c **** 
3361:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3362:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3363:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3364:Generated_Source\PSoC4/CyLib.c **** *
3365:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3366:Generated_Source\PSoC4/CyLib.c **** *
3367:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3368:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3369:Generated_Source\PSoC4/CyLib.c **** {
 2408              		.loc 1 3369 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412 0000 80B5     		push	{r7, lr}
 2413              		.cfi_def_cfa_offset 8
 2414              		.cfi_offset 7, -8
 2415              		.cfi_offset 14, -4
 2416 0002 00AF     		add	r7, sp, #0
 2417              		.cfi_def_cfa_register 7
3370:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2418              		.loc 1 3370 0
 2419 0004 024B     		ldr	r3, .L153
 2420 0006 0022     		movs	r2, #0
 2421 0008 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** }
 2422              		.loc 1 3371 0
 2423 000a C046     		nop
 2424 000c BD46     		mov	sp, r7
 2425              		@ sp needed
 2426 000e 80BD     		pop	{r7, pc}
 2427              	.L154:
 2428              		.align	2
 2429              	.L153:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 103


 2430 0010 18E000E0 		.word	-536813544
 2431              		.cfi_endproc
 2432              	.LFE40:
 2433              		.size	CySysTickClear, .-CySysTickClear
 2434              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2435              		.align	2
 2436              		.global	CySysTickSetCallback
 2437              		.code	16
 2438              		.thumb_func
 2439              		.type	CySysTickSetCallback, %function
 2440              	CySysTickSetCallback:
 2441              	.LFB41:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3376:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c **** *
3378:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3379:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3380:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3381:Generated_Source\PSoC4/CyLib.c **** *
3382:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3383:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3384:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3385:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3386:Generated_Source\PSoC4/CyLib.c **** *  functions.
3387:Generated_Source\PSoC4/CyLib.c **** *
3388:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3389:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3390:Generated_Source\PSoC4/CyLib.c **** *
3391:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3392:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3393:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3394:Generated_Source\PSoC4/CyLib.c **** *
3395:Generated_Source\PSoC4/CyLib.c **** * \return
3396:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3397:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3398:Generated_Source\PSoC4/CyLib.c **** *
3399:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3400:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3401:Generated_Source\PSoC4/CyLib.c **** *
3402:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3403:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3404:Generated_Source\PSoC4/CyLib.c **** {
 2442              		.loc 1 3404 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 16
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446 0000 80B5     		push	{r7, lr}
 2447              		.cfi_def_cfa_offset 8
 2448              		.cfi_offset 7, -8
 2449              		.cfi_offset 14, -4
 2450 0002 84B0     		sub	sp, sp, #16
 2451              		.cfi_def_cfa_offset 24
 2452 0004 00AF     		add	r7, sp, #0
 2453              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 104


 2454 0006 7860     		str	r0, [r7, #4]
 2455 0008 3960     		str	r1, [r7]
3405:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3406:Generated_Source\PSoC4/CyLib.c **** 
3407:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2456              		.loc 1 3407 0
 2457 000a 074B     		ldr	r3, .L157
 2458 000c 7A68     		ldr	r2, [r7, #4]
 2459 000e 9200     		lsls	r2, r2, #2
 2460 0010 D358     		ldr	r3, [r2, r3]
 2461 0012 FB60     		str	r3, [r7, #12]
3408:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2462              		.loc 1 3408 0
 2463 0014 044B     		ldr	r3, .L157
 2464 0016 7A68     		ldr	r2, [r7, #4]
 2465 0018 9200     		lsls	r2, r2, #2
 2466 001a 3968     		ldr	r1, [r7]
 2467 001c D150     		str	r1, [r2, r3]
3409:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2468              		.loc 1 3409 0
 2469 001e FB68     		ldr	r3, [r7, #12]
3410:Generated_Source\PSoC4/CyLib.c **** }
 2470              		.loc 1 3410 0
 2471 0020 1800     		movs	r0, r3
 2472 0022 BD46     		mov	sp, r7
 2473 0024 04B0     		add	sp, sp, #16
 2474              		@ sp needed
 2475 0026 80BD     		pop	{r7, pc}
 2476              	.L158:
 2477              		.align	2
 2478              	.L157:
 2479 0028 00000000 		.word	CySysTickCallbacks
 2480              		.cfi_endproc
 2481              	.LFE41:
 2482              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2483              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2484              		.align	2
 2485              		.global	CySysTickGetCallback
 2486              		.code	16
 2487              		.thumb_func
 2488              		.type	CySysTickGetCallback, %function
 2489              	CySysTickGetCallback:
 2490              	.LFB42:
3411:Generated_Source\PSoC4/CyLib.c **** 
3412:Generated_Source\PSoC4/CyLib.c **** 
3413:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3414:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3415:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3416:Generated_Source\PSoC4/CyLib.c **** *
3417:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3420:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3421:Generated_Source\PSoC4/CyLib.c **** *
3422:Generated_Source\PSoC4/CyLib.c **** * \return
3423:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3424:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 105


3425:Generated_Source\PSoC4/CyLib.c **** *
3426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3427:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3428:Generated_Source\PSoC4/CyLib.c **** {
 2491              		.loc 1 3428 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 8
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 7, -8
 2498              		.cfi_offset 14, -4
 2499 0002 82B0     		sub	sp, sp, #8
 2500              		.cfi_def_cfa_offset 16
 2501 0004 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
 2503 0006 7860     		str	r0, [r7, #4]
3429:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2504              		.loc 1 3429 0
 2505 0008 034B     		ldr	r3, .L161
 2506 000a 7A68     		ldr	r2, [r7, #4]
 2507 000c 9200     		lsls	r2, r2, #2
 2508 000e D358     		ldr	r3, [r2, r3]
3430:Generated_Source\PSoC4/CyLib.c **** }
 2509              		.loc 1 3430 0
 2510 0010 1800     		movs	r0, r3
 2511 0012 BD46     		mov	sp, r7
 2512 0014 02B0     		add	sp, sp, #8
 2513              		@ sp needed
 2514 0016 80BD     		pop	{r7, pc}
 2515              	.L162:
 2516              		.align	2
 2517              	.L161:
 2518 0018 00000000 		.word	CySysTickCallbacks
 2519              		.cfi_endproc
 2520              	.LFE42:
 2521              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2522              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2523              		.align	2
 2524              		.code	16
 2525              		.thumb_func
 2526              		.type	CySysTickServiceCallbacks, %function
 2527              	CySysTickServiceCallbacks:
 2528              	.LFB43:
3431:Generated_Source\PSoC4/CyLib.c **** 
3432:Generated_Source\PSoC4/CyLib.c **** 
3433:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3434:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3435:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3436:Generated_Source\PSoC4/CyLib.c **** *
3437:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3438:Generated_Source\PSoC4/CyLib.c **** *
3439:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3440:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3441:Generated_Source\PSoC4/CyLib.c **** {
 2529              		.loc 1 3441 0
 2530              		.cfi_startproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 106


 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              		.cfi_def_cfa_offset 8
 2535              		.cfi_offset 7, -8
 2536              		.cfi_offset 14, -4
 2537 0002 82B0     		sub	sp, sp, #8
 2538              		.cfi_def_cfa_offset 16
 2539 0004 00AF     		add	r7, sp, #0
 2540              		.cfi_def_cfa_register 7
3442:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3443:Generated_Source\PSoC4/CyLib.c **** 
3444:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3445:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2541              		.loc 1 3445 0
 2542 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2543 000a 0300     		movs	r3, r0
 2544 000c 012B     		cmp	r3, #1
 2545 000e 13D1     		bne	.L168
3446:Generated_Source\PSoC4/CyLib.c ****     {
3447:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2546              		.loc 1 3447 0
 2547 0010 0023     		movs	r3, #0
 2548 0012 7B60     		str	r3, [r7, #4]
 2549 0014 0DE0     		b	.L165
 2550              	.L167:
3448:Generated_Source\PSoC4/CyLib.c ****         {
3449:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2551              		.loc 1 3449 0
 2552 0016 0A4B     		ldr	r3, .L169
 2553 0018 7A68     		ldr	r2, [r7, #4]
 2554 001a 9200     		lsls	r2, r2, #2
 2555 001c D358     		ldr	r3, [r2, r3]
 2556 001e 002B     		cmp	r3, #0
 2557 0020 04D0     		beq	.L166
3450:Generated_Source\PSoC4/CyLib.c ****             {
3451:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2558              		.loc 1 3451 0
 2559 0022 074B     		ldr	r3, .L169
 2560 0024 7A68     		ldr	r2, [r7, #4]
 2561 0026 9200     		lsls	r2, r2, #2
 2562 0028 D358     		ldr	r3, [r2, r3]
 2563 002a 9847     		blx	r3
 2564              	.L166:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 2565              		.loc 1 3447 0 discriminator 2
 2566 002c 7B68     		ldr	r3, [r7, #4]
 2567 002e 0133     		adds	r3, r3, #1
 2568 0030 7B60     		str	r3, [r7, #4]
 2569              	.L165:
3447:Generated_Source\PSoC4/CyLib.c ****         {
 2570              		.loc 1 3447 0 is_stmt 0 discriminator 1
 2571 0032 7B68     		ldr	r3, [r7, #4]
 2572 0034 042B     		cmp	r3, #4
 2573 0036 EED9     		bls	.L167
 2574              	.L168:
3452:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 107


3453:Generated_Source\PSoC4/CyLib.c ****         }
3454:Generated_Source\PSoC4/CyLib.c ****     }
3455:Generated_Source\PSoC4/CyLib.c **** }
 2575              		.loc 1 3455 0 is_stmt 1
 2576 0038 C046     		nop
 2577 003a BD46     		mov	sp, r7
 2578 003c 02B0     		add	sp, sp, #8
 2579              		@ sp needed
 2580 003e 80BD     		pop	{r7, pc}
 2581              	.L170:
 2582              		.align	2
 2583              	.L169:
 2584 0040 00000000 		.word	CySysTickCallbacks
 2585              		.cfi_endproc
 2586              	.LFE43:
 2587              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2588              		.section	.text.CyGetUniqueId,"ax",%progbits
 2589              		.align	2
 2590              		.global	CyGetUniqueId
 2591              		.code	16
 2592              		.thumb_func
 2593              		.type	CyGetUniqueId, %function
 2594              	CyGetUniqueId:
 2595              	.LFB44:
3456:Generated_Source\PSoC4/CyLib.c **** 
3457:Generated_Source\PSoC4/CyLib.c **** 
3458:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3459:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3460:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3461:Generated_Source\PSoC4/CyLib.c **** *
3462:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3463:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3464:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3465:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3466:Generated_Source\PSoC4/CyLib.c **** *
3467:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3468:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3469:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3472:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3473:Generated_Source\PSoC4/CyLib.c **** {
 2596              		.loc 1 3473 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 8
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 0000 80B5     		push	{r7, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 7, -8
 2603              		.cfi_offset 14, -4
 2604 0002 82B0     		sub	sp, sp, #8
 2605              		.cfi_def_cfa_offset 16
 2606 0004 00AF     		add	r7, sp, #0
 2607              		.cfi_def_cfa_register 7
 2608 0006 7860     		str	r0, [r7, #4]
3474:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 108


 2609              		.loc 1 3475 0
 2610 0008 254B     		ldr	r3, .L172
 2611 000a 1B78     		ldrb	r3, [r3]
 2612 000c DBB2     		uxtb	r3, r3
 2613 000e 1A00     		movs	r2, r3
 2614 0010 7B68     		ldr	r3, [r7, #4]
 2615 0012 1A60     		str	r2, [r3]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2616              		.loc 1 3476 0
 2617 0014 234B     		ldr	r3, .L172+4
 2618 0016 1B78     		ldrb	r3, [r3]
 2619 0018 DBB2     		uxtb	r3, r3
 2620 001a 1A02     		lsls	r2, r3, #8
 2621 001c 7B68     		ldr	r3, [r7, #4]
 2622 001e 1B68     		ldr	r3, [r3]
 2623 0020 1A43     		orrs	r2, r3
 2624 0022 7B68     		ldr	r3, [r7, #4]
 2625 0024 1A60     		str	r2, [r3]
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2626              		.loc 1 3477 0
 2627 0026 204B     		ldr	r3, .L172+8
 2628 0028 1B78     		ldrb	r3, [r3]
 2629 002a DBB2     		uxtb	r3, r3
 2630 002c 1A04     		lsls	r2, r3, #16
 2631 002e 7B68     		ldr	r3, [r7, #4]
 2632 0030 1B68     		ldr	r3, [r3]
 2633 0032 1A43     		orrs	r2, r3
 2634 0034 7B68     		ldr	r3, [r7, #4]
 2635 0036 1A60     		str	r2, [r3]
3478:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2636              		.loc 1 3478 0
 2637 0038 1C4B     		ldr	r3, .L172+12
 2638 003a 1B78     		ldrb	r3, [r3]
 2639 003c DBB2     		uxtb	r3, r3
 2640 003e 1A06     		lsls	r2, r3, #24
 2641 0040 7B68     		ldr	r3, [r7, #4]
 2642 0042 1B68     		ldr	r3, [r3]
 2643 0044 1A43     		orrs	r2, r3
 2644 0046 7B68     		ldr	r3, [r7, #4]
 2645 0048 1A60     		str	r2, [r3]
3479:Generated_Source\PSoC4/CyLib.c **** 
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2646              		.loc 1 3480 0
 2647 004a 7B68     		ldr	r3, [r7, #4]
 2648 004c 0433     		adds	r3, r3, #4
 2649 004e 184A     		ldr	r2, .L172+16
 2650 0050 1278     		ldrb	r2, [r2]
 2651 0052 D2B2     		uxtb	r2, r2
 2652 0054 1A60     		str	r2, [r3]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2653              		.loc 1 3481 0
 2654 0056 174B     		ldr	r3, .L172+20
 2655 0058 1B78     		ldrb	r3, [r3]
 2656 005a DBB2     		uxtb	r3, r3
 2657 005c 1902     		lsls	r1, r3, #8
 2658 005e 7B68     		ldr	r3, [r7, #4]
 2659 0060 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 109


 2660 0062 7A68     		ldr	r2, [r7, #4]
 2661 0064 0432     		adds	r2, r2, #4
 2662 0066 1268     		ldr	r2, [r2]
 2663 0068 0A43     		orrs	r2, r1
 2664 006a 1A60     		str	r2, [r3]
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2665              		.loc 1 3482 0
 2666 006c 124B     		ldr	r3, .L172+24
 2667 006e 1B78     		ldrb	r3, [r3]
 2668 0070 DBB2     		uxtb	r3, r3
 2669 0072 1904     		lsls	r1, r3, #16
 2670 0074 7B68     		ldr	r3, [r7, #4]
 2671 0076 0433     		adds	r3, r3, #4
 2672 0078 7A68     		ldr	r2, [r7, #4]
 2673 007a 0432     		adds	r2, r2, #4
 2674 007c 1268     		ldr	r2, [r2]
 2675 007e 0A43     		orrs	r2, r1
 2676 0080 1A60     		str	r2, [r3]
3483:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2677              		.loc 1 3483 0
 2678 0082 0E4B     		ldr	r3, .L172+28
 2679 0084 1B78     		ldrb	r3, [r3]
 2680 0086 DBB2     		uxtb	r3, r3
 2681 0088 1906     		lsls	r1, r3, #24
 2682 008a 7B68     		ldr	r3, [r7, #4]
 2683 008c 0433     		adds	r3, r3, #4
 2684 008e 7A68     		ldr	r2, [r7, #4]
 2685 0090 0432     		adds	r2, r2, #4
 2686 0092 1268     		ldr	r2, [r2]
 2687 0094 0A43     		orrs	r2, r1
 2688 0096 1A60     		str	r2, [r3]
3484:Generated_Source\PSoC4/CyLib.c **** #else
3485:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3486:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3487:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3488:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3489:Generated_Source\PSoC4/CyLib.c **** 
3490:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3491:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3492:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3493:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3494:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3495:Generated_Source\PSoC4/CyLib.c **** }
 2689              		.loc 1 3495 0
 2690 0098 C046     		nop
 2691 009a BD46     		mov	sp, r7
 2692 009c 02B0     		add	sp, sp, #8
 2693              		@ sp needed
 2694 009e 80BD     		pop	{r7, pc}
 2695              	.L173:
 2696              		.align	2
 2697              	.L172:
 2698 00a0 78F1FF0F 		.word	268431736
 2699 00a4 79F1FF0F 		.word	268431737
 2700 00a8 7AF1FF0F 		.word	268431738
 2701 00ac 7BF1FF0F 		.word	268431739
 2702 00b0 7CF1FF0F 		.word	268431740
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 110


 2703 00b4 7DF1FF0F 		.word	268431741
 2704 00b8 7EF1FF0F 		.word	268431742
 2705 00bc 7FF1FF0F 		.word	268431743
 2706              		.cfi_endproc
 2707              	.LFE44:
 2708              		.size	CyGetUniqueId, .-CyGetUniqueId
 2709              		.text
 2710              	.Letext0:
 2711              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2712              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2713              		.section	.debug_info,"",%progbits
 2714              	.Ldebug_info0:
 2715 0000 DD080000 		.4byte	0x8dd
 2716 0004 0400     		.2byte	0x4
 2717 0006 00000000 		.4byte	.Ldebug_abbrev0
 2718 000a 04       		.byte	0x4
 2719 000b 01       		.uleb128 0x1
 2720 000c 41030000 		.4byte	.LASF101
 2721 0010 0C       		.byte	0xc
 2722 0011 34060000 		.4byte	.LASF102
 2723 0015 1B010000 		.4byte	.LASF103
 2724 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2725 001d 00000000 		.4byte	0
 2726 0021 00000000 		.4byte	.Ldebug_line0
 2727 0025 02       		.uleb128 0x2
 2728 0026 01       		.byte	0x1
 2729 0027 06       		.byte	0x6
 2730 0028 FE000000 		.4byte	.LASF0
 2731 002c 02       		.uleb128 0x2
 2732 002d 01       		.byte	0x1
 2733 002e 08       		.byte	0x8
 2734 002f 00050000 		.4byte	.LASF1
 2735 0033 02       		.uleb128 0x2
 2736 0034 02       		.byte	0x2
 2737 0035 05       		.byte	0x5
 2738 0036 0E050000 		.4byte	.LASF2
 2739 003a 02       		.uleb128 0x2
 2740 003b 02       		.byte	0x2
 2741 003c 07       		.byte	0x7
 2742 003d FA020000 		.4byte	.LASF3
 2743 0041 02       		.uleb128 0x2
 2744 0042 04       		.byte	0x4
 2745 0043 05       		.byte	0x5
 2746 0044 89010000 		.4byte	.LASF4
 2747 0048 02       		.uleb128 0x2
 2748 0049 04       		.byte	0x4
 2749 004a 07       		.byte	0x7
 2750 004b 8A020000 		.4byte	.LASF5
 2751 004f 02       		.uleb128 0x2
 2752 0050 08       		.byte	0x8
 2753 0051 05       		.byte	0x5
 2754 0052 F0000000 		.4byte	.LASF6
 2755 0056 02       		.uleb128 0x2
 2756 0057 08       		.byte	0x8
 2757 0058 07       		.byte	0x7
 2758 0059 84000000 		.4byte	.LASF7
 2759 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 111


 2760 005e 04       		.byte	0x4
 2761 005f 05       		.byte	0x5
 2762 0060 696E7400 		.ascii	"int\000"
 2763 0064 02       		.uleb128 0x2
 2764 0065 04       		.byte	0x4
 2765 0066 07       		.byte	0x7
 2766 0067 6E020000 		.4byte	.LASF8
 2767 006b 04       		.uleb128 0x4
 2768 006c B4010000 		.4byte	.LASF9
 2769 0070 02       		.byte	0x2
 2770 0071 F701     		.2byte	0x1f7
 2771 0073 2C000000 		.4byte	0x2c
 2772 0077 04       		.uleb128 0x4
 2773 0078 17000000 		.4byte	.LASF10
 2774 007c 02       		.byte	0x2
 2775 007d F801     		.2byte	0x1f8
 2776 007f 3A000000 		.4byte	0x3a
 2777 0083 04       		.uleb128 0x4
 2778 0084 F4010000 		.4byte	.LASF11
 2779 0088 02       		.byte	0x2
 2780 0089 F901     		.2byte	0x1f9
 2781 008b 48000000 		.4byte	0x48
 2782 008f 02       		.uleb128 0x2
 2783 0090 04       		.byte	0x4
 2784 0091 04       		.byte	0x4
 2785 0092 A7040000 		.4byte	.LASF12
 2786 0096 02       		.uleb128 0x2
 2787 0097 08       		.byte	0x8
 2788 0098 04       		.byte	0x4
 2789 0099 D0010000 		.4byte	.LASF13
 2790 009d 02       		.uleb128 0x2
 2791 009e 01       		.byte	0x1
 2792 009f 08       		.byte	0x8
 2793 00a0 51050000 		.4byte	.LASF14
 2794 00a4 04       		.uleb128 0x4
 2795 00a5 EA040000 		.4byte	.LASF15
 2796 00a9 02       		.byte	0x2
 2797 00aa A102     		.2byte	0x2a1
 2798 00ac B0000000 		.4byte	0xb0
 2799 00b0 05       		.uleb128 0x5
 2800 00b1 6B000000 		.4byte	0x6b
 2801 00b5 04       		.uleb128 0x4
 2802 00b6 F6030000 		.4byte	.LASF16
 2803 00ba 02       		.byte	0x2
 2804 00bb A302     		.2byte	0x2a3
 2805 00bd C1000000 		.4byte	0xc1
 2806 00c1 05       		.uleb128 0x5
 2807 00c2 83000000 		.4byte	0x83
 2808 00c6 04       		.uleb128 0x4
 2809 00c7 56050000 		.4byte	.LASF17
 2810 00cb 02       		.byte	0x2
 2811 00cc B302     		.2byte	0x2b3
 2812 00ce D2000000 		.4byte	0xd2
 2813 00d2 06       		.uleb128 0x6
 2814 00d3 04       		.byte	0x4
 2815 00d4 D8000000 		.4byte	0xd8
 2816 00d8 07       		.uleb128 0x7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 112


 2817 00d9 02       		.uleb128 0x2
 2818 00da 08       		.byte	0x8
 2819 00db 04       		.byte	0x4
 2820 00dc 33040000 		.4byte	.LASF18
 2821 00e0 02       		.uleb128 0x2
 2822 00e1 04       		.byte	0x4
 2823 00e2 07       		.byte	0x7
 2824 00e3 18040000 		.4byte	.LASF19
 2825 00e7 04       		.uleb128 0x4
 2826 00e8 BC040000 		.4byte	.LASF20
 2827 00ec 03       		.byte	0x3
 2828 00ed 0801     		.2byte	0x108
 2829 00ef D2000000 		.4byte	0xd2
 2830 00f3 08       		.uleb128 0x8
 2831 00f4 12060000 		.4byte	.LASF21
 2832 00f8 01       		.byte	0x1
 2833 00f9 62       		.byte	0x62
 2834 00fa 00000000 		.4byte	.LFB0
 2835 00fe 1C000000 		.4byte	.LFE0-.LFB0
 2836 0102 01       		.uleb128 0x1
 2837 0103 9C       		.byte	0x9c
 2838 0104 08       		.uleb128 0x8
 2839 0105 C6020000 		.4byte	.LASF22
 2840 0109 01       		.byte	0x1
 2841 010a 83       		.byte	0x83
 2842 010b 00000000 		.4byte	.LFB1
 2843 010f 1C000000 		.4byte	.LFE1-.LFB1
 2844 0113 01       		.uleb128 0x1
 2845 0114 9C       		.byte	0x9c
 2846 0115 09       		.uleb128 0x9
 2847 0116 27000000 		.4byte	.LASF25
 2848 011a 01       		.byte	0x1
 2849 011b 1C02     		.2byte	0x21c
 2850 011d 00000000 		.4byte	.LFB2
 2851 0121 48000000 		.4byte	.LFE2-.LFB2
 2852 0125 01       		.uleb128 0x1
 2853 0126 9C       		.byte	0x9c
 2854 0127 59010000 		.4byte	0x159
 2855 012b 0A       		.uleb128 0xa
 2856 012c 36050000 		.4byte	.LASF27
 2857 0130 01       		.byte	0x1
 2858 0131 1C02     		.2byte	0x21c
 2859 0133 83000000 		.4byte	0x83
 2860 0137 02       		.uleb128 0x2
 2861 0138 91       		.byte	0x91
 2862 0139 64       		.sleb128 -28
 2863 013a 0B       		.uleb128 0xb
 2864 013b B7020000 		.4byte	.LASF23
 2865 013f 01       		.byte	0x1
 2866 0140 1E02     		.2byte	0x21e
 2867 0142 6B000000 		.4byte	0x6b
 2868 0146 02       		.uleb128 0x2
 2869 0147 91       		.byte	0x91
 2870 0148 6F       		.sleb128 -17
 2871 0149 0B       		.uleb128 0xb
 2872 014a 60060000 		.4byte	.LASF24
 2873 014e 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 113


 2874 014f 1F02     		.2byte	0x21f
 2875 0151 83000000 		.4byte	0x83
 2876 0155 02       		.uleb128 0x2
 2877 0156 91       		.byte	0x91
 2878 0157 68       		.sleb128 -24
 2879 0158 00       		.byte	0
 2880 0159 0C       		.uleb128 0xc
 2881 015a E1030000 		.4byte	.LASF26
 2882 015e 01       		.byte	0x1
 2883 015f 6402     		.2byte	0x264
 2884 0161 00000000 		.4byte	.LFB3
 2885 0165 50000000 		.4byte	.LFE3-.LFB3
 2886 0169 01       		.uleb128 0x1
 2887 016a 9C       		.byte	0x9c
 2888 016b 7F010000 		.4byte	0x17f
 2889 016f 0A       		.uleb128 0xa
 2890 0170 C9010000 		.4byte	.LASF28
 2891 0174 01       		.byte	0x1
 2892 0175 6402     		.2byte	0x264
 2893 0177 83000000 		.4byte	0x83
 2894 017b 02       		.uleb128 0x2
 2895 017c 91       		.byte	0x91
 2896 017d 74       		.sleb128 -12
 2897 017e 00       		.byte	0
 2898 017f 0D       		.uleb128 0xd
 2899 0180 00020000 		.4byte	.LASF42
 2900 0184 01       		.byte	0x1
 2901 0185 8902     		.2byte	0x289
 2902 0187 83000000 		.4byte	0x83
 2903 018b 00000000 		.4byte	.LFB4
 2904 018f 34000000 		.4byte	.LFE4-.LFB4
 2905 0193 01       		.uleb128 0x1
 2906 0194 9C       		.byte	0x9c
 2907 0195 B8010000 		.4byte	0x1b8
 2908 0199 0B       		.uleb128 0xb
 2909 019a B7020000 		.4byte	.LASF23
 2910 019e 01       		.byte	0x1
 2911 019f 8B02     		.2byte	0x28b
 2912 01a1 6B000000 		.4byte	0x6b
 2913 01a5 02       		.uleb128 0x2
 2914 01a6 91       		.byte	0x91
 2915 01a7 6F       		.sleb128 -17
 2916 01a8 0B       		.uleb128 0xb
 2917 01a9 4F040000 		.4byte	.LASF29
 2918 01ad 01       		.byte	0x1
 2919 01ae 8C02     		.2byte	0x28c
 2920 01b0 83000000 		.4byte	0x83
 2921 01b4 02       		.uleb128 0x2
 2922 01b5 91       		.byte	0x91
 2923 01b6 68       		.sleb128 -24
 2924 01b7 00       		.byte	0
 2925 01b8 09       		.uleb128 0x9
 2926 01b9 73050000 		.4byte	.LASF30
 2927 01bd 01       		.byte	0x1
 2928 01be C602     		.2byte	0x2c6
 2929 01c0 00000000 		.4byte	.LFB5
 2930 01c4 48000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 114


 2931 01c8 01       		.uleb128 0x1
 2932 01c9 9C       		.byte	0x9c
 2933 01ca ED010000 		.4byte	0x1ed
 2934 01ce 0A       		.uleb128 0xa
 2935 01cf 0A060000 		.4byte	.LASF31
 2936 01d3 01       		.byte	0x1
 2937 01d4 C602     		.2byte	0x2c6
 2938 01d6 83000000 		.4byte	0x83
 2939 01da 02       		.uleb128 0x2
 2940 01db 91       		.byte	0x91
 2941 01dc 64       		.sleb128 -28
 2942 01dd 0B       		.uleb128 0xb
 2943 01de B7020000 		.4byte	.LASF23
 2944 01e2 01       		.byte	0x1
 2945 01e3 C802     		.2byte	0x2c8
 2946 01e5 6B000000 		.4byte	0x6b
 2947 01e9 02       		.uleb128 0x2
 2948 01ea 91       		.byte	0x91
 2949 01eb 6F       		.sleb128 -17
 2950 01ec 00       		.byte	0
 2951 01ed 09       		.uleb128 0x9
 2952 01ee 2C030000 		.4byte	.LASF32
 2953 01f2 01       		.byte	0x1
 2954 01f3 0003     		.2byte	0x300
 2955 01f5 00000000 		.4byte	.LFB6
 2956 01f9 E4010000 		.4byte	.LFE6-.LFB6
 2957 01fd 01       		.uleb128 0x1
 2958 01fe 9C       		.byte	0x9c
 2959 01ff 5E020000 		.4byte	0x25e
 2960 0203 0A       		.uleb128 0xa
 2961 0204 0A010000 		.4byte	.LASF33
 2962 0208 01       		.byte	0x1
 2963 0209 0003     		.2byte	0x300
 2964 020b 83000000 		.4byte	0x83
 2965 020f 02       		.uleb128 0x2
 2966 0210 91       		.byte	0x91
 2967 0211 64       		.sleb128 -28
 2968 0212 0B       		.uleb128 0xb
 2969 0213 0F000000 		.4byte	.LASF34
 2970 0217 01       		.byte	0x1
 2971 0218 0603     		.2byte	0x306
 2972 021a 6B000000 		.4byte	0x6b
 2973 021e 02       		.uleb128 0x2
 2974 021f 91       		.byte	0x91
 2975 0220 6F       		.sleb128 -17
 2976 0221 0B       		.uleb128 0xb
 2977 0222 47040000 		.4byte	.LASF35
 2978 0226 01       		.byte	0x1
 2979 0227 0703     		.2byte	0x307
 2980 0229 6B000000 		.4byte	0x6b
 2981 022d 02       		.uleb128 0x2
 2982 022e 91       		.byte	0x91
 2983 022f 6E       		.sleb128 -18
 2984 0230 0B       		.uleb128 0xb
 2985 0231 23060000 		.4byte	.LASF36
 2986 0235 01       		.byte	0x1
 2987 0236 0803     		.2byte	0x308
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 115


 2988 0238 6B000000 		.4byte	0x6b
 2989 023c 02       		.uleb128 0x2
 2990 023d 91       		.byte	0x91
 2991 023e 6B       		.sleb128 -21
 2992 023f 0B       		.uleb128 0xb
 2993 0240 6F000000 		.4byte	.LASF37
 2994 0244 01       		.byte	0x1
 2995 0245 0903     		.2byte	0x309
 2996 0247 6B000000 		.4byte	0x6b
 2997 024b 02       		.uleb128 0x2
 2998 024c 91       		.byte	0x91
 2999 024d 6D       		.sleb128 -19
 3000 024e 0B       		.uleb128 0xb
 3001 024f B7020000 		.4byte	.LASF23
 3002 0253 01       		.byte	0x1
 3003 0254 1403     		.2byte	0x314
 3004 0256 6B000000 		.4byte	0x6b
 3005 025a 02       		.uleb128 0x2
 3006 025b 91       		.byte	0x91
 3007 025c 6C       		.sleb128 -20
 3008 025d 00       		.byte	0
 3009 025e 09       		.uleb128 0x9
 3010 025f AD040000 		.4byte	.LASF38
 3011 0263 01       		.byte	0x1
 3012 0264 300A     		.2byte	0xa30
 3013 0266 00000000 		.4byte	.LFB7
 3014 026a 64000000 		.4byte	.LFE7-.LFB7
 3015 026e 01       		.uleb128 0x1
 3016 026f 9C       		.byte	0x9c
 3017 0270 84020000 		.4byte	0x284
 3018 0274 0A       		.uleb128 0xa
 3019 0275 EF040000 		.4byte	.LASF39
 3020 0279 01       		.byte	0x1
 3021 027a 300A     		.2byte	0xa30
 3022 027c 83000000 		.4byte	0x83
 3023 0280 02       		.uleb128 0x2
 3024 0281 91       		.byte	0x91
 3025 0282 74       		.sleb128 -12
 3026 0283 00       		.byte	0
 3027 0284 0E       		.uleb128 0xe
 3028 0285 DD050000 		.4byte	.LASF40
 3029 0289 01       		.byte	0x1
 3030 028a 4E0A     		.2byte	0xa4e
 3031 028c 00000000 		.4byte	.LFB8
 3032 0290 2C000000 		.4byte	.LFE8-.LFB8
 3033 0294 01       		.uleb128 0x1
 3034 0295 9C       		.byte	0x9c
 3035 0296 0F       		.uleb128 0xf
 3036 0297 9C020000 		.4byte	.LASF82
 3037 029b 01       		.byte	0x1
 3038 029c 600A     		.2byte	0xa60
 3039 029e 83000000 		.4byte	0x83
 3040 02a2 00000000 		.4byte	.LFB9
 3041 02a6 18000000 		.4byte	.LFE9-.LFB9
 3042 02aa 01       		.uleb128 0x1
 3043 02ab 9C       		.byte	0x9c
 3044 02ac 0E       		.uleb128 0xe
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 116


 3045 02ad DD010000 		.4byte	.LASF41
 3046 02b1 01       		.byte	0x1
 3047 02b2 700A     		.2byte	0xa70
 3048 02b4 00000000 		.4byte	.LFB10
 3049 02b8 14000000 		.4byte	.LFE10-.LFB10
 3050 02bc 01       		.uleb128 0x1
 3051 02bd 9C       		.byte	0x9c
 3052 02be 10       		.uleb128 0x10
 3053 02bf E6020000 		.4byte	.LASF43
 3054 02c3 01       		.byte	0x1
 3055 02c4 8A0A     		.2byte	0xa8a
 3056 02c6 83000000 		.4byte	0x83
 3057 02ca 00000000 		.4byte	.LFB11
 3058 02ce 30000000 		.4byte	.LFE11-.LFB11
 3059 02d2 01       		.uleb128 0x1
 3060 02d3 9C       		.byte	0x9c
 3061 02d4 F7020000 		.4byte	0x2f7
 3062 02d8 0A       		.uleb128 0xa
 3063 02d9 4A050000 		.4byte	.LASF44
 3064 02dd 01       		.byte	0x1
 3065 02de 8A0A     		.2byte	0xa8a
 3066 02e0 83000000 		.4byte	0x83
 3067 02e4 02       		.uleb128 0x2
 3068 02e5 91       		.byte	0x91
 3069 02e6 6C       		.sleb128 -20
 3070 02e7 0B       		.uleb128 0xb
 3071 02e8 0B040000 		.4byte	.LASF45
 3072 02ec 01       		.byte	0x1
 3073 02ed 8C0A     		.2byte	0xa8c
 3074 02ef 83000000 		.4byte	0x83
 3075 02f3 02       		.uleb128 0x2
 3076 02f4 91       		.byte	0x91
 3077 02f5 74       		.sleb128 -12
 3078 02f6 00       		.byte	0
 3079 02f7 10       		.uleb128 0x10
 3080 02f8 61000000 		.4byte	.LASF46
 3081 02fc 01       		.byte	0x1
 3082 02fd A10A     		.2byte	0xaa1
 3083 02ff 83000000 		.4byte	0x83
 3084 0303 00000000 		.4byte	.LFB12
 3085 0307 24000000 		.4byte	.LFE12-.LFB12
 3086 030b 01       		.uleb128 0x1
 3087 030c 9C       		.byte	0x9c
 3088 030d 21030000 		.4byte	0x321
 3089 0311 0B       		.uleb128 0xb
 3090 0312 1E000000 		.4byte	.LASF47
 3091 0316 01       		.byte	0x1
 3092 0317 A30A     		.2byte	0xaa3
 3093 0319 83000000 		.4byte	0x83
 3094 031d 02       		.uleb128 0x2
 3095 031e 91       		.byte	0x91
 3096 031f 74       		.sleb128 -12
 3097 0320 00       		.byte	0
 3098 0321 0C       		.uleb128 0xc
 3099 0322 AC000000 		.4byte	.LASF48
 3100 0326 01       		.byte	0x1
 3101 0327 B80A     		.2byte	0xab8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 117


 3102 0329 00000000 		.4byte	.LFB13
 3103 032d 1C000000 		.4byte	.LFE13-.LFB13
 3104 0331 01       		.uleb128 0x1
 3105 0332 9C       		.byte	0x9c
 3106 0333 47030000 		.4byte	0x347
 3107 0337 0A       		.uleb128 0xa
 3108 0338 FB010000 		.4byte	.LASF49
 3109 033c 01       		.byte	0x1
 3110 033d B80A     		.2byte	0xab8
 3111 033f 83000000 		.4byte	0x83
 3112 0343 02       		.uleb128 0x2
 3113 0344 91       		.byte	0x91
 3114 0345 74       		.sleb128 -12
 3115 0346 00       		.byte	0
 3116 0347 0D       		.uleb128 0xd
 3117 0348 CF030000 		.4byte	.LASF50
 3118 034c 01       		.byte	0x1
 3119 034d D10A     		.2byte	0xad1
 3120 034f C6000000 		.4byte	0xc6
 3121 0353 00000000 		.4byte	.LFB14
 3122 0357 48000000 		.4byte	.LFE14-.LFB14
 3123 035b 01       		.uleb128 0x1
 3124 035c 9C       		.byte	0x9c
 3125 035d 9E030000 		.4byte	0x39e
 3126 0361 0A       		.uleb128 0xa
 3127 0362 1C030000 		.4byte	.LASF51
 3128 0366 01       		.byte	0x1
 3129 0367 D10A     		.2byte	0xad1
 3130 0369 6B000000 		.4byte	0x6b
 3131 036d 02       		.uleb128 0x2
 3132 036e 91       		.byte	0x91
 3133 036f 6F       		.sleb128 -17
 3134 0370 0A       		.uleb128 0xa
 3135 0371 3F040000 		.4byte	.LASF52
 3136 0375 01       		.byte	0x1
 3137 0376 D10A     		.2byte	0xad1
 3138 0378 C6000000 		.4byte	0xc6
 3139 037c 02       		.uleb128 0x2
 3140 037d 91       		.byte	0x91
 3141 037e 68       		.sleb128 -24
 3142 037f 0B       		.uleb128 0xb
 3143 0380 53000000 		.4byte	.LASF53
 3144 0384 01       		.byte	0x1
 3145 0385 D30A     		.2byte	0xad3
 3146 0387 C6000000 		.4byte	0xc6
 3147 038b 02       		.uleb128 0x2
 3148 038c 91       		.byte	0x91
 3149 038d 70       		.sleb128 -16
 3150 038e 0B       		.uleb128 0xb
 3151 038f 00000000 		.4byte	.LASF54
 3152 0393 01       		.byte	0x1
 3153 0394 D40A     		.2byte	0xad4
 3154 0396 9E030000 		.4byte	0x39e
 3155 039a 02       		.uleb128 0x2
 3156 039b 91       		.byte	0x91
 3157 039c 74       		.sleb128 -12
 3158 039d 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 118


 3159 039e 06       		.uleb128 0x6
 3160 039f 04       		.byte	0x4
 3161 03a0 C6000000 		.4byte	0xc6
 3162 03a4 0D       		.uleb128 0xd
 3163 03a5 24050000 		.4byte	.LASF55
 3164 03a9 01       		.byte	0x1
 3165 03aa F30A     		.2byte	0xaf3
 3166 03ac C6000000 		.4byte	0xc6
 3167 03b0 00000000 		.4byte	.LFB15
 3168 03b4 34000000 		.4byte	.LFE15-.LFB15
 3169 03b8 01       		.uleb128 0x1
 3170 03b9 9C       		.byte	0x9c
 3171 03ba DD030000 		.4byte	0x3dd
 3172 03be 0A       		.uleb128 0xa
 3173 03bf 1C030000 		.4byte	.LASF51
 3174 03c3 01       		.byte	0x1
 3175 03c4 F30A     		.2byte	0xaf3
 3176 03c6 6B000000 		.4byte	0x6b
 3177 03ca 02       		.uleb128 0x2
 3178 03cb 91       		.byte	0x91
 3179 03cc 6F       		.sleb128 -17
 3180 03cd 0B       		.uleb128 0xb
 3181 03ce 00000000 		.4byte	.LASF54
 3182 03d2 01       		.byte	0x1
 3183 03d3 F50A     		.2byte	0xaf5
 3184 03d5 9E030000 		.4byte	0x39e
 3185 03d9 02       		.uleb128 0x2
 3186 03da 91       		.byte	0x91
 3187 03db 74       		.sleb128 -12
 3188 03dc 00       		.byte	0
 3189 03dd 0D       		.uleb128 0xd
 3190 03de 0D030000 		.4byte	.LASF56
 3191 03e2 01       		.byte	0x1
 3192 03e3 090B     		.2byte	0xb09
 3193 03e5 C6000000 		.4byte	0xc6
 3194 03e9 00000000 		.4byte	.LFB16
 3195 03ed 4C000000 		.4byte	.LFE16-.LFB16
 3196 03f1 01       		.uleb128 0x1
 3197 03f2 9C       		.byte	0x9c
 3198 03f3 34040000 		.4byte	0x434
 3199 03f7 0A       		.uleb128 0xa
 3200 03f8 1C030000 		.4byte	.LASF51
 3201 03fc 01       		.byte	0x1
 3202 03fd 090B     		.2byte	0xb09
 3203 03ff 6B000000 		.4byte	0x6b
 3204 0403 02       		.uleb128 0x2
 3205 0404 91       		.byte	0x91
 3206 0405 6F       		.sleb128 -17
 3207 0406 0A       		.uleb128 0xa
 3208 0407 3F040000 		.4byte	.LASF52
 3209 040b 01       		.byte	0x1
 3210 040c 090B     		.2byte	0xb09
 3211 040e C6000000 		.4byte	0xc6
 3212 0412 02       		.uleb128 0x2
 3213 0413 91       		.byte	0x91
 3214 0414 68       		.sleb128 -24
 3215 0415 0B       		.uleb128 0xb
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 119


 3216 0416 53000000 		.4byte	.LASF53
 3217 041a 01       		.byte	0x1
 3218 041b 0B0B     		.2byte	0xb0b
 3219 041d C6000000 		.4byte	0xc6
 3220 0421 02       		.uleb128 0x2
 3221 0422 91       		.byte	0x91
 3222 0423 70       		.sleb128 -16
 3223 0424 0B       		.uleb128 0xb
 3224 0425 00000000 		.4byte	.LASF54
 3225 0429 01       		.byte	0x1
 3226 042a 0C0B     		.2byte	0xb0c
 3227 042c 9E030000 		.4byte	0x39e
 3228 0430 02       		.uleb128 0x2
 3229 0431 91       		.byte	0x91
 3230 0432 74       		.sleb128 -12
 3231 0433 00       		.byte	0
 3232 0434 0D       		.uleb128 0xd
 3233 0435 CE040000 		.4byte	.LASF57
 3234 0439 01       		.byte	0x1
 3235 043a 250B     		.2byte	0xb25
 3236 043c C6000000 		.4byte	0xc6
 3237 0440 00000000 		.4byte	.LFB17
 3238 0444 36000000 		.4byte	.LFE17-.LFB17
 3239 0448 01       		.uleb128 0x1
 3240 0449 9C       		.byte	0x9c
 3241 044a 6D040000 		.4byte	0x46d
 3242 044e 0A       		.uleb128 0xa
 3243 044f 1C030000 		.4byte	.LASF51
 3244 0453 01       		.byte	0x1
 3245 0454 250B     		.2byte	0xb25
 3246 0456 6B000000 		.4byte	0x6b
 3247 045a 02       		.uleb128 0x2
 3248 045b 91       		.byte	0x91
 3249 045c 6F       		.sleb128 -17
 3250 045d 0B       		.uleb128 0xb
 3251 045e 00000000 		.4byte	.LASF54
 3252 0462 01       		.byte	0x1
 3253 0463 270B     		.2byte	0xb27
 3254 0465 9E030000 		.4byte	0x39e
 3255 0469 02       		.uleb128 0x2
 3256 046a 91       		.byte	0x91
 3257 046b 74       		.sleb128 -12
 3258 046c 00       		.byte	0
 3259 046d 09       		.uleb128 0x9
 3260 046e 96040000 		.4byte	.LASF58
 3261 0472 01       		.byte	0x1
 3262 0473 380B     		.2byte	0xb38
 3263 0475 00000000 		.4byte	.LFB18
 3264 0479 A8000000 		.4byte	.LFE18-.LFB18
 3265 047d 01       		.uleb128 0x1
 3266 047e 9C       		.byte	0x9c
 3267 047f CF040000 		.4byte	0x4cf
 3268 0483 0A       		.uleb128 0xa
 3269 0484 1C030000 		.4byte	.LASF51
 3270 0488 01       		.byte	0x1
 3271 0489 380B     		.2byte	0xb38
 3272 048b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 120


 3273 048f 02       		.uleb128 0x2
 3274 0490 91       		.byte	0x91
 3275 0491 5F       		.sleb128 -33
 3276 0492 0A       		.uleb128 0xa
 3277 0493 23030000 		.4byte	.LASF59
 3278 0497 01       		.byte	0x1
 3279 0498 380B     		.2byte	0xb38
 3280 049a 6B000000 		.4byte	0x6b
 3281 049e 02       		.uleb128 0x2
 3282 049f 91       		.byte	0x91
 3283 04a0 5E       		.sleb128 -34
 3284 04a1 0B       		.uleb128 0xb
 3285 04a2 B7020000 		.4byte	.LASF23
 3286 04a6 01       		.byte	0x1
 3287 04a7 3A0B     		.2byte	0xb3a
 3288 04a9 6B000000 		.4byte	0x6b
 3289 04ad 02       		.uleb128 0x2
 3290 04ae 91       		.byte	0x91
 3291 04af 6B       		.sleb128 -21
 3292 04b0 0B       		.uleb128 0xb
 3293 04b1 D7010000 		.4byte	.LASF60
 3294 04b5 01       		.byte	0x1
 3295 04b6 3B0B     		.2byte	0xb3b
 3296 04b8 83000000 		.4byte	0x83
 3297 04bc 02       		.uleb128 0x2
 3298 04bd 91       		.byte	0x91
 3299 04be 6C       		.sleb128 -20
 3300 04bf 0B       		.uleb128 0xb
 3301 04c0 44020000 		.4byte	.LASF61
 3302 04c4 01       		.byte	0x1
 3303 04c5 3C0B     		.2byte	0xb3c
 3304 04c7 83000000 		.4byte	0x83
 3305 04cb 02       		.uleb128 0x2
 3306 04cc 91       		.byte	0x91
 3307 04cd 64       		.sleb128 -28
 3308 04ce 00       		.byte	0
 3309 04cf 0D       		.uleb128 0xd
 3310 04d0 18020000 		.4byte	.LASF62
 3311 04d4 01       		.byte	0x1
 3312 04d5 5A0B     		.2byte	0xb5a
 3313 04d7 6B000000 		.4byte	0x6b
 3314 04db 00000000 		.4byte	.LFB19
 3315 04df 58000000 		.4byte	.LFE19-.LFB19
 3316 04e3 01       		.uleb128 0x1
 3317 04e4 9C       		.byte	0x9c
 3318 04e5 08050000 		.4byte	0x508
 3319 04e9 0A       		.uleb128 0xa
 3320 04ea 1C030000 		.4byte	.LASF51
 3321 04ee 01       		.byte	0x1
 3322 04ef 5A0B     		.2byte	0xb5a
 3323 04f1 6B000000 		.4byte	0x6b
 3324 04f5 02       		.uleb128 0x2
 3325 04f6 91       		.byte	0x91
 3326 04f7 6F       		.sleb128 -17
 3327 04f8 0B       		.uleb128 0xb
 3328 04f9 23030000 		.4byte	.LASF59
 3329 04fd 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 121


 3330 04fe 5C0B     		.2byte	0xb5c
 3331 0500 6B000000 		.4byte	0x6b
 3332 0504 02       		.uleb128 0x2
 3333 0505 91       		.byte	0x91
 3334 0506 77       		.sleb128 -9
 3335 0507 00       		.byte	0
 3336 0508 0C       		.uleb128 0xc
 3337 0509 18050000 		.4byte	.LASF63
 3338 050d 01       		.byte	0x1
 3339 050e 6F0B     		.2byte	0xb6f
 3340 0510 00000000 		.4byte	.LFB20
 3341 0514 2C000000 		.4byte	.LFE20-.LFB20
 3342 0518 01       		.uleb128 0x1
 3343 0519 9C       		.byte	0x9c
 3344 051a 2E050000 		.4byte	0x52e
 3345 051e 0A       		.uleb128 0xa
 3346 051f 1C030000 		.4byte	.LASF51
 3347 0523 01       		.byte	0x1
 3348 0524 6F0B     		.2byte	0xb6f
 3349 0526 6B000000 		.4byte	0x6b
 3350 052a 02       		.uleb128 0x2
 3351 052b 91       		.byte	0x91
 3352 052c 77       		.sleb128 -9
 3353 052d 00       		.byte	0
 3354 052e 10       		.uleb128 0x10
 3355 052f E2000000 		.4byte	.LASF64
 3356 0533 01       		.byte	0x1
 3357 0534 810B     		.2byte	0xb81
 3358 0536 6B000000 		.4byte	0x6b
 3359 053a 00000000 		.4byte	.LFB21
 3360 053e 30000000 		.4byte	.LFE21-.LFB21
 3361 0542 01       		.uleb128 0x1
 3362 0543 9C       		.byte	0x9c
 3363 0544 58050000 		.4byte	0x558
 3364 0548 0A       		.uleb128 0xa
 3365 0549 1C030000 		.4byte	.LASF51
 3366 054d 01       		.byte	0x1
 3367 054e 810B     		.2byte	0xb81
 3368 0550 6B000000 		.4byte	0x6b
 3369 0554 02       		.uleb128 0x2
 3370 0555 91       		.byte	0x91
 3371 0556 77       		.sleb128 -9
 3372 0557 00       		.byte	0
 3373 0558 0C       		.uleb128 0xc
 3374 0559 92010000 		.4byte	.LASF65
 3375 055d 01       		.byte	0x1
 3376 055e 910B     		.2byte	0xb91
 3377 0560 00000000 		.4byte	.LFB22
 3378 0564 2C000000 		.4byte	.LFE22-.LFB22
 3379 0568 01       		.uleb128 0x1
 3380 0569 9C       		.byte	0x9c
 3381 056a 7E050000 		.4byte	0x57e
 3382 056e 0A       		.uleb128 0xa
 3383 056f 1C030000 		.4byte	.LASF51
 3384 0573 01       		.byte	0x1
 3385 0574 910B     		.2byte	0xb91
 3386 0576 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 122


 3387 057a 02       		.uleb128 0x2
 3388 057b 91       		.byte	0x91
 3389 057c 77       		.sleb128 -9
 3390 057d 00       		.byte	0
 3391 057e 0C       		.uleb128 0xc
 3392 057f D6020000 		.4byte	.LASF66
 3393 0583 01       		.byte	0x1
 3394 0584 9F0B     		.2byte	0xb9f
 3395 0586 00000000 		.4byte	.LFB23
 3396 058a 2C000000 		.4byte	.LFE23-.LFB23
 3397 058e 01       		.uleb128 0x1
 3398 058f 9C       		.byte	0x9c
 3399 0590 A4050000 		.4byte	0x5a4
 3400 0594 0A       		.uleb128 0xa
 3401 0595 1C030000 		.4byte	.LASF51
 3402 0599 01       		.byte	0x1
 3403 059a 9F0B     		.2byte	0xb9f
 3404 059c 6B000000 		.4byte	0x6b
 3405 05a0 02       		.uleb128 0x2
 3406 05a1 91       		.byte	0x91
 3407 05a2 77       		.sleb128 -9
 3408 05a3 00       		.byte	0
 3409 05a4 0C       		.uleb128 0xc
 3410 05a5 21040000 		.4byte	.LASF67
 3411 05a9 01       		.byte	0x1
 3412 05aa AE0B     		.2byte	0xbae
 3413 05ac 00000000 		.4byte	.LFB24
 3414 05b0 2C000000 		.4byte	.LFE24-.LFB24
 3415 05b4 01       		.uleb128 0x1
 3416 05b5 9C       		.byte	0x9c
 3417 05b6 CA050000 		.4byte	0x5ca
 3418 05ba 0A       		.uleb128 0xa
 3419 05bb 1C030000 		.4byte	.LASF51
 3420 05bf 01       		.byte	0x1
 3421 05c0 AE0B     		.2byte	0xbae
 3422 05c2 6B000000 		.4byte	0x6b
 3423 05c6 02       		.uleb128 0x2
 3424 05c7 91       		.byte	0x91
 3425 05c8 77       		.sleb128 -9
 3426 05c9 00       		.byte	0
 3427 05ca 0C       		.uleb128 0xc
 3428 05cb F9040000 		.4byte	.LASF68
 3429 05cf 01       		.byte	0x1
 3430 05d0 BD0B     		.2byte	0xbbd
 3431 05d2 00000000 		.4byte	.LFB25
 3432 05d6 16000000 		.4byte	.LFE25-.LFB25
 3433 05da 01       		.uleb128 0x1
 3434 05db 9C       		.byte	0x9c
 3435 05dc F0050000 		.4byte	0x5f0
 3436 05e0 0A       		.uleb128 0xa
 3437 05e1 4A050000 		.4byte	.LASF44
 3438 05e5 01       		.byte	0x1
 3439 05e6 BD0B     		.2byte	0xbbd
 3440 05e8 6B000000 		.4byte	0x6b
 3441 05ec 02       		.uleb128 0x2
 3442 05ed 91       		.byte	0x91
 3443 05ee 77       		.sleb128 -9
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 123


 3444 05ef 00       		.byte	0
 3445 05f0 0E       		.uleb128 0xe
 3446 05f1 B9000000 		.4byte	.LASF69
 3447 05f5 01       		.byte	0x1
 3448 05f6 D50B     		.2byte	0xbd5
 3449 05f8 00000000 		.4byte	.LFB26
 3450 05fc 24000000 		.4byte	.LFE26-.LFB26
 3451 0600 01       		.uleb128 0x1
 3452 0601 9C       		.byte	0x9c
 3453 0602 09       		.uleb128 0x9
 3454 0603 BB050000 		.4byte	.LASF70
 3455 0607 01       		.byte	0x1
 3456 0608 E90B     		.2byte	0xbe9
 3457 060a 00000000 		.4byte	.LFB27
 3458 060e 4C000000 		.4byte	.LFE27-.LFB27
 3459 0612 01       		.uleb128 0x1
 3460 0613 9C       		.byte	0x9c
 3461 0614 28060000 		.4byte	0x628
 3462 0618 0A       		.uleb128 0xa
 3463 0619 DD040000 		.4byte	.LASF71
 3464 061d 01       		.byte	0x1
 3465 061e E90B     		.2byte	0xbe9
 3466 0620 83000000 		.4byte	0x83
 3467 0624 02       		.uleb128 0x2
 3468 0625 91       		.byte	0x91
 3469 0626 74       		.sleb128 -12
 3470 0627 00       		.byte	0
 3471 0628 09       		.uleb128 0x9
 3472 0629 40050000 		.4byte	.LASF72
 3473 062d 01       		.byte	0x1
 3474 062e 000C     		.2byte	0xc00
 3475 0630 00000000 		.4byte	.LFB28
 3476 0634 28000000 		.4byte	.LFE28-.LFB28
 3477 0638 01       		.uleb128 0x1
 3478 0639 9C       		.byte	0x9c
 3479 063a 4E060000 		.4byte	0x64e
 3480 063e 0A       		.uleb128 0xa
 3481 063f 53060000 		.4byte	.LASF73
 3482 0643 01       		.byte	0x1
 3483 0644 000C     		.2byte	0xc00
 3484 0646 77000000 		.4byte	0x77
 3485 064a 02       		.uleb128 0x2
 3486 064b 91       		.byte	0x91
 3487 064c 76       		.sleb128 -10
 3488 064d 00       		.byte	0
 3489 064e 09       		.uleb128 0x9
 3490 064f 0F010000 		.4byte	.LASF74
 3491 0653 01       		.byte	0x1
 3492 0654 0E0C     		.2byte	0xc0e
 3493 0656 00000000 		.4byte	.LFB29
 3494 065a 84000000 		.4byte	.LFE29-.LFB29
 3495 065e 01       		.uleb128 0x1
 3496 065f 9C       		.byte	0x9c
 3497 0660 74060000 		.4byte	0x674
 3498 0664 0A       		.uleb128 0xa
 3499 0665 0A010000 		.4byte	.LASF33
 3500 0669 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 124


 3501 066a 0E0C     		.2byte	0xc0e
 3502 066c 83000000 		.4byte	0x83
 3503 0670 02       		.uleb128 0x2
 3504 0671 91       		.byte	0x91
 3505 0672 74       		.sleb128 -12
 3506 0673 00       		.byte	0
 3507 0674 11       		.uleb128 0x11
 3508 0675 FC030000 		.4byte	.LASF75
 3509 0679 01       		.byte	0x1
 3510 067a 2E0C     		.2byte	0xc2e
 3511 067c 00000000 		.4byte	.LFB30
 3512 0680 24000000 		.4byte	.LFE30-.LFB30
 3513 0684 01       		.uleb128 0x1
 3514 0685 9C       		.byte	0x9c
 3515 0686 09       		.uleb128 0x9
 3516 0687 36020000 		.4byte	.LASF76
 3517 068b 01       		.byte	0x1
 3518 068c 4B0C     		.2byte	0xc4b
 3519 068e 00000000 		.4byte	.LFB31
 3520 0692 5C000000 		.4byte	.LFE31-.LFB31
 3521 0696 01       		.uleb128 0x1
 3522 0697 9C       		.byte	0x9c
 3523 0698 AA060000 		.4byte	0x6aa
 3524 069c 12       		.uleb128 0x12
 3525 069d 6900     		.ascii	"i\000"
 3526 069f 01       		.byte	0x1
 3527 06a0 4D0C     		.2byte	0xc4d
 3528 06a2 83000000 		.4byte	0x83
 3529 06a6 02       		.uleb128 0x2
 3530 06a7 91       		.byte	0x91
 3531 06a8 74       		.sleb128 -12
 3532 06a9 00       		.byte	0
 3533 06aa 11       		.uleb128 0x11
 3534 06ab 63050000 		.4byte	.LASF77
 3535 06af 01       		.byte	0x1
 3536 06b0 690C     		.2byte	0xc69
 3537 06b2 00000000 		.4byte	.LFB32
 3538 06b6 20000000 		.4byte	.LFE32-.LFB32
 3539 06ba 01       		.uleb128 0x1
 3540 06bb 9C       		.byte	0x9c
 3541 06bc 0E       		.uleb128 0xe
 3542 06bd FC050000 		.4byte	.LASF78
 3543 06c1 01       		.byte	0x1
 3544 06c2 7A0C     		.2byte	0xc7a
 3545 06c4 00000000 		.4byte	.LFB33
 3546 06c8 1C000000 		.4byte	.LFE33-.LFB33
 3547 06cc 01       		.uleb128 0x1
 3548 06cd 9C       		.byte	0x9c
 3549 06ce 0E       		.uleb128 0xe
 3550 06cf C9000000 		.4byte	.LASF79
 3551 06d3 01       		.byte	0x1
 3552 06d4 8A0C     		.2byte	0xc8a
 3553 06d6 00000000 		.4byte	.LFB34
 3554 06da 1C000000 		.4byte	.LFE34-.LFB34
 3555 06de 01       		.uleb128 0x1
 3556 06df 9C       		.byte	0x9c
 3557 06e0 0E       		.uleb128 0xe
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 125


 3558 06e1 C3050000 		.4byte	.LASF80
 3559 06e5 01       		.byte	0x1
 3560 06e6 9A0C     		.2byte	0xc9a
 3561 06e8 00000000 		.4byte	.LFB35
 3562 06ec 1C000000 		.4byte	.LFE35-.LFB35
 3563 06f0 01       		.uleb128 0x1
 3564 06f1 9C       		.byte	0x9c
 3565 06f2 0C       		.uleb128 0xc
 3566 06f3 67060000 		.4byte	.LASF81
 3567 06f7 01       		.byte	0x1
 3568 06f8 AB0C     		.2byte	0xcab
 3569 06fa 00000000 		.4byte	.LFB36
 3570 06fe 20000000 		.4byte	.LFE36-.LFB36
 3571 0702 01       		.uleb128 0x1
 3572 0703 9C       		.byte	0x9c
 3573 0704 18070000 		.4byte	0x718
 3574 0708 0A       		.uleb128 0xa
 3575 0709 44020000 		.4byte	.LASF61
 3576 070d 01       		.byte	0x1
 3577 070e AB0C     		.2byte	0xcab
 3578 0710 83000000 		.4byte	0x83
 3579 0714 02       		.uleb128 0x2
 3580 0715 91       		.byte	0x91
 3581 0716 74       		.sleb128 -12
 3582 0717 00       		.byte	0
 3583 0718 0F       		.uleb128 0xf
 3584 0719 76010000 		.4byte	.LASF83
 3585 071d 01       		.byte	0x1
 3586 071e BB0C     		.2byte	0xcbb
 3587 0720 83000000 		.4byte	0x83
 3588 0724 00000000 		.4byte	.LFB37
 3589 0728 18000000 		.4byte	.LFE37-.LFB37
 3590 072c 01       		.uleb128 0x1
 3591 072d 9C       		.byte	0x9c
 3592 072e 0F       		.uleb128 0xf
 3593 072f 76040000 		.4byte	.LASF84
 3594 0733 01       		.byte	0x1
 3595 0734 CB0C     		.2byte	0xccb
 3596 0736 83000000 		.4byte	0x83
 3597 073a 00000000 		.4byte	.LFB38
 3598 073e 18000000 		.4byte	.LFE38-.LFB38
 3599 0742 01       		.uleb128 0x1
 3600 0743 9C       		.byte	0x9c
 3601 0744 0F       		.uleb128 0xf
 3602 0745 58020000 		.4byte	.LASF85
 3603 0749 01       		.byte	0x1
 3604 074a 1B0D     		.2byte	0xd1b
 3605 074c 83000000 		.4byte	0x83
 3606 0750 00000000 		.4byte	.LFB39
 3607 0754 18000000 		.4byte	.LFE39-.LFB39
 3608 0758 01       		.uleb128 0x1
 3609 0759 9C       		.byte	0x9c
 3610 075a 0E       		.uleb128 0xe
 3611 075b 7B020000 		.4byte	.LASF86
 3612 075f 01       		.byte	0x1
 3613 0760 280D     		.2byte	0xd28
 3614 0762 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 126


 3615 0766 14000000 		.4byte	.LFE40-.LFB40
 3616 076a 01       		.uleb128 0x1
 3617 076b 9C       		.byte	0x9c
 3618 076c 10       		.uleb128 0x10
 3619 076d 8A050000 		.4byte	.LASF87
 3620 0771 01       		.byte	0x1
 3621 0772 4B0D     		.2byte	0xd4b
 3622 0774 E7000000 		.4byte	0xe7
 3623 0778 00000000 		.4byte	.LFB41
 3624 077c 2C000000 		.4byte	.LFE41-.LFB41
 3625 0780 01       		.uleb128 0x1
 3626 0781 9C       		.byte	0x9c
 3627 0782 B4070000 		.4byte	0x7b4
 3628 0786 0A       		.uleb128 0xa
 3629 0787 1C030000 		.4byte	.LASF51
 3630 078b 01       		.byte	0x1
 3631 078c 4B0D     		.2byte	0xd4b
 3632 078e 83000000 		.4byte	0x83
 3633 0792 02       		.uleb128 0x2
 3634 0793 91       		.byte	0x91
 3635 0794 6C       		.sleb128 -20
 3636 0795 0A       		.uleb128 0xa
 3637 0796 5C040000 		.4byte	.LASF88
 3638 079a 01       		.byte	0x1
 3639 079b 4B0D     		.2byte	0xd4b
 3640 079d E7000000 		.4byte	0xe7
 3641 07a1 02       		.uleb128 0x2
 3642 07a2 91       		.byte	0x91
 3643 07a3 68       		.sleb128 -24
 3644 07a4 0B       		.uleb128 0xb
 3645 07a5 5A000000 		.4byte	.LASF89
 3646 07a9 01       		.byte	0x1
 3647 07aa 4D0D     		.2byte	0xd4d
 3648 07ac E7000000 		.4byte	0xe7
 3649 07b0 02       		.uleb128 0x2
 3650 07b1 91       		.byte	0x91
 3651 07b2 74       		.sleb128 -12
 3652 07b3 00       		.byte	0
 3653 07b4 10       		.uleb128 0x10
 3654 07b5 9F010000 		.4byte	.LASF90
 3655 07b9 01       		.byte	0x1
 3656 07ba 630D     		.2byte	0xd63
 3657 07bc E7000000 		.4byte	0xe7
 3658 07c0 00000000 		.4byte	.LFB42
 3659 07c4 1C000000 		.4byte	.LFE42-.LFB42
 3660 07c8 01       		.uleb128 0x1
 3661 07c9 9C       		.byte	0x9c
 3662 07ca DE070000 		.4byte	0x7de
 3663 07ce 0A       		.uleb128 0xa
 3664 07cf 1C030000 		.4byte	.LASF51
 3665 07d3 01       		.byte	0x1
 3666 07d4 630D     		.2byte	0xd63
 3667 07d6 83000000 		.4byte	0x83
 3668 07da 02       		.uleb128 0x2
 3669 07db 91       		.byte	0x91
 3670 07dc 74       		.sleb128 -12
 3671 07dd 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 127


 3672 07de 13       		.uleb128 0x13
 3673 07df 7A060000 		.4byte	.LASF104
 3674 07e3 01       		.byte	0x1
 3675 07e4 700D     		.2byte	0xd70
 3676 07e6 00000000 		.4byte	.LFB43
 3677 07ea 44000000 		.4byte	.LFE43-.LFB43
 3678 07ee 01       		.uleb128 0x1
 3679 07ef 9C       		.byte	0x9c
 3680 07f0 02080000 		.4byte	0x802
 3681 07f4 12       		.uleb128 0x12
 3682 07f5 6900     		.ascii	"i\000"
 3683 07f7 01       		.byte	0x1
 3684 07f8 720D     		.2byte	0xd72
 3685 07fa 83000000 		.4byte	0x83
 3686 07fe 02       		.uleb128 0x2
 3687 07ff 91       		.byte	0x91
 3688 0800 74       		.sleb128 -12
 3689 0801 00       		.byte	0
 3690 0802 0C       		.uleb128 0xc
 3691 0803 4A020000 		.4byte	.LASF91
 3692 0807 01       		.byte	0x1
 3693 0808 900D     		.2byte	0xd90
 3694 080a 00000000 		.4byte	.LFB44
 3695 080e C0000000 		.4byte	.LFE44-.LFB44
 3696 0812 01       		.uleb128 0x1
 3697 0813 9C       		.byte	0x9c
 3698 0814 28080000 		.4byte	0x828
 3699 0818 0A       		.uleb128 0xa
 3700 0819 B2050000 		.4byte	.LASF92
 3701 081d 01       		.byte	0x1
 3702 081e 900D     		.2byte	0xd90
 3703 0820 28080000 		.4byte	0x828
 3704 0824 02       		.uleb128 0x2
 3705 0825 91       		.byte	0x91
 3706 0826 74       		.sleb128 -12
 3707 0827 00       		.byte	0
 3708 0828 06       		.uleb128 0x6
 3709 0829 04       		.byte	0x4
 3710 082a 83000000 		.4byte	0x83
 3711 082e 14       		.uleb128 0x14
 3712 082f E7000000 		.4byte	0xe7
 3713 0833 3E080000 		.4byte	0x83e
 3714 0837 15       		.uleb128 0x15
 3715 0838 E0000000 		.4byte	0xe0
 3716 083c 04       		.byte	0x4
 3717 083d 00       		.byte	0
 3718 083e 16       		.uleb128 0x16
 3719 083f 9F050000 		.4byte	.LASF93
 3720 0843 01       		.byte	0x1
 3721 0844 22       		.byte	0x22
 3722 0845 2E080000 		.4byte	0x82e
 3723 0849 05       		.uleb128 0x5
 3724 084a 03       		.byte	0x3
 3725 084b 00000000 		.4byte	CySysTickCallbacks
 3726 084f 17       		.uleb128 0x17
 3727 0850 88040000 		.4byte	.LASF94
 3728 0854 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 128


 3729 0855 1B       		.byte	0x1b
 3730 0856 83000000 		.4byte	0x83
 3731 085a 05       		.uleb128 0x5
 3732 085b 03       		.byte	0x3
 3733 085c 00000000 		.4byte	cydelayFreqHz
 3734 0860 17       		.uleb128 0x17
 3735 0861 BA010000 		.4byte	.LASF95
 3736 0865 01       		.byte	0x1
 3737 0866 1C       		.byte	0x1c
 3738 0867 83000000 		.4byte	0x83
 3739 086b 05       		.uleb128 0x5
 3740 086c 03       		.byte	0x3
 3741 086d 00000000 		.4byte	cydelayFreqKhz
 3742 0871 17       		.uleb128 0x17
 3743 0872 ED050000 		.4byte	.LASF96
 3744 0876 01       		.byte	0x1
 3745 0877 1D       		.byte	0x1d
 3746 0878 6B000000 		.4byte	0x6b
 3747 087c 05       		.uleb128 0x5
 3748 087d 03       		.byte	0x3
 3749 087e 00000000 		.4byte	cydelayFreqMhz
 3750 0882 17       		.uleb128 0x17
 3751 0883 29020000 		.4byte	.LASF97
 3752 0887 01       		.byte	0x1
 3753 0888 1E       		.byte	0x1e
 3754 0889 83000000 		.4byte	0x83
 3755 088d 05       		.uleb128 0x5
 3756 088e 03       		.byte	0x3
 3757 088f 00000000 		.4byte	cydelay32kMs
 3758 0893 17       		.uleb128 0x17
 3759 0894 9B000000 		.4byte	.LASF98
 3760 0898 01       		.byte	0x1
 3761 0899 36       		.byte	0x36
 3762 089a 83000000 		.4byte	0x83
 3763 089e 05       		.uleb128 0x5
 3764 089f 03       		.byte	0x3
 3765 08a0 00000000 		.4byte	CySysTickInitVar
 3766 08a4 14       		.uleb128 0x14
 3767 08a5 B4080000 		.4byte	0x8b4
 3768 08a9 B4080000 		.4byte	0x8b4
 3769 08ad 15       		.uleb128 0x15
 3770 08ae E0000000 		.4byte	0xe0
 3771 08b2 2D       		.byte	0x2d
 3772 08b3 00       		.byte	0
 3773 08b4 18       		.uleb128 0x18
 3774 08b5 6B000000 		.4byte	0x6b
 3775 08b9 17       		.uleb128 0x17
 3776 08ba 65040000 		.4byte	.LASF99
 3777 08be 01       		.byte	0x1
 3778 08bf 3B       		.byte	0x3b
 3779 08c0 CA080000 		.4byte	0x8ca
 3780 08c4 05       		.uleb128 0x5
 3781 08c5 03       		.byte	0x3
 3782 08c6 00000000 		.4byte	cyImoFreqMhz2Reg
 3783 08ca 18       		.uleb128 0x18
 3784 08cb A4080000 		.4byte	0x8a4
 3785 08cf 17       		.uleb128 0x17
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 129


 3786 08d0 40000000 		.4byte	.LASF100
 3787 08d4 01       		.byte	0x1
 3788 08d5 51       		.byte	0x51
 3789 08d6 83000000 		.4byte	0x83
 3790 08da 05       		.uleb128 0x5
 3791 08db 03       		.byte	0x3
 3792 08dc 00000000 		.4byte	CySysClkPumpConfig
 3793 08e0 00       		.byte	0
 3794              		.section	.debug_abbrev,"",%progbits
 3795              	.Ldebug_abbrev0:
 3796 0000 01       		.uleb128 0x1
 3797 0001 11       		.uleb128 0x11
 3798 0002 01       		.byte	0x1
 3799 0003 25       		.uleb128 0x25
 3800 0004 0E       		.uleb128 0xe
 3801 0005 13       		.uleb128 0x13
 3802 0006 0B       		.uleb128 0xb
 3803 0007 03       		.uleb128 0x3
 3804 0008 0E       		.uleb128 0xe
 3805 0009 1B       		.uleb128 0x1b
 3806 000a 0E       		.uleb128 0xe
 3807 000b 55       		.uleb128 0x55
 3808 000c 17       		.uleb128 0x17
 3809 000d 11       		.uleb128 0x11
 3810 000e 01       		.uleb128 0x1
 3811 000f 10       		.uleb128 0x10
 3812 0010 17       		.uleb128 0x17
 3813 0011 00       		.byte	0
 3814 0012 00       		.byte	0
 3815 0013 02       		.uleb128 0x2
 3816 0014 24       		.uleb128 0x24
 3817 0015 00       		.byte	0
 3818 0016 0B       		.uleb128 0xb
 3819 0017 0B       		.uleb128 0xb
 3820 0018 3E       		.uleb128 0x3e
 3821 0019 0B       		.uleb128 0xb
 3822 001a 03       		.uleb128 0x3
 3823 001b 0E       		.uleb128 0xe
 3824 001c 00       		.byte	0
 3825 001d 00       		.byte	0
 3826 001e 03       		.uleb128 0x3
 3827 001f 24       		.uleb128 0x24
 3828 0020 00       		.byte	0
 3829 0021 0B       		.uleb128 0xb
 3830 0022 0B       		.uleb128 0xb
 3831 0023 3E       		.uleb128 0x3e
 3832 0024 0B       		.uleb128 0xb
 3833 0025 03       		.uleb128 0x3
 3834 0026 08       		.uleb128 0x8
 3835 0027 00       		.byte	0
 3836 0028 00       		.byte	0
 3837 0029 04       		.uleb128 0x4
 3838 002a 16       		.uleb128 0x16
 3839 002b 00       		.byte	0
 3840 002c 03       		.uleb128 0x3
 3841 002d 0E       		.uleb128 0xe
 3842 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 130


 3843 002f 0B       		.uleb128 0xb
 3844 0030 3B       		.uleb128 0x3b
 3845 0031 05       		.uleb128 0x5
 3846 0032 49       		.uleb128 0x49
 3847 0033 13       		.uleb128 0x13
 3848 0034 00       		.byte	0
 3849 0035 00       		.byte	0
 3850 0036 05       		.uleb128 0x5
 3851 0037 35       		.uleb128 0x35
 3852 0038 00       		.byte	0
 3853 0039 49       		.uleb128 0x49
 3854 003a 13       		.uleb128 0x13
 3855 003b 00       		.byte	0
 3856 003c 00       		.byte	0
 3857 003d 06       		.uleb128 0x6
 3858 003e 0F       		.uleb128 0xf
 3859 003f 00       		.byte	0
 3860 0040 0B       		.uleb128 0xb
 3861 0041 0B       		.uleb128 0xb
 3862 0042 49       		.uleb128 0x49
 3863 0043 13       		.uleb128 0x13
 3864 0044 00       		.byte	0
 3865 0045 00       		.byte	0
 3866 0046 07       		.uleb128 0x7
 3867 0047 15       		.uleb128 0x15
 3868 0048 00       		.byte	0
 3869 0049 27       		.uleb128 0x27
 3870 004a 19       		.uleb128 0x19
 3871 004b 00       		.byte	0
 3872 004c 00       		.byte	0
 3873 004d 08       		.uleb128 0x8
 3874 004e 2E       		.uleb128 0x2e
 3875 004f 00       		.byte	0
 3876 0050 3F       		.uleb128 0x3f
 3877 0051 19       		.uleb128 0x19
 3878 0052 03       		.uleb128 0x3
 3879 0053 0E       		.uleb128 0xe
 3880 0054 3A       		.uleb128 0x3a
 3881 0055 0B       		.uleb128 0xb
 3882 0056 3B       		.uleb128 0x3b
 3883 0057 0B       		.uleb128 0xb
 3884 0058 27       		.uleb128 0x27
 3885 0059 19       		.uleb128 0x19
 3886 005a 11       		.uleb128 0x11
 3887 005b 01       		.uleb128 0x1
 3888 005c 12       		.uleb128 0x12
 3889 005d 06       		.uleb128 0x6
 3890 005e 40       		.uleb128 0x40
 3891 005f 18       		.uleb128 0x18
 3892 0060 9742     		.uleb128 0x2117
 3893 0062 19       		.uleb128 0x19
 3894 0063 00       		.byte	0
 3895 0064 00       		.byte	0
 3896 0065 09       		.uleb128 0x9
 3897 0066 2E       		.uleb128 0x2e
 3898 0067 01       		.byte	0x1
 3899 0068 3F       		.uleb128 0x3f
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 131


 3900 0069 19       		.uleb128 0x19
 3901 006a 03       		.uleb128 0x3
 3902 006b 0E       		.uleb128 0xe
 3903 006c 3A       		.uleb128 0x3a
 3904 006d 0B       		.uleb128 0xb
 3905 006e 3B       		.uleb128 0x3b
 3906 006f 05       		.uleb128 0x5
 3907 0070 27       		.uleb128 0x27
 3908 0071 19       		.uleb128 0x19
 3909 0072 11       		.uleb128 0x11
 3910 0073 01       		.uleb128 0x1
 3911 0074 12       		.uleb128 0x12
 3912 0075 06       		.uleb128 0x6
 3913 0076 40       		.uleb128 0x40
 3914 0077 18       		.uleb128 0x18
 3915 0078 9642     		.uleb128 0x2116
 3916 007a 19       		.uleb128 0x19
 3917 007b 01       		.uleb128 0x1
 3918 007c 13       		.uleb128 0x13
 3919 007d 00       		.byte	0
 3920 007e 00       		.byte	0
 3921 007f 0A       		.uleb128 0xa
 3922 0080 05       		.uleb128 0x5
 3923 0081 00       		.byte	0
 3924 0082 03       		.uleb128 0x3
 3925 0083 0E       		.uleb128 0xe
 3926 0084 3A       		.uleb128 0x3a
 3927 0085 0B       		.uleb128 0xb
 3928 0086 3B       		.uleb128 0x3b
 3929 0087 05       		.uleb128 0x5
 3930 0088 49       		.uleb128 0x49
 3931 0089 13       		.uleb128 0x13
 3932 008a 02       		.uleb128 0x2
 3933 008b 18       		.uleb128 0x18
 3934 008c 00       		.byte	0
 3935 008d 00       		.byte	0
 3936 008e 0B       		.uleb128 0xb
 3937 008f 34       		.uleb128 0x34
 3938 0090 00       		.byte	0
 3939 0091 03       		.uleb128 0x3
 3940 0092 0E       		.uleb128 0xe
 3941 0093 3A       		.uleb128 0x3a
 3942 0094 0B       		.uleb128 0xb
 3943 0095 3B       		.uleb128 0x3b
 3944 0096 05       		.uleb128 0x5
 3945 0097 49       		.uleb128 0x49
 3946 0098 13       		.uleb128 0x13
 3947 0099 02       		.uleb128 0x2
 3948 009a 18       		.uleb128 0x18
 3949 009b 00       		.byte	0
 3950 009c 00       		.byte	0
 3951 009d 0C       		.uleb128 0xc
 3952 009e 2E       		.uleb128 0x2e
 3953 009f 01       		.byte	0x1
 3954 00a0 3F       		.uleb128 0x3f
 3955 00a1 19       		.uleb128 0x19
 3956 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 132


 3957 00a3 0E       		.uleb128 0xe
 3958 00a4 3A       		.uleb128 0x3a
 3959 00a5 0B       		.uleb128 0xb
 3960 00a6 3B       		.uleb128 0x3b
 3961 00a7 05       		.uleb128 0x5
 3962 00a8 27       		.uleb128 0x27
 3963 00a9 19       		.uleb128 0x19
 3964 00aa 11       		.uleb128 0x11
 3965 00ab 01       		.uleb128 0x1
 3966 00ac 12       		.uleb128 0x12
 3967 00ad 06       		.uleb128 0x6
 3968 00ae 40       		.uleb128 0x40
 3969 00af 18       		.uleb128 0x18
 3970 00b0 9742     		.uleb128 0x2117
 3971 00b2 19       		.uleb128 0x19
 3972 00b3 01       		.uleb128 0x1
 3973 00b4 13       		.uleb128 0x13
 3974 00b5 00       		.byte	0
 3975 00b6 00       		.byte	0
 3976 00b7 0D       		.uleb128 0xd
 3977 00b8 2E       		.uleb128 0x2e
 3978 00b9 01       		.byte	0x1
 3979 00ba 3F       		.uleb128 0x3f
 3980 00bb 19       		.uleb128 0x19
 3981 00bc 03       		.uleb128 0x3
 3982 00bd 0E       		.uleb128 0xe
 3983 00be 3A       		.uleb128 0x3a
 3984 00bf 0B       		.uleb128 0xb
 3985 00c0 3B       		.uleb128 0x3b
 3986 00c1 05       		.uleb128 0x5
 3987 00c2 27       		.uleb128 0x27
 3988 00c3 19       		.uleb128 0x19
 3989 00c4 49       		.uleb128 0x49
 3990 00c5 13       		.uleb128 0x13
 3991 00c6 11       		.uleb128 0x11
 3992 00c7 01       		.uleb128 0x1
 3993 00c8 12       		.uleb128 0x12
 3994 00c9 06       		.uleb128 0x6
 3995 00ca 40       		.uleb128 0x40
 3996 00cb 18       		.uleb128 0x18
 3997 00cc 9642     		.uleb128 0x2116
 3998 00ce 19       		.uleb128 0x19
 3999 00cf 01       		.uleb128 0x1
 4000 00d0 13       		.uleb128 0x13
 4001 00d1 00       		.byte	0
 4002 00d2 00       		.byte	0
 4003 00d3 0E       		.uleb128 0xe
 4004 00d4 2E       		.uleb128 0x2e
 4005 00d5 00       		.byte	0
 4006 00d6 3F       		.uleb128 0x3f
 4007 00d7 19       		.uleb128 0x19
 4008 00d8 03       		.uleb128 0x3
 4009 00d9 0E       		.uleb128 0xe
 4010 00da 3A       		.uleb128 0x3a
 4011 00db 0B       		.uleb128 0xb
 4012 00dc 3B       		.uleb128 0x3b
 4013 00dd 05       		.uleb128 0x5
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 133


 4014 00de 27       		.uleb128 0x27
 4015 00df 19       		.uleb128 0x19
 4016 00e0 11       		.uleb128 0x11
 4017 00e1 01       		.uleb128 0x1
 4018 00e2 12       		.uleb128 0x12
 4019 00e3 06       		.uleb128 0x6
 4020 00e4 40       		.uleb128 0x40
 4021 00e5 18       		.uleb128 0x18
 4022 00e6 9742     		.uleb128 0x2117
 4023 00e8 19       		.uleb128 0x19
 4024 00e9 00       		.byte	0
 4025 00ea 00       		.byte	0
 4026 00eb 0F       		.uleb128 0xf
 4027 00ec 2E       		.uleb128 0x2e
 4028 00ed 00       		.byte	0
 4029 00ee 3F       		.uleb128 0x3f
 4030 00ef 19       		.uleb128 0x19
 4031 00f0 03       		.uleb128 0x3
 4032 00f1 0E       		.uleb128 0xe
 4033 00f2 3A       		.uleb128 0x3a
 4034 00f3 0B       		.uleb128 0xb
 4035 00f4 3B       		.uleb128 0x3b
 4036 00f5 05       		.uleb128 0x5
 4037 00f6 27       		.uleb128 0x27
 4038 00f7 19       		.uleb128 0x19
 4039 00f8 49       		.uleb128 0x49
 4040 00f9 13       		.uleb128 0x13
 4041 00fa 11       		.uleb128 0x11
 4042 00fb 01       		.uleb128 0x1
 4043 00fc 12       		.uleb128 0x12
 4044 00fd 06       		.uleb128 0x6
 4045 00fe 40       		.uleb128 0x40
 4046 00ff 18       		.uleb128 0x18
 4047 0100 9742     		.uleb128 0x2117
 4048 0102 19       		.uleb128 0x19
 4049 0103 00       		.byte	0
 4050 0104 00       		.byte	0
 4051 0105 10       		.uleb128 0x10
 4052 0106 2E       		.uleb128 0x2e
 4053 0107 01       		.byte	0x1
 4054 0108 3F       		.uleb128 0x3f
 4055 0109 19       		.uleb128 0x19
 4056 010a 03       		.uleb128 0x3
 4057 010b 0E       		.uleb128 0xe
 4058 010c 3A       		.uleb128 0x3a
 4059 010d 0B       		.uleb128 0xb
 4060 010e 3B       		.uleb128 0x3b
 4061 010f 05       		.uleb128 0x5
 4062 0110 27       		.uleb128 0x27
 4063 0111 19       		.uleb128 0x19
 4064 0112 49       		.uleb128 0x49
 4065 0113 13       		.uleb128 0x13
 4066 0114 11       		.uleb128 0x11
 4067 0115 01       		.uleb128 0x1
 4068 0116 12       		.uleb128 0x12
 4069 0117 06       		.uleb128 0x6
 4070 0118 40       		.uleb128 0x40
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 134


 4071 0119 18       		.uleb128 0x18
 4072 011a 9742     		.uleb128 0x2117
 4073 011c 19       		.uleb128 0x19
 4074 011d 01       		.uleb128 0x1
 4075 011e 13       		.uleb128 0x13
 4076 011f 00       		.byte	0
 4077 0120 00       		.byte	0
 4078 0121 11       		.uleb128 0x11
 4079 0122 2E       		.uleb128 0x2e
 4080 0123 00       		.byte	0
 4081 0124 3F       		.uleb128 0x3f
 4082 0125 19       		.uleb128 0x19
 4083 0126 03       		.uleb128 0x3
 4084 0127 0E       		.uleb128 0xe
 4085 0128 3A       		.uleb128 0x3a
 4086 0129 0B       		.uleb128 0xb
 4087 012a 3B       		.uleb128 0x3b
 4088 012b 05       		.uleb128 0x5
 4089 012c 27       		.uleb128 0x27
 4090 012d 19       		.uleb128 0x19
 4091 012e 11       		.uleb128 0x11
 4092 012f 01       		.uleb128 0x1
 4093 0130 12       		.uleb128 0x12
 4094 0131 06       		.uleb128 0x6
 4095 0132 40       		.uleb128 0x40
 4096 0133 18       		.uleb128 0x18
 4097 0134 9642     		.uleb128 0x2116
 4098 0136 19       		.uleb128 0x19
 4099 0137 00       		.byte	0
 4100 0138 00       		.byte	0
 4101 0139 12       		.uleb128 0x12
 4102 013a 34       		.uleb128 0x34
 4103 013b 00       		.byte	0
 4104 013c 03       		.uleb128 0x3
 4105 013d 08       		.uleb128 0x8
 4106 013e 3A       		.uleb128 0x3a
 4107 013f 0B       		.uleb128 0xb
 4108 0140 3B       		.uleb128 0x3b
 4109 0141 05       		.uleb128 0x5
 4110 0142 49       		.uleb128 0x49
 4111 0143 13       		.uleb128 0x13
 4112 0144 02       		.uleb128 0x2
 4113 0145 18       		.uleb128 0x18
 4114 0146 00       		.byte	0
 4115 0147 00       		.byte	0
 4116 0148 13       		.uleb128 0x13
 4117 0149 2E       		.uleb128 0x2e
 4118 014a 01       		.byte	0x1
 4119 014b 03       		.uleb128 0x3
 4120 014c 0E       		.uleb128 0xe
 4121 014d 3A       		.uleb128 0x3a
 4122 014e 0B       		.uleb128 0xb
 4123 014f 3B       		.uleb128 0x3b
 4124 0150 05       		.uleb128 0x5
 4125 0151 27       		.uleb128 0x27
 4126 0152 19       		.uleb128 0x19
 4127 0153 11       		.uleb128 0x11
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 135


 4128 0154 01       		.uleb128 0x1
 4129 0155 12       		.uleb128 0x12
 4130 0156 06       		.uleb128 0x6
 4131 0157 40       		.uleb128 0x40
 4132 0158 18       		.uleb128 0x18
 4133 0159 9642     		.uleb128 0x2116
 4134 015b 19       		.uleb128 0x19
 4135 015c 01       		.uleb128 0x1
 4136 015d 13       		.uleb128 0x13
 4137 015e 00       		.byte	0
 4138 015f 00       		.byte	0
 4139 0160 14       		.uleb128 0x14
 4140 0161 01       		.uleb128 0x1
 4141 0162 01       		.byte	0x1
 4142 0163 49       		.uleb128 0x49
 4143 0164 13       		.uleb128 0x13
 4144 0165 01       		.uleb128 0x1
 4145 0166 13       		.uleb128 0x13
 4146 0167 00       		.byte	0
 4147 0168 00       		.byte	0
 4148 0169 15       		.uleb128 0x15
 4149 016a 21       		.uleb128 0x21
 4150 016b 00       		.byte	0
 4151 016c 49       		.uleb128 0x49
 4152 016d 13       		.uleb128 0x13
 4153 016e 2F       		.uleb128 0x2f
 4154 016f 0B       		.uleb128 0xb
 4155 0170 00       		.byte	0
 4156 0171 00       		.byte	0
 4157 0172 16       		.uleb128 0x16
 4158 0173 34       		.uleb128 0x34
 4159 0174 00       		.byte	0
 4160 0175 03       		.uleb128 0x3
 4161 0176 0E       		.uleb128 0xe
 4162 0177 3A       		.uleb128 0x3a
 4163 0178 0B       		.uleb128 0xb
 4164 0179 3B       		.uleb128 0x3b
 4165 017a 0B       		.uleb128 0xb
 4166 017b 49       		.uleb128 0x49
 4167 017c 13       		.uleb128 0x13
 4168 017d 02       		.uleb128 0x2
 4169 017e 18       		.uleb128 0x18
 4170 017f 00       		.byte	0
 4171 0180 00       		.byte	0
 4172 0181 17       		.uleb128 0x17
 4173 0182 34       		.uleb128 0x34
 4174 0183 00       		.byte	0
 4175 0184 03       		.uleb128 0x3
 4176 0185 0E       		.uleb128 0xe
 4177 0186 3A       		.uleb128 0x3a
 4178 0187 0B       		.uleb128 0xb
 4179 0188 3B       		.uleb128 0x3b
 4180 0189 0B       		.uleb128 0xb
 4181 018a 49       		.uleb128 0x49
 4182 018b 13       		.uleb128 0x13
 4183 018c 3F       		.uleb128 0x3f
 4184 018d 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 136


 4185 018e 02       		.uleb128 0x2
 4186 018f 18       		.uleb128 0x18
 4187 0190 00       		.byte	0
 4188 0191 00       		.byte	0
 4189 0192 18       		.uleb128 0x18
 4190 0193 26       		.uleb128 0x26
 4191 0194 00       		.byte	0
 4192 0195 49       		.uleb128 0x49
 4193 0196 13       		.uleb128 0x13
 4194 0197 00       		.byte	0
 4195 0198 00       		.byte	0
 4196 0199 00       		.byte	0
 4197              		.section	.debug_aranges,"",%progbits
 4198 0000 7C010000 		.4byte	0x17c
 4199 0004 0200     		.2byte	0x2
 4200 0006 00000000 		.4byte	.Ldebug_info0
 4201 000a 04       		.byte	0x4
 4202 000b 00       		.byte	0
 4203 000c 0000     		.2byte	0
 4204 000e 0000     		.2byte	0
 4205 0010 00000000 		.4byte	.LFB0
 4206 0014 1C000000 		.4byte	.LFE0-.LFB0
 4207 0018 00000000 		.4byte	.LFB1
 4208 001c 1C000000 		.4byte	.LFE1-.LFB1
 4209 0020 00000000 		.4byte	.LFB2
 4210 0024 48000000 		.4byte	.LFE2-.LFB2
 4211 0028 00000000 		.4byte	.LFB3
 4212 002c 50000000 		.4byte	.LFE3-.LFB3
 4213 0030 00000000 		.4byte	.LFB4
 4214 0034 34000000 		.4byte	.LFE4-.LFB4
 4215 0038 00000000 		.4byte	.LFB5
 4216 003c 48000000 		.4byte	.LFE5-.LFB5
 4217 0040 00000000 		.4byte	.LFB6
 4218 0044 E4010000 		.4byte	.LFE6-.LFB6
 4219 0048 00000000 		.4byte	.LFB7
 4220 004c 64000000 		.4byte	.LFE7-.LFB7
 4221 0050 00000000 		.4byte	.LFB8
 4222 0054 2C000000 		.4byte	.LFE8-.LFB8
 4223 0058 00000000 		.4byte	.LFB9
 4224 005c 18000000 		.4byte	.LFE9-.LFB9
 4225 0060 00000000 		.4byte	.LFB10
 4226 0064 14000000 		.4byte	.LFE10-.LFB10
 4227 0068 00000000 		.4byte	.LFB11
 4228 006c 30000000 		.4byte	.LFE11-.LFB11
 4229 0070 00000000 		.4byte	.LFB12
 4230 0074 24000000 		.4byte	.LFE12-.LFB12
 4231 0078 00000000 		.4byte	.LFB13
 4232 007c 1C000000 		.4byte	.LFE13-.LFB13
 4233 0080 00000000 		.4byte	.LFB14
 4234 0084 48000000 		.4byte	.LFE14-.LFB14
 4235 0088 00000000 		.4byte	.LFB15
 4236 008c 34000000 		.4byte	.LFE15-.LFB15
 4237 0090 00000000 		.4byte	.LFB16
 4238 0094 4C000000 		.4byte	.LFE16-.LFB16
 4239 0098 00000000 		.4byte	.LFB17
 4240 009c 36000000 		.4byte	.LFE17-.LFB17
 4241 00a0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 137


 4242 00a4 A8000000 		.4byte	.LFE18-.LFB18
 4243 00a8 00000000 		.4byte	.LFB19
 4244 00ac 58000000 		.4byte	.LFE19-.LFB19
 4245 00b0 00000000 		.4byte	.LFB20
 4246 00b4 2C000000 		.4byte	.LFE20-.LFB20
 4247 00b8 00000000 		.4byte	.LFB21
 4248 00bc 30000000 		.4byte	.LFE21-.LFB21
 4249 00c0 00000000 		.4byte	.LFB22
 4250 00c4 2C000000 		.4byte	.LFE22-.LFB22
 4251 00c8 00000000 		.4byte	.LFB23
 4252 00cc 2C000000 		.4byte	.LFE23-.LFB23
 4253 00d0 00000000 		.4byte	.LFB24
 4254 00d4 2C000000 		.4byte	.LFE24-.LFB24
 4255 00d8 00000000 		.4byte	.LFB25
 4256 00dc 16000000 		.4byte	.LFE25-.LFB25
 4257 00e0 00000000 		.4byte	.LFB26
 4258 00e4 24000000 		.4byte	.LFE26-.LFB26
 4259 00e8 00000000 		.4byte	.LFB27
 4260 00ec 4C000000 		.4byte	.LFE27-.LFB27
 4261 00f0 00000000 		.4byte	.LFB28
 4262 00f4 28000000 		.4byte	.LFE28-.LFB28
 4263 00f8 00000000 		.4byte	.LFB29
 4264 00fc 84000000 		.4byte	.LFE29-.LFB29
 4265 0100 00000000 		.4byte	.LFB30
 4266 0104 24000000 		.4byte	.LFE30-.LFB30
 4267 0108 00000000 		.4byte	.LFB31
 4268 010c 5C000000 		.4byte	.LFE31-.LFB31
 4269 0110 00000000 		.4byte	.LFB32
 4270 0114 20000000 		.4byte	.LFE32-.LFB32
 4271 0118 00000000 		.4byte	.LFB33
 4272 011c 1C000000 		.4byte	.LFE33-.LFB33
 4273 0120 00000000 		.4byte	.LFB34
 4274 0124 1C000000 		.4byte	.LFE34-.LFB34
 4275 0128 00000000 		.4byte	.LFB35
 4276 012c 1C000000 		.4byte	.LFE35-.LFB35
 4277 0130 00000000 		.4byte	.LFB36
 4278 0134 20000000 		.4byte	.LFE36-.LFB36
 4279 0138 00000000 		.4byte	.LFB37
 4280 013c 18000000 		.4byte	.LFE37-.LFB37
 4281 0140 00000000 		.4byte	.LFB38
 4282 0144 18000000 		.4byte	.LFE38-.LFB38
 4283 0148 00000000 		.4byte	.LFB39
 4284 014c 18000000 		.4byte	.LFE39-.LFB39
 4285 0150 00000000 		.4byte	.LFB40
 4286 0154 14000000 		.4byte	.LFE40-.LFB40
 4287 0158 00000000 		.4byte	.LFB41
 4288 015c 2C000000 		.4byte	.LFE41-.LFB41
 4289 0160 00000000 		.4byte	.LFB42
 4290 0164 1C000000 		.4byte	.LFE42-.LFB42
 4291 0168 00000000 		.4byte	.LFB43
 4292 016c 44000000 		.4byte	.LFE43-.LFB43
 4293 0170 00000000 		.4byte	.LFB44
 4294 0174 C0000000 		.4byte	.LFE44-.LFB44
 4295 0178 00000000 		.4byte	0
 4296 017c 00000000 		.4byte	0
 4297              		.section	.debug_ranges,"",%progbits
 4298              	.Ldebug_ranges0:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 138


 4299 0000 00000000 		.4byte	.LFB0
 4300 0004 1C000000 		.4byte	.LFE0
 4301 0008 00000000 		.4byte	.LFB1
 4302 000c 1C000000 		.4byte	.LFE1
 4303 0010 00000000 		.4byte	.LFB2
 4304 0014 48000000 		.4byte	.LFE2
 4305 0018 00000000 		.4byte	.LFB3
 4306 001c 50000000 		.4byte	.LFE3
 4307 0020 00000000 		.4byte	.LFB4
 4308 0024 34000000 		.4byte	.LFE4
 4309 0028 00000000 		.4byte	.LFB5
 4310 002c 48000000 		.4byte	.LFE5
 4311 0030 00000000 		.4byte	.LFB6
 4312 0034 E4010000 		.4byte	.LFE6
 4313 0038 00000000 		.4byte	.LFB7
 4314 003c 64000000 		.4byte	.LFE7
 4315 0040 00000000 		.4byte	.LFB8
 4316 0044 2C000000 		.4byte	.LFE8
 4317 0048 00000000 		.4byte	.LFB9
 4318 004c 18000000 		.4byte	.LFE9
 4319 0050 00000000 		.4byte	.LFB10
 4320 0054 14000000 		.4byte	.LFE10
 4321 0058 00000000 		.4byte	.LFB11
 4322 005c 30000000 		.4byte	.LFE11
 4323 0060 00000000 		.4byte	.LFB12
 4324 0064 24000000 		.4byte	.LFE12
 4325 0068 00000000 		.4byte	.LFB13
 4326 006c 1C000000 		.4byte	.LFE13
 4327 0070 00000000 		.4byte	.LFB14
 4328 0074 48000000 		.4byte	.LFE14
 4329 0078 00000000 		.4byte	.LFB15
 4330 007c 34000000 		.4byte	.LFE15
 4331 0080 00000000 		.4byte	.LFB16
 4332 0084 4C000000 		.4byte	.LFE16
 4333 0088 00000000 		.4byte	.LFB17
 4334 008c 36000000 		.4byte	.LFE17
 4335 0090 00000000 		.4byte	.LFB18
 4336 0094 A8000000 		.4byte	.LFE18
 4337 0098 00000000 		.4byte	.LFB19
 4338 009c 58000000 		.4byte	.LFE19
 4339 00a0 00000000 		.4byte	.LFB20
 4340 00a4 2C000000 		.4byte	.LFE20
 4341 00a8 00000000 		.4byte	.LFB21
 4342 00ac 30000000 		.4byte	.LFE21
 4343 00b0 00000000 		.4byte	.LFB22
 4344 00b4 2C000000 		.4byte	.LFE22
 4345 00b8 00000000 		.4byte	.LFB23
 4346 00bc 2C000000 		.4byte	.LFE23
 4347 00c0 00000000 		.4byte	.LFB24
 4348 00c4 2C000000 		.4byte	.LFE24
 4349 00c8 00000000 		.4byte	.LFB25
 4350 00cc 16000000 		.4byte	.LFE25
 4351 00d0 00000000 		.4byte	.LFB26
 4352 00d4 24000000 		.4byte	.LFE26
 4353 00d8 00000000 		.4byte	.LFB27
 4354 00dc 4C000000 		.4byte	.LFE27
 4355 00e0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 139


 4356 00e4 28000000 		.4byte	.LFE28
 4357 00e8 00000000 		.4byte	.LFB29
 4358 00ec 84000000 		.4byte	.LFE29
 4359 00f0 00000000 		.4byte	.LFB30
 4360 00f4 24000000 		.4byte	.LFE30
 4361 00f8 00000000 		.4byte	.LFB31
 4362 00fc 5C000000 		.4byte	.LFE31
 4363 0100 00000000 		.4byte	.LFB32
 4364 0104 20000000 		.4byte	.LFE32
 4365 0108 00000000 		.4byte	.LFB33
 4366 010c 1C000000 		.4byte	.LFE33
 4367 0110 00000000 		.4byte	.LFB34
 4368 0114 1C000000 		.4byte	.LFE34
 4369 0118 00000000 		.4byte	.LFB35
 4370 011c 1C000000 		.4byte	.LFE35
 4371 0120 00000000 		.4byte	.LFB36
 4372 0124 20000000 		.4byte	.LFE36
 4373 0128 00000000 		.4byte	.LFB37
 4374 012c 18000000 		.4byte	.LFE37
 4375 0130 00000000 		.4byte	.LFB38
 4376 0134 18000000 		.4byte	.LFE38
 4377 0138 00000000 		.4byte	.LFB39
 4378 013c 18000000 		.4byte	.LFE39
 4379 0140 00000000 		.4byte	.LFB40
 4380 0144 14000000 		.4byte	.LFE40
 4381 0148 00000000 		.4byte	.LFB41
 4382 014c 2C000000 		.4byte	.LFE41
 4383 0150 00000000 		.4byte	.LFB42
 4384 0154 1C000000 		.4byte	.LFE42
 4385 0158 00000000 		.4byte	.LFB43
 4386 015c 44000000 		.4byte	.LFE43
 4387 0160 00000000 		.4byte	.LFB44
 4388 0164 C0000000 		.4byte	.LFE44
 4389 0168 00000000 		.4byte	0
 4390 016c 00000000 		.4byte	0
 4391              		.section	.debug_line,"",%progbits
 4392              	.Ldebug_line0:
 4393 0000 77040000 		.section	.debug_str,"MS",%progbits,1
 4393      02004D00 
 4393      00000201 
 4393      FB0E0D00 
 4393      01010101 
 4394              	.LASF54:
 4395 0000 72616D56 		.ascii	"ramVectorTable\000"
 4395      6563746F 
 4395      72546162 
 4395      6C6500
 4396              	.LASF34:
 4397 000f 62675472 		.ascii	"bgTrim4\000"
 4397      696D3400 
 4398              	.LASF10:
 4399 0017 75696E74 		.ascii	"uint16\000"
 4399      313600
 4400              	.LASF47:
 4401 001e 696E7453 		.ascii	"intState\000"
 4401      74617465 
 4401      00
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 140


 4402              	.LASF25:
 4403 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4403      73436C6B 
 4403      57726974 
 4403      65486663 
 4403      6C6B4469 
 4404              	.LASF100:
 4405 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4405      73436C6B 
 4405      50756D70 
 4405      436F6E66 
 4405      696700
 4406              	.LASF53:
 4407 0053 6F6C6449 		.ascii	"oldIsr\000"
 4407      737200
 4408              	.LASF89:
 4409 005a 72657456 		.ascii	"retVal\000"
 4409      616C00
 4410              	.LASF46:
 4411 0061 43794469 		.ascii	"CyDisableInts\000"
 4411      7361626C 
 4411      65496E74 
 4411      7300
 4412              	.LASF37:
 4413 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4413      656E7449 
 4413      6D6F5472 
 4413      696D3256 
 4413      616C7565 
 4414              	.LASF7:
 4415 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4415      206C6F6E 
 4415      6720756E 
 4415      7369676E 
 4415      65642069 
 4416              	.LASF98:
 4417 009b 43795379 		.ascii	"CySysTickInitVar\000"
 4417      73546963 
 4417      6B496E69 
 4417      74566172 
 4417      00
 4418              	.LASF48:
 4419 00ac 4379456E 		.ascii	"CyEnableInts\000"
 4419      61626C65 
 4419      496E7473 
 4419      00
 4420              	.LASF69:
 4421 00b9 4379536F 		.ascii	"CySoftwareReset\000"
 4421      66747761 
 4421      72655265 
 4421      73657400 
 4422              	.LASF79:
 4423 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4423      73546963 
 4423      6B456E61 
 4423      626C6549 
 4423      6E746572 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 141


 4424              	.LASF64:
 4425 00e2 4379496E 		.ascii	"CyIntGetState\000"
 4425      74476574 
 4425      53746174 
 4425      6500
 4426              	.LASF6:
 4427 00f0 6C6F6E67 		.ascii	"long long int\000"
 4427      206C6F6E 
 4427      6720696E 
 4427      7400
 4428              	.LASF0:
 4429 00fe 7369676E 		.ascii	"signed char\000"
 4429      65642063 
 4429      68617200 
 4430              	.LASF33:
 4431 010a 66726571 		.ascii	"freq\000"
 4431      00
 4432              	.LASF74:
 4433 010f 43794465 		.ascii	"CyDelayFreq\000"
 4433      6C617946 
 4433      72657100 
 4434              	.LASF103:
 4435 011b 433A5C55 		.ascii	"C:\\Users\\SHOZO\\Documents\\PSoC Creator\\CHIGASAK"
 4435      73657273 
 4435      5C53484F 
 4435      5A4F5C44 
 4435      6F63756D 
 4436 0149 495F5753 		.ascii	"I_WS_Kit\\CHIGASAKI_Utsushiomi_2020_kit.cydsn\000"
 4436      5F4B6974 
 4436      5C434849 
 4436      47415341 
 4436      4B495F55 
 4437              	.LASF83:
 4438 0176 43795379 		.ascii	"CySysTickGetReload\000"
 4438      73546963 
 4438      6B476574 
 4438      52656C6F 
 4438      616400
 4439              	.LASF4:
 4440 0189 6C6F6E67 		.ascii	"long int\000"
 4440      20696E74 
 4440      00
 4441              	.LASF65:
 4442 0192 4379496E 		.ascii	"CyIntDisable\000"
 4442      74446973 
 4442      61626C65 
 4442      00
 4443              	.LASF90:
 4444 019f 43795379 		.ascii	"CySysTickGetCallback\000"
 4444      73546963 
 4444      6B476574 
 4444      43616C6C 
 4444      6261636B 
 4445              	.LASF9:
 4446 01b4 75696E74 		.ascii	"uint8\000"
 4446      3800
 4447              	.LASF95:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 142


 4448 01ba 63796465 		.ascii	"cydelayFreqKhz\000"
 4448      6C617946 
 4448      7265714B 
 4448      687A00
 4449              	.LASF28:
 4450 01c9 656E6162 		.ascii	"enable\000"
 4450      6C6500
 4451              	.LASF13:
 4452 01d0 646F7562 		.ascii	"double\000"
 4452      6C6500
 4453              	.LASF60:
 4454 01d7 73686966 		.ascii	"shift\000"
 4454      7400
 4455              	.LASF41:
 4456 01dd 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4456      734C7664 
 4456      436C6561 
 4456      72496E74 
 4456      65727275 
 4457              	.LASF11:
 4458 01f4 75696E74 		.ascii	"uint32\000"
 4458      333200
 4459              	.LASF49:
 4460 01fb 6D61736B 		.ascii	"mask\000"
 4460      00
 4461              	.LASF42:
 4462 0200 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4462      73436C6B 
 4462      47657453 
 4462      7973636C 
 4462      6B536F75 
 4463              	.LASF62:
 4464 0218 4379496E 		.ascii	"CyIntGetPriority\000"
 4464      74476574 
 4464      5072696F 
 4464      72697479 
 4464      00
 4465              	.LASF97:
 4466 0229 63796465 		.ascii	"cydelay32kMs\000"
 4466      6C617933 
 4466      326B4D73 
 4466      00
 4467              	.LASF76:
 4468 0236 43795379 		.ascii	"CySysTickInit\000"
 4468      73546963 
 4468      6B496E69 
 4468      7400
 4469              	.LASF61:
 4470 0244 76616C75 		.ascii	"value\000"
 4470      6500
 4471              	.LASF91:
 4472 024a 43794765 		.ascii	"CyGetUniqueId\000"
 4472      74556E69 
 4472      71756549 
 4472      6400
 4473              	.LASF85:
 4474 0258 43795379 		.ascii	"CySysTickGetCountFlag\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 143


 4474      73546963 
 4474      6B476574 
 4474      436F756E 
 4474      74466C61 
 4475              	.LASF8:
 4476 026e 756E7369 		.ascii	"unsigned int\000"
 4476      676E6564 
 4476      20696E74 
 4476      00
 4477              	.LASF86:
 4478 027b 43795379 		.ascii	"CySysTickClear\000"
 4478      73546963 
 4478      6B436C65 
 4478      617200
 4479              	.LASF5:
 4480 028a 6C6F6E67 		.ascii	"long unsigned int\000"
 4480      20756E73 
 4480      69676E65 
 4480      6420696E 
 4480      7400
 4481              	.LASF82:
 4482 029c 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4482      734C7664 
 4482      47657449 
 4482      6E746572 
 4482      72757074 
 4483              	.LASF23:
 4484 02b7 696E7465 		.ascii	"interruptState\000"
 4484      72727570 
 4484      74537461 
 4484      746500
 4485              	.LASF22:
 4486 02c6 43795379 		.ascii	"CySysClkImoStop\000"
 4486      73436C6B 
 4486      496D6F53 
 4486      746F7000 
 4487              	.LASF66:
 4488 02d6 4379496E 		.ascii	"CyIntSetPending\000"
 4488      74536574 
 4488      50656E64 
 4488      696E6700 
 4489              	.LASF43:
 4490 02e6 43795379 		.ascii	"CySysGetResetReason\000"
 4490      73476574 
 4490      52657365 
 4490      74526561 
 4490      736F6E00 
 4491              	.LASF3:
 4492 02fa 73686F72 		.ascii	"short unsigned int\000"
 4492      7420756E 
 4492      7369676E 
 4492      65642069 
 4492      6E7400
 4493              	.LASF56:
 4494 030d 4379496E 		.ascii	"CyIntSetVector\000"
 4494      74536574 
 4494      56656374 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 144


 4494      6F7200
 4495              	.LASF51:
 4496 031c 6E756D62 		.ascii	"number\000"
 4496      657200
 4497              	.LASF59:
 4498 0323 7072696F 		.ascii	"priority\000"
 4498      72697479 
 4498      00
 4499              	.LASF32:
 4500 032c 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4500      73436C6B 
 4500      57726974 
 4500      65496D6F 
 4500      46726571 
 4501              	.LASF101:
 4502 0341 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4502      43313120 
 4502      352E342E 
 4502      31203230 
 4502      31363036 
 4503 0374 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4503      20726576 
 4503      6973696F 
 4503      6E203233 
 4503      37373135 
 4504 03a7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4504      66756E63 
 4504      74696F6E 
 4504      2D736563 
 4504      74696F6E 
 4505              	.LASF50:
 4506 03cf 4379496E 		.ascii	"CyIntSetSysVector\000"
 4506      74536574 
 4506      53797356 
 4506      6563746F 
 4506      7200
 4507              	.LASF26:
 4508 03e1 43795379 		.ascii	"CySysEnablePumpClock\000"
 4508      73456E61 
 4508      626C6550 
 4508      756D7043 
 4508      6C6F636B 
 4509              	.LASF16:
 4510 03f6 72656733 		.ascii	"reg32\000"
 4510      3200
 4511              	.LASF75:
 4512 03fc 43795379 		.ascii	"CySysTickStart\000"
 4512      73546963 
 4512      6B537461 
 4512      727400
 4513              	.LASF45:
 4514 040b 72657475 		.ascii	"returnStatus\000"
 4514      726E5374 
 4514      61747573 
 4514      00
 4515              	.LASF19:
 4516 0418 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 145


 4516      74797065 
 4516      00
 4517              	.LASF67:
 4518 0421 4379496E 		.ascii	"CyIntClearPending\000"
 4518      74436C65 
 4518      61725065 
 4518      6E64696E 
 4518      6700
 4519              	.LASF18:
 4520 0433 6C6F6E67 		.ascii	"long double\000"
 4520      20646F75 
 4520      626C6500 
 4521              	.LASF52:
 4522 043f 61646472 		.ascii	"address\000"
 4522      65737300 
 4523              	.LASF35:
 4524 0447 62675472 		.ascii	"bgTrim5\000"
 4524      696D3500 
 4525              	.LASF29:
 4526 044f 73797363 		.ascii	"sysclkSource\000"
 4526      6C6B536F 
 4526      75726365 
 4526      00
 4527              	.LASF88:
 4528 045c 66756E63 		.ascii	"function\000"
 4528      74696F6E 
 4528      00
 4529              	.LASF99:
 4530 0465 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4530      6F467265 
 4530      714D687A 
 4530      32526567 
 4530      00
 4531              	.LASF84:
 4532 0476 43795379 		.ascii	"CySysTickGetValue\000"
 4532      73546963 
 4532      6B476574 
 4532      56616C75 
 4532      6500
 4533              	.LASF94:
 4534 0488 63796465 		.ascii	"cydelayFreqHz\000"
 4534      6C617946 
 4534      72657148 
 4534      7A00
 4535              	.LASF58:
 4536 0496 4379496E 		.ascii	"CyIntSetPriority\000"
 4536      74536574 
 4536      5072696F 
 4536      72697479 
 4536      00
 4537              	.LASF12:
 4538 04a7 666C6F61 		.ascii	"float\000"
 4538      7400
 4539              	.LASF38:
 4540 04ad 43795379 		.ascii	"CySysLvdEnable\000"
 4540      734C7664 
 4540      456E6162 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 146


 4540      6C6500
 4541              	.LASF20:
 4542 04bc 63795379 		.ascii	"cySysTickCallback\000"
 4542      73546963 
 4542      6B43616C 
 4542      6C626163 
 4542      6B00
 4543              	.LASF57:
 4544 04ce 4379496E 		.ascii	"CyIntGetVector\000"
 4544      74476574 
 4544      56656374 
 4544      6F7200
 4545              	.LASF71:
 4546 04dd 6D696C6C 		.ascii	"milliseconds\000"
 4546      69736563 
 4546      6F6E6473 
 4546      00
 4547              	.LASF15:
 4548 04ea 72656738 		.ascii	"reg8\000"
 4548      00
 4549              	.LASF39:
 4550 04ef 74687265 		.ascii	"threshold\000"
 4550      73686F6C 
 4550      6400
 4551              	.LASF68:
 4552 04f9 43794861 		.ascii	"CyHalt\000"
 4552      6C7400
 4553              	.LASF1:
 4554 0500 756E7369 		.ascii	"unsigned char\000"
 4554      676E6564 
 4554      20636861 
 4554      7200
 4555              	.LASF2:
 4556 050e 73686F72 		.ascii	"short int\000"
 4556      7420696E 
 4556      7400
 4557              	.LASF63:
 4558 0518 4379496E 		.ascii	"CyIntEnable\000"
 4558      74456E61 
 4558      626C6500 
 4559              	.LASF55:
 4560 0524 4379496E 		.ascii	"CyIntGetSysVector\000"
 4560      74476574 
 4560      53797356 
 4560      6563746F 
 4560      7200
 4561              	.LASF27:
 4562 0536 636C6B53 		.ascii	"clkSelect\000"
 4562      656C6563 
 4562      7400
 4563              	.LASF72:
 4564 0540 43794465 		.ascii	"CyDelayUs\000"
 4564      6C617955 
 4564      7300
 4565              	.LASF44:
 4566 054a 72656173 		.ascii	"reason\000"
 4566      6F6E00
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 147


 4567              	.LASF14:
 4568 0551 63686172 		.ascii	"char\000"
 4568      00
 4569              	.LASF17:
 4570 0556 63796973 		.ascii	"cyisraddress\000"
 4570      72616464 
 4570      72657373 
 4570      00
 4571              	.LASF77:
 4572 0563 43795379 		.ascii	"CySysTickEnable\000"
 4572      73546963 
 4572      6B456E61 
 4572      626C6500 
 4573              	.LASF30:
 4574 0573 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4574      73436C6B 
 4574      57726974 
 4574      65537973 
 4574      636C6B44 
 4575              	.LASF87:
 4576 058a 43795379 		.ascii	"CySysTickSetCallback\000"
 4576      73546963 
 4576      6B536574 
 4576      43616C6C 
 4576      6261636B 
 4577              	.LASF93:
 4578 059f 43795379 		.ascii	"CySysTickCallbacks\000"
 4578      73546963 
 4578      6B43616C 
 4578      6C626163 
 4578      6B7300
 4579              	.LASF92:
 4580 05b2 756E6971 		.ascii	"uniqueId\000"
 4580      75654964 
 4580      00
 4581              	.LASF70:
 4582 05bb 43794465 		.ascii	"CyDelay\000"
 4582      6C617900 
 4583              	.LASF80:
 4584 05c3 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4584      73546963 
 4584      6B446973 
 4584      61626C65 
 4584      496E7465 
 4585              	.LASF40:
 4586 05dd 43795379 		.ascii	"CySysLvdDisable\000"
 4586      734C7664 
 4586      44697361 
 4586      626C6500 
 4587              	.LASF96:
 4588 05ed 63796465 		.ascii	"cydelayFreqMhz\000"
 4588      6C617946 
 4588      7265714D 
 4588      687A00
 4589              	.LASF78:
 4590 05fc 43795379 		.ascii	"CySysTickStop\000"
 4590      73546963 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccy7XdOF.s 			page 148


 4590      6B53746F 
 4590      7000
 4591              	.LASF31:
 4592 060a 64697669 		.ascii	"divider\000"
 4592      64657200 
 4593              	.LASF21:
 4594 0612 43795379 		.ascii	"CySysClkImoStart\000"
 4594      73436C6B 
 4594      496D6F53 
 4594      74617274 
 4594      00
 4595              	.LASF36:
 4596 0623 6E657749 		.ascii	"newImoTrim2Value\000"
 4596      6D6F5472 
 4596      696D3256 
 4596      616C7565 
 4596      00
 4597              	.LASF102:
 4598 0634 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4598      72617465 
 4598      645F536F 
 4598      75726365 
 4598      5C50536F 
 4599              	.LASF73:
 4600 0653 6D696372 		.ascii	"microseconds\000"
 4600      6F736563 
 4600      6F6E6473 
 4600      00
 4601              	.LASF24:
 4602 0660 746D7052 		.ascii	"tmpReg\000"
 4602      656700
 4603              	.LASF81:
 4604 0667 43795379 		.ascii	"CySysTickSetReload\000"
 4604      73546963 
 4604      6B536574 
 4604      52656C6F 
 4604      616400
 4605              	.LASF104:
 4606 067a 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4606      73546963 
 4606      6B536572 
 4606      76696365 
 4606      43616C6C 
 4607              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
